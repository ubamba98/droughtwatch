diff --git a/Efficientnet-b3-765.ipynb b/Efficientnet-b3-765.ipynb
index 17f1956..d881f10 100644
--- a/Efficientnet-b3-765.ipynb
+++ b/Efficientnet-b3-765.ipynb
@@ -40,14 +40,23 @@
    "cell_type": "code",
    "execution_count": 2,
    "metadata": {},
+   "outputs": [],
+   "source": [
+    "os.environ['WANDB_NOTEBOOK_NAME'] = \"efficentnet-b3-765\""
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 3,
+   "metadata": {},
    "outputs": [
     {
      "data": {
       "text/html": [
        "\n",
        "                Logging results to <a href=\"https://wandb.com\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-       "                Project page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch</a><br/>\n",
-       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/17rqrqo6\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/17rqrqo6</a><br/>\n",
+       "                Project page: <a href=\"https://app.wandb.ai/ubamba98/dr-challenge\" target=\"_blank\">https://app.wandb.ai/ubamba98/dr-challenge</a><br/>\n",
+       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/dr-challenge/runs/3f9g2ypb\" target=\"_blank\">https://app.wandb.ai/ubamba98/dr-challenge/runs/3f9g2ypb</a><br/>\n",
        "            "
       ],
       "text/plain": [
@@ -58,35 +67,19 @@
      "output_type": "display_data"
     },
     {
-     "name": "stderr",
-     "output_type": "stream",
-     "text": [
-      "Failed to query for notebook name, you can set it manually with the WANDB_NOTEBOOK_NAME environment variable\n"
-     ]
-    },
-    {
      "data": {
       "text/plain": [
-       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/17rqrqo6"
+       "W&B Run: https://app.wandb.ai/ubamba98/dr-challenge/runs/3f9g2ypb"
       ]
      },
-     "execution_count": 2,
+     "execution_count": 3,
      "metadata": {},
      "output_type": "execute_result"
     }
    ],
    "source": [
     "import wandb\n",
-    "wandb.init(project='droughtwatch', name='efficentnet-b3-765')"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 3,
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "os.environ['WANDB_NOTEBOOK_NAME'] = \"efficentnet-b3-765\""
+    "wandb.init(project='dr-challenge', name='efficentnet-b3-765')"
    ]
   },
   {
@@ -611,7 +604,7 @@
     {
      "data": {
       "text/plain": [
-       "[<wandb.wandb_torch.TorchGraph at 0x7f228afc5d30>]"
+       "[<wandb.wandb_torch.TorchGraph at 0x7f4190d12940>]"
       ]
      },
      "execution_count": 10,
@@ -734,7 +727,7 @@
     "train_loader = DataLoader(\n",
     "                dataset=ImageDataset(transform=train_transform, \n",
     "                                     mode = \"train\", \n",
-    "                                    weights = [1, 4, 4, 6]),\n",
+    "                                     weights = [1, 4, 4, 6]),\n",
     "                shuffle=True,\n",
     "                batch_size=256,\n",
     "                num_workers=4\n",
@@ -800,7 +793,7 @@
     {
      "data": {
       "application/vnd.jupyter.widget-view+json": {
-       "model_id": "8d810d63e16c408da628a99fea7c2ed6",
+       "model_id": "bd9766b5b4694a5da1982110910d38ab",
        "version_major": 2,
        "version_minor": 0
       },
@@ -825,7 +818,7 @@
     {
      "data": {
       "application/vnd.jupyter.widget-view+json": {
-       "model_id": "c6b7f436057946c1bb6328021db6d842",
+       "model_id": "472eb835c965404493b13b7c1abb6140",
        "version_major": 2,
        "version_minor": 0
       },
@@ -850,7 +843,7 @@
     {
      "data": {
       "application/vnd.jupyter.widget-view+json": {
-       "model_id": "9064e4c4df6e4021ab5875d64c6466ed",
+       "model_id": "b392e3ed6ceb4b92847cc17bc469c173",
        "version_major": 2,
        "version_minor": 0
       },
@@ -875,32 +868,7 @@
     {
      "data": {
       "application/vnd.jupyter.widget-view+json": {
-       "model_id": "050ca6562e75419d9ee9a6cf1c047bee",
-       "version_major": 2,
-       "version_minor": 0
-      },
-      "text/plain": [
-       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "\n",
-      "Calculating accuracies\n",
-      "Train accuracy:  0.2627868635921119 ;    Val accuracy:  0.26222222222222225 \n",
-      "\n",
-      "Starting epoch 5 / 5\n"
-     ]
-    },
-    {
-     "data": {
-      "application/vnd.jupyter.widget-view+json": {
-       "model_id": "9c245188cf204171973be920214d3789",
+       "model_id": "9f66a8f81cf948f984eb0be32815bc7b",
        "version_major": 2,
        "version_minor": 0
       },
@@ -912,12 +880,18 @@
      "output_type": "display_data"
     },
     {
-     "name": "stdout",
+     "name": "stderr",
      "output_type": "stream",
      "text": [
+      "IOPub message rate exceeded.\n",
+      "The notebook server will temporarily stop sending output\n",
+      "to the client in order to avoid crashing it.\n",
+      "To change this limit, set the config variable\n",
+      "`--NotebookApp.iopub_msg_rate_limit`.\n",
       "\n",
-      "Calculating accuracies\n",
-      "Train accuracy:  0.2653650279586515 ;    Val accuracy:  0.262789598108747 \n",
+      "Current values:\n",
+      "NotebookApp.iopub_msg_rate_limit=1000.0 (msgs/sec)\n",
+      "NotebookApp.rate_limit_window=3.0 (secs)\n",
       "\n"
      ]
     }
@@ -981,7 +955,7 @@
     {
      "data": {
       "application/vnd.jupyter.widget-view+json": {
-       "model_id": "4102bf77807247b3ac7945cc64495569",
+       "model_id": "b9fbb67c6d204f2fbf786fe109ac7dba",
        "version_major": 2,
        "version_minor": 0
       },
@@ -1006,7 +980,7 @@
     {
      "data": {
       "application/vnd.jupyter.widget-view+json": {
-       "model_id": "42cb3b3d2255480b87fbbeb3a5cbc9e5",
+       "model_id": "a23cb581ad3b4e39b462fdaab4b4f4ed",
        "version_major": 2,
        "version_minor": 0
       },
@@ -1021,8 +995,6 @@
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "\n",
-      "Calculating accuracies\n",
       "Train accuracy:  0.6266651664065672 ;    Val accuracy:  0.6672340425531915\n",
       "*** New optimal found, saving state ***\n",
       "Starting epoch 3 / 10\n"
@@ -1031,7 +1003,7 @@
     {
      "data": {
       "application/vnd.jupyter.widget-view+json": {
-       "model_id": "44fd0595c206488a8b3931442d48b77b",
+       "model_id": "95f317c4650d4f029a7dc42c9484b467",
        "version_major": 2,
        "version_minor": 0
       },
@@ -1055,7 +1027,7 @@
     {
      "data": {
       "application/vnd.jupyter.widget-view+json": {
-       "model_id": "18b353ad464b41d8a77ba073859c2250",
+       "model_id": "bba904860a0c448f8c9956683bc0fda2",
        "version_major": 2,
        "version_minor": 0
       },
@@ -1067,31 +1039,22 @@
      "output_type": "display_data"
     },
     {
-     "name": "stdout",
+     "name": "stderr",
      "output_type": "stream",
      "text": [
+      "IOPub message rate exceeded.\n",
+      "The notebook server will temporarily stop sending output\n",
+      "to the client in order to avoid crashing it.\n",
+      "To change this limit, set the config variable\n",
+      "`--NotebookApp.iopub_msg_rate_limit`.\n",
       "\n",
-      "Calculating accuracies\n",
-      "Train accuracy:  0.672612262669452 ;    Val accuracy:  0.6879432624113475\n",
-      "*** New optimal found, saving state ***\n",
-      "Starting epoch 5 / 10\n"
+      "Current values:\n",
+      "NotebookApp.iopub_msg_rate_limit=1000.0 (msgs/sec)\n",
+      "NotebookApp.rate_limit_window=3.0 (secs)\n",
+      "\n"
      ]
     },
     {
-     "data": {
-      "application/vnd.jupyter.widget-view+json": {
-       "model_id": "f2b7deccfd654de7a1b3493fc05039ef",
-       "version_major": 2,
-       "version_minor": 0
-      },
-      "text/plain": [
-       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
      "name": "stdout",
      "output_type": "stream",
      "text": [
@@ -1104,7 +1067,7 @@
     {
      "data": {
       "application/vnd.jupyter.widget-view+json": {
-       "model_id": "5ffa3775134444b2b27ecba844943292",
+       "model_id": "badfa9631b2a4a9ea7296173c4ee9ce0",
        "version_major": 2,
        "version_minor": 0
       },
@@ -1128,7 +1091,7 @@
     {
      "data": {
       "application/vnd.jupyter.widget-view+json": {
-       "model_id": "e9fd6e73c66c447eaeb751d73b6e5932",
+       "model_id": "c24d8b63210d45369fc11ce149bd0e88",
        "version_major": 2,
        "version_minor": 0
       },
@@ -1153,7 +1116,7 @@
     {
      "data": {
       "application/vnd.jupyter.widget-view+json": {
-       "model_id": "58206d6ea045486ba6619ccce291de08",
+       "model_id": "977dc35617754dad8a751526178e44ed",
        "version_major": 2,
        "version_minor": 0
       },
@@ -1177,7 +1140,7 @@
     {
      "data": {
       "application/vnd.jupyter.widget-view+json": {
-       "model_id": "77ef77fb3fc94e85aaf8ab463af9772f",
+       "model_id": "ad276ede8c2b4d038694ca528a703f50",
        "version_major": 2,
        "version_minor": 0
       },
@@ -1201,7 +1164,7 @@
     {
      "data": {
       "application/vnd.jupyter.widget-view+json": {
-       "model_id": "ed58c7ced5124a7bbacef133613c3514",
+       "model_id": "258ad8f45dbf47c5945aae9df5a92961",
        "version_major": 2,
        "version_minor": 0
       },
@@ -1255,7 +1218,7 @@
     "    df_data=np.array([train_acc_list, val_acc_list]).T\n",
     "    df = pd.DataFrame(df_data,columns = ['train_accuracy','test_accuracy'])\n",
     "    df.to_csv('logs/b3-765.csv')\n",
-    "    \n",
+    "\n",
     "    if best_acc<val_acc:\n",
     "        best_acc=val_acc\n",
     "        print(\"*** New optimal found, saving state ***\")\n",
@@ -1265,7 +1228,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 20,
+   "execution_count": 21,
    "metadata": {},
    "outputs": [
     {
@@ -1304,11 +1267,11 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 21,
+   "execution_count": 22,
    "metadata": {},
    "outputs": [],
    "source": [
-    "num_epochs3=30"
+    "num_epochs3=22"
    ]
   },
   {
@@ -1320,13 +1283,13 @@
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Starting epoch 11 / 30\n"
+      "Starting epoch 11 / 22\n"
      ]
     },
     {
      "data": {
       "application/vnd.jupyter.widget-view+json": {
-       "model_id": "52d5408348fe4d58af21708d7efae7aa",
+       "model_id": "452e29243fa84aaaafb4e555cc083f1a",
        "version_major": 2,
        "version_minor": 0
       },
@@ -1345,13 +1308,13 @@
       "Calculating accuracies\n",
       "Train accuracy:  0.8186220738908209 ;    Val accuracy:  0.7677541371158393\n",
       "*** New optimal found, saving state ***\n",
-      "Starting epoch 12 / 30\n"
+      "Starting epoch 12 / 22\n"
      ]
     },
     {
      "data": {
       "application/vnd.jupyter.widget-view+json": {
-       "model_id": "833629248a7448b6be13c5e71259f597",
+       "model_id": "2844a58389fd4d12ad3f3ffa8f097778",
        "version_major": 2,
        "version_minor": 0
       },
@@ -1370,13 +1333,233 @@
       "Calculating accuracies\n",
       "Train accuracy:  0.8241650523957337 ;    Val accuracy:  0.7709692671394799\n",
       "*** New optimal found, saving state ***\n",
-      "Starting epoch 13 / 30\n"
+      "Starting epoch 13 / 22\n"
+     ]
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "e56daa566449482f9c80f5506614f4b7",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "HBox(children=(FloatProgress(value=0.0, max=335.0), HTML(value='')))"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "\n",
+      "Calculating accuracies\n",
+      "Train accuracy:  0.8255303755222069 ;    Val accuracy:  0.7713475177304965\n",
+      "*** New optimal found, saving state ***\n",
+      "Starting epoch 14 / 22\n"
+     ]
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "3f1ed24cd6fb45f88dc8fde16f4da8b0",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "HBox(children=(FloatProgress(value=0.0, max=335.0), HTML(value='')))"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "\n",
+      "Calculating accuracies\n",
+      "Train accuracy:  0.8277358974957406 ;    Val accuracy:  0.7716312056737589\n",
+      "*** New optimal found, saving state ***\n",
+      "Starting epoch 15 / 22\n"
+     ]
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "654fedbda83946f8ace245b94d3a37d3",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "HBox(children=(FloatProgress(value=0.0, max=335.0), HTML(value='')))"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "\n",
+      "Calculating accuracies\n",
+      "Train accuracy:  0.8315634700212383 ;    Val accuracy:  0.7734278959810875\n",
+      "*** New optimal found, saving state ***\n",
+      "Starting epoch 16 / 22\n"
+     ]
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "9091ed921a194eeb9df55cedb07ee652",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "HBox(children=(FloatProgress(value=0.0, max=335.0), HTML(value='')))"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "\n",
+      "Calculating accuracies\n",
+      "Train accuracy:  0.8326837351506523 ;    Val accuracy:  0.7704018912529551\n",
+      "Starting epoch 17 / 22\n"
+     ]
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "b687324083e34bacab01aaa8b0bac47d",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "HBox(children=(FloatProgress(value=0.0, max=335.0), HTML(value='')))"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "\n",
+      "Calculating accuracies\n",
+      "Train accuracy:  0.8339090251359489 ;    Val accuracy:  0.7711583924349882\n",
+      "Starting epoch 18 / 22\n"
+     ]
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "ec29610939954b608a8f767c2961b996",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "HBox(children=(FloatProgress(value=0.0, max=335.0), HTML(value='')))"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "\n",
+      "Calculating accuracies\n",
+      "Train accuracy:  0.8328471071486918 ;    Val accuracy:  0.7719148936170213\n",
+      "Starting epoch 19 / 22\n"
+     ]
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "66a5a0d815d94c4780a5d9266b142f46",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "HBox(children=(FloatProgress(value=0.0, max=335.0), HTML(value='')))"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "\n",
+      "Calculating accuracies\n",
+      "Train accuracy:  0.8373164982379163 ;    Val accuracy:  0.7720094562647755\n",
+      "Starting epoch 20 / 22\n"
+     ]
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "f8efe24435744c2780c132c6fecdd6b3",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "HBox(children=(FloatProgress(value=0.0, max=335.0), HTML(value='')))"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "\n",
+      "Calculating accuracies\n",
+      "Train accuracy:  0.8368847293859547 ;    Val accuracy:  0.7750354609929078\n",
+      "*** New optimal found, saving state ***\n",
+      "Starting epoch 21 / 22\n"
      ]
     },
     {
      "data": {
       "application/vnd.jupyter.widget-view+json": {
-       "model_id": "66282e0ef73c4dc09e39a0da8a044b56",
+       "model_id": "a3000ae7194c4c21aeabb20db61614c1",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "HBox(children=(FloatProgress(value=0.0, max=335.0), HTML(value='')))"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "\n",
+      "Calculating accuracies\n",
+      "Train accuracy:  0.8385651270800756 ;    Val accuracy:  0.774468085106383\n",
+      "Starting epoch 22 / 22\n"
+     ]
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "bedbef96c76340298e19e1eb69c15179",
        "version_major": 2,
        "version_minor": 0
       },
@@ -1394,21 +1577,18 @@
     "# # we flag all parameters as requiring gradients.\n",
     "for param in model.parameters():\n",
     "    param.requires_grad = True\n",
-    "\n",
-    "best_acc=0\n",
-    "\n",
     "# Construct a new Optimizer that will update all model parameters. Note the\n",
     "# small learning rate.\n",
     "optimizer2 = torch.optim.Adam(model.parameters(), lr= 3e-4)\n",
     "#adapt learning rate stepwise\n",
-    "exp_lr_scheduler2 = lr_scheduler.StepLR(optimizer2, step_size=12, gamma=0.1)\n",
+    "# exp_lr_scheduler2 = lr_scheduler.StepLR(optimizer2, step_size=12, gamma=0.1)\n",
     "\n",
     "# Train the entire model for a few more epochs, checking accuracy on the\n",
     "# train and validation sets after each epoch.\n",
     "\n",
     "for epoch in range(num_epochs2, num_epochs3):\n",
     "    print('Starting epoch %d / %d' % (epoch + 1, num_epochs3))\n",
-    "    run_epoch(model, loss_fn, train_loader, optimizer2, dtype, exp_lr_scheduler2)\n",
+    "    run_epoch(model, loss_fn, train_loader, optimizer2, dtype)\n",
     "\n",
     "    print('Calculating accuracies')\n",
     "    train_acc = check_accuracy(model, train_loader, dtype)\n",
@@ -1418,9 +1598,6 @@
     "    val_acc_list.append(val_acc)\n",
     "    \n",
     "    print('Train accuracy: ', train_acc, ';    Val accuracy: ', val_acc)\n",
-    "    wandb.log({\n",
-    "        \"val_acc\": val_acc,\n",
-    "        \"train_acc\": train_acc})\n",
     "    df_data=np.array([train_acc_list, val_acc_list]).T\n",
     "    df = pd.DataFrame(df_data,columns = ['train_accuracy','test_accuracy'])\n",
     "    df.to_csv('logs/b3-765.csv')\n",
@@ -1438,6 +1615,15 @@
    "metadata": {},
    "outputs": [],
    "source": [
+    "wandb.log({\"val_acc\": best_acc})"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": [
     "!sudo shutdown -h now"
    ]
   },
@@ -1454,18 +1640,6 @@
    "display_name": "Python 3",
    "language": "python",
    "name": "python3"
-  },
-  "language_info": {
-   "codemirror_mode": {
-    "name": "ipython",
-    "version": 3
-   },
-   "file_extension": ".py",
-   "mimetype": "text/x-python",
-   "name": "python",
-   "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython3",
-   "version": "3.7.3"
   }
  },
  "nbformat": 4,
diff --git a/wandb/run-20200120_081855-gzutdaae/config.yaml b/wandb/run-20200120_081855-gzutdaae/config.yaml
deleted file mode 100644
index 1189525..0000000
--- a/wandb/run-20200120_081855-gzutdaae/config.yaml
+++ /dev/null
@@ -1,8 +0,0 @@
-wandb_version: 1
-
-_wandb:
-  desc: null
-  value:
-    cli_version: 0.8.21
-    is_jupyter_run: true
-    python_version: 3.7.3
diff --git a/wandb/run-20200120_081855-gzutdaae/diff.patch b/wandb/run-20200120_081855-gzutdaae/diff.patch
deleted file mode 100644
index 1aee41d..0000000
--- a/wandb/run-20200120_081855-gzutdaae/diff.patch
+++ /dev/null
@@ -1,370 +0,0 @@
-diff --git a/Efficientnet-b3-765.ipynb b/Efficientnet-b3-765.ipynb
-index e21879d..451f688 100644
---- a/Efficientnet-b3-765.ipynb
-+++ b/Efficientnet-b3-765.ipynb
-@@ -842,8 +842,75 @@
-      "output_type": "stream",
-      "text": [
-       "\n",
--      "Calculating accuracies\n"
-+      "Calculating accuracies\n",
-+      "Train accuracy:  0.258383926343752 ;    Val accuracy:  0.25011820330969264 \n",
-+      "\n",
-+      "Starting epoch 3 / 5\n"
-+     ]
-+    },
-+    {
-+     "data": {
-+      "application/vnd.jupyter.widget-view+json": {
-+       "model_id": "ee8db6d9d3e645098855574b993436d3",
-+       "version_major": 2,
-+       "version_minor": 0
-+      },
-+      "text/plain": [
-+       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-+      ]
-+     },
-+     "metadata": {},
-+     "output_type": "display_data"
-+    },
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "\n",
-+      "Calculating accuracies\n",
-+      "Train accuracy:  0.2603407873430231 ;    Val accuracy:  0.24964539007092199 \n",
-+      "\n",
-+      "Starting epoch 4 / 5\n"
-      ]
-+    },
-+    {
-+     "data": {
-+      "application/vnd.jupyter.widget-view+json": {
-+       "model_id": "5ba7659d72cc455e9e844b732455ff47",
-+       "version_major": 2,
-+       "version_minor": 0
-+      },
-+      "text/plain": [
-+       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-+      ]
-+     },
-+     "metadata": {},
-+     "output_type": "display_data"
-+    },
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "\n",
-+      "Calculating accuracies\n",
-+      "Train accuracy:  0.2627868635921119 ;    Val accuracy:  0.26222222222222225 \n",
-+      "\n",
-+      "Starting epoch 5 / 5\n"
-+     ]
-+    },
-+    {
-+     "data": {
-+      "application/vnd.jupyter.widget-view+json": {
-+       "model_id": "f1e1f2aec05f43f6b6fbcbb5851eaa0f",
-+       "version_major": 2,
-+       "version_minor": 0
-+      },
-+      "text/plain": [
-+       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-+      ]
-+     },
-+     "metadata": {},
-+     "output_type": "display_data"
-     }
-    ],
-    "source": [
-diff --git a/wandb/run-20200120_081855-gzutdaae/diff.patch b/wandb/run-20200120_081855-gzutdaae/diff.patch
-index c6015c1..e69de29 100644
---- a/wandb/run-20200120_081855-gzutdaae/diff.patch
-+++ b/wandb/run-20200120_081855-gzutdaae/diff.patch
-@@ -1,201 +0,0 @@
--diff --git a/Efficientnet-b3-765.ipynb b/Efficientnet-b3-765.ipynb
--index 691c745..9cf4f55 100644
----- a/Efficientnet-b3-765.ipynb
--+++ b/Efficientnet-b3-765.ipynb
--@@ -47,7 +47,7 @@
--        "\n",
--        "                Logging results to <a href=\"https://wandb.com\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
--        "                Project page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch</a><br/>\n",
---       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm</a><br/>\n",
--+       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae</a><br/>\n",
--        "            "
--       ],
--       "text/plain": [
--@@ -67,7 +67,7 @@
--     {
--      "data": {
--       "text/plain": [
---       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm"
--+       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae"
--       ]
--      },
--      "execution_count": 2,
--@@ -77,7 +77,16 @@
--    ],
--    "source": [
--     "import wandb\n",
---    "wandb.init(project=\"droughtwatch\")"
--+    "wandb.init(project='droughtwatch', name='efficentnet-b3-765')"
--+   ]
--+  },
--+  {
--+   "cell_type": "code",
--+   "execution_count": 3,
--+   "metadata": {},
--+   "outputs": [],
--+   "source": [
--+    "os.environ['WANDB_NOTEBOOK_NAME'] = \"efficentnet-b3-765\""
--    ]
--   },
--   {
--@@ -89,7 +98,7 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 3,
--+   "execution_count": 4,
--    "metadata": {},
--    "outputs": [],
--    "source": [
--@@ -112,7 +121,7 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 4,
--+   "execution_count": 5,
--    "metadata": {},
--    "outputs": [],
--    "source": [
--@@ -147,7 +156,7 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 5,
--+   "execution_count": 6,
--    "metadata": {},
--    "outputs": [],
--    "source": [
--@@ -188,7 +197,7 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 6,
--+   "execution_count": 7,
--    "metadata": {},
--    "outputs": [],
--    "source": [
--@@ -226,7 +235,7 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 7,
--+   "execution_count": 8,
--    "metadata": {},
--    "outputs": [],
--    "source": [
--@@ -244,7 +253,7 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 8,
--+   "execution_count": 9,
--    "metadata": {},
--    "outputs": [
--     {
--@@ -584,7 +593,7 @@
--        ")"
--       ]
--      },
---     "execution_count": 8,
--+     "execution_count": 9,
--      "metadata": {},
--      "output_type": "execute_result"
--     }
--@@ -597,16 +606,16 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 9,
--+   "execution_count": 10,
--    "metadata": {},
--    "outputs": [
--     {
--      "data": {
--       "text/plain": [
---       "[<wandb.wandb_torch.TorchGraph at 0x7f4ae970e6d8>]"
--+       "[<wandb.wandb_torch.TorchGraph at 0x7fba6796b390>]"
--       ]
--      },
---     "execution_count": 9,
--+     "execution_count": 10,
--      "metadata": {},
--      "output_type": "execute_result"
--     }
--@@ -624,7 +633,7 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 10,
--+   "execution_count": 11,
--    "metadata": {},
--    "outputs": [],
--    "source": [
--@@ -651,57 +660,20 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 11,
---   "metadata": {},
---   "outputs": [],
---   "source": [
---    "class ImageDataset(Dataset):\n",
---    "        \n",
---    "    def __init__(self, transform=None, limit=None, mode = \"train\", train_dir=\"train\", val_dir=\"val\", weights = [1, 1, 1, 1]):\n",
---    "        \n",
---    "        self.transform = transform\n",
---    "        self.limit = limit\n",
---    "        self.mode = mode\n",
---    "        self.train_dir = train_dir\n",
---    "        self.val_dir = val_dir\n",
---    "        self.train_files=[]\n",
---    "        for i in range(4):\n",
---    "            self.train_files += glob.glob(self.train_dir+\"/*\"+str(i)+\"/*\") * weights[i]\n",
---    "        self.val_files=glob.glob(self.val_dir+\"/*/*\")\n",
---    "        self.train_sample_count = len(self.train_files)\n",
---    "        self.val_sample_count = len(self.val_files)\n",
---    "        \n",
---    "    def __len__(self):\n",
---    "        if self.mode == \"train\":\n",
---    "            return (self.train_sample_count)\n",
---    "        else:\n",
---    "            return(self.val_sample_count)\n",
---    "\n",
---    "    def __getitem__(self, idx): \n",
---    "        if self.mode == \"train\":\n",
---    "            return (self.get_img(self.train_files[idx]), int(self.train_files[idx].split('/')[-2].split(\"_\")[-1]))\n",
---    "        if self.mode == \"val\":\n",
---    "            return (self.get_img(self.val_files[idx]), int(self.val_files[idx].split('/')[-2].split(\"_\")[-1]))\n",
---    "        \n",
---    "    def get_img(self, img_dir):\n",
---    "        img = np.load(img_dir)\n",
---    "        #img = img.transpose((1, 2, 0))\n",
---    "        img = img[:, :, [6, 5, 4]] ## Select for channels to run\n",
---    "        img = self.transform(img)\n",
---    "        img = torch.from_numpy(np.moveaxis(img, -1, 0)).float()  \n",
---    "        return img"
---   ]
---  },
---  {
---   "cell_type": "code",
---   "execution_count": 12,
--+   "execution_count": 14,
--    "metadata": {},
--    "outputs": [
--     {
---     "name": "stdout",
---     "output_type": "stream",
---     "text": [
---      "{'train': 799, 'val': 331}\n"
--+     "ename": "ValueError",
--+     "evalue": "num_samples should be a positive integer value, but got num_samples=0",
--+     "output_type": "error",
--+     "traceback": [
--+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
--+      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
--+      "\u001b[0;32m<ipython-input-14-06a69a7d0d7b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      5\u001b[0m                 \u001b[0mshuffle\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m                 \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m256\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m                 \u001b[0mnum_workers\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m             )\n\u001b[1;32m      9\u001b[0m valid_loader = DataLoader(\n",
--+      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/torch/utils/data/dataloader.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, dataset, batch_size, shuffle, sampler, batch_sampler, num_workers, collate_fn, pin_memory, drop_last, timeout, worker_init_fn, multiprocessing_context)\u001b[0m\n\u001b[1;32m    211\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# map-style\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    212\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mshuffle\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 213\u001b[0;31m                     \u001b[0msampler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mRandomSampler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    214\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    215\u001b[0m                     \u001b[0msampler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSequentialSampler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
--+      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/torch/utils/data/sampler.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data_source, replacement, num_samples)\u001b[0m\n\u001b[1;32m     92\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnum_samples\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnum_samples\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     93\u001b[0m             raise ValueError(\"num_samples should be a positive integer \"\n\u001b[0;32m---> 94\u001b[0;31m                              \"value, but got num_samples={}\".format(self.num_samples))\n\u001b[0m\u001b[1;32m     95\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     96\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
--+      "\u001b[0;31mValueError\u001b[0m: num_samples should be a positive integer value, but got num_samples=0"
--      ]
--     }
--    ],
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-index bebeecd..fbd17e8 100644
---- a/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-@@ -1,26 +1,10 @@
--{"system.network.sent":15797,"system.gpu.0.powerPercent":41.9,"system.network.recv":65303,"system.disk":22.4,"system.gpu.0.powerWatts":29.33,"_wandb":true,"system.gpu.0.temp":61,"system.gpu.0.memory":0,"system.gpu.0.gpu":0,"_runtime":1,"system.proc.memory.rssMB":262.66,"system.proc.memory.availableMB":14300.84,"system.cpu":13.75,"system.proc.cpu.threads":17,"system.memory":4.9,"system.proc.memory.percent":1.75,"system.gpu.0.memoryAllocated":0,"_timestamp":1579508336}
--{"system.gpu.0.gpu": 10.2, "system.gpu.0.memory": 7.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 68.0, "system.gpu.0.powerWatts": 37.18, "system.gpu.0.powerPercent": 53.11, "system.cpu": 6.9, "system.memory": 22.68, "system.disk": 22.4, "system.proc.memory.availableMB": 11632.24, "system.proc.memory.rssMB": 2960.92, "system.proc.memory.percent": 19.68, "system.proc.cpu.threads": 27.87, "system.network.sent": 244468, "system.network.recv": 251940, "_wandb": true, "_timestamp": 1579508635, "_runtime": 42}
--{"system.gpu.0.gpu": 5.47, "system.gpu.0.memory": 4.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 69.93, "system.gpu.0.powerWatts": 38.27, "system.gpu.0.powerPercent": 54.67, "system.cpu": 6.63, "system.memory": 22.78, "system.disk": 22.4, "system.proc.memory.availableMB": 11615.58, "system.proc.memory.rssMB": 2961.46, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 339293, "system.network.recv": 337753, "_wandb": true, "_timestamp": 1579508665, "_runtime": 73}
--{"system.gpu.0.gpu": 8.87, "system.gpu.0.memory": 6.47, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 72.07, "system.gpu.0.powerWatts": 40.58, "system.gpu.0.powerPercent": 57.97, "system.cpu": 7.19, "system.memory": 22.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11605.85, "system.proc.memory.rssMB": 2961.46, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 431682, "system.network.recv": 429114, "_wandb": true, "_timestamp": 1579508695, "_runtime": 103}
--{"system.gpu.0.gpu": 8.67, "system.gpu.0.memory": 5.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 73.27, "system.gpu.0.powerWatts": 36.56, "system.gpu.0.powerPercent": 52.23, "system.cpu": 7.94, "system.memory": 22.88, "system.disk": 22.4, "system.proc.memory.availableMB": 11602.32, "system.proc.memory.rssMB": 2961.81, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 534529, "system.network.recv": 530758, "_wandb": true, "_timestamp": 1579508725, "_runtime": 133}
--{"system.gpu.0.gpu": 8.87, "system.gpu.0.memory": 5.8, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 74.93, "system.gpu.0.powerWatts": 43.21, "system.gpu.0.powerPercent": 61.73, "system.cpu": 8.45, "system.memory": 22.98, "system.disk": 22.4, "system.proc.memory.availableMB": 11587.51, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 635626, "system.network.recv": 634655, "_wandb": true, "_timestamp": 1579508756, "_runtime": 163}
--{"system.gpu.0.gpu": 9.87, "system.gpu.0.memory": 7.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 42.67, "system.gpu.0.powerPercent": 60.96, "system.cpu": 8.79, "system.memory": 23.02, "system.disk": 22.4, "system.proc.memory.availableMB": 11581.47, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 748987, "system.network.recv": 747904, "_wandb": true, "_timestamp": 1579508786, "_runtime": 193}
--{"system.gpu.0.gpu": 11.87, "system.gpu.0.memory": 8.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.67, "system.gpu.0.powerWatts": 44.82, "system.gpu.0.powerPercent": 64.03, "system.cpu": 9.73, "system.memory": 23.07, "system.disk": 22.4, "system.proc.memory.availableMB": 11575.17, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 873256, "system.network.recv": 874007, "_wandb": true, "_timestamp": 1579508816, "_runtime": 223}
--{"system.gpu.0.gpu": 11.0, "system.gpu.0.memory": 8.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.27, "system.gpu.0.powerWatts": 38.19, "system.gpu.0.powerPercent": 54.55, "system.cpu": 10.57, "system.memory": 23.05, "system.disk": 22.4, "system.proc.memory.availableMB": 11572.48, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1023164, "system.network.recv": 1026940, "_wandb": true, "_timestamp": 1579508846, "_runtime": 253}
--{"system.gpu.0.gpu": 14.2, "system.gpu.0.memory": 10.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.27, "system.gpu.0.powerWatts": 42.89, "system.gpu.0.powerPercent": 61.28, "system.cpu": 11.98, "system.memory": 23.15, "system.disk": 22.4, "system.proc.memory.availableMB": 11561.87, "system.proc.memory.rssMB": 2962.21, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1178866, "system.network.recv": 1181511, "_wandb": true, "_timestamp": 1579508876, "_runtime": 283}
--{"system.gpu.0.gpu": 13.0, "system.gpu.0.memory": 10.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 78.0, "system.gpu.0.powerWatts": 50.01, "system.gpu.0.powerPercent": 71.45, "system.cpu": 13.59, "system.memory": 23.22, "system.disk": 22.4, "system.proc.memory.availableMB": 11553.44, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1331123, "system.network.recv": 1336366, "_wandb": true, "_timestamp": 1579508906, "_runtime": 314}
--{"system.gpu.0.gpu": 25.13, "system.gpu.0.memory": 21.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.33, "system.gpu.0.powerWatts": 45.73, "system.gpu.0.powerPercent": 65.33, "system.cpu": 15.11, "system.memory": 23.2, "system.disk": 22.4, "system.proc.memory.availableMB": 11550.57, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1518597, "system.network.recv": 1523627, "_wandb": true, "_timestamp": 1579508936, "_runtime": 344}
--{"system.gpu.0.gpu": 19.67, "system.gpu.0.memory": 16.87, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.53, "system.gpu.0.powerWatts": 49.57, "system.gpu.0.powerPercent": 70.82, "system.cpu": 17.23, "system.memory": 23.21, "system.disk": 22.4, "system.proc.memory.availableMB": 11547.93, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1702121, "system.network.recv": 1710364, "_wandb": true, "_timestamp": 1579508966, "_runtime": 374}
--{"system.gpu.0.gpu": 18.4, "system.gpu.0.memory": 15.73, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.2, "system.gpu.0.powerWatts": 51.24, "system.gpu.0.powerPercent": 73.2, "system.cpu": 18.21, "system.memory": 23.35, "system.disk": 22.4, "system.proc.memory.availableMB": 11531.67, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1856007, "system.network.recv": 1863572, "_wandb": true, "_timestamp": 1579508997, "_runtime": 404}
--{"system.gpu.0.gpu": 18.8, "system.gpu.0.memory": 16.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.47, "system.gpu.0.powerWatts": 49.62, "system.gpu.0.powerPercent": 70.89, "system.cpu": 19.99, "system.memory": 23.32, "system.disk": 22.4, "system.proc.memory.availableMB": 11535.11, "system.proc.memory.rssMB": 2962.48, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2016161, "system.network.recv": 2023461, "_wandb": true, "_timestamp": 1579509027, "_runtime": 434}
--{"system.gpu.0.gpu": 21.0, "system.gpu.0.memory": 18.07, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.13, "system.gpu.0.powerWatts": 50.49, "system.gpu.0.powerPercent": 72.13, "system.cpu": 20.69, "system.memory": 23.18, "system.disk": 22.4, "system.proc.memory.availableMB": 11552.24, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2245090, "system.network.recv": 2255638, "_wandb": true, "_timestamp": 1579509057, "_runtime": 464}
--{"system.gpu.0.gpu": 17.07, "system.gpu.0.memory": 14.13, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.13, "system.gpu.0.powerWatts": 51.83, "system.gpu.0.powerPercent": 74.04, "system.cpu": 21.11, "system.memory": 23.25, "system.disk": 22.4, "system.proc.memory.availableMB": 11542.37, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2746309, "system.network.recv": 2487509, "_wandb": true, "_timestamp": 1579509087, "_runtime": 494}
--{"system.gpu.0.gpu": 66.47, "system.gpu.0.memory": 44.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 78.4, "system.gpu.0.powerWatts": 64.54, "system.gpu.0.powerPercent": 92.21, "system.cpu": 78.97, "system.memory": 23.2, "system.disk": 22.4, "system.proc.memory.availableMB": 11552.42, "system.proc.memory.rssMB": 2957.19, "system.proc.memory.percent": 19.66, "system.proc.cpu.threads": 27.2, "system.network.sent": 3696180, "system.network.recv": 2568386, "_wandb": true, "_timestamp": 1579509117, "_runtime": 525}
--{"system.gpu.0.gpu": 82.13, "system.gpu.0.memory": 53.73, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.33, "system.gpu.0.powerWatts": 67.07, "system.gpu.0.powerPercent": 95.82, "system.cpu": 99.89, "system.memory": 23.25, "system.disk": 22.4, "system.proc.memory.availableMB": 11541.6, "system.proc.memory.rssMB": 2956.42, "system.proc.memory.percent": 19.65, "system.proc.cpu.threads": 27.0, "system.network.sent": 3700982, "system.network.recv": 2571448, "_wandb": true, "_timestamp": 1579509147, "_runtime": 555}
--{"system.gpu.0.gpu": 78.07, "system.gpu.0.memory": 50.87, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.0, "system.gpu.0.powerWatts": 62.66, "system.gpu.0.powerPercent": 89.52, "system.cpu": 93.01, "system.memory": 23.62, "system.disk": 22.4, "system.proc.memory.availableMB": 11490.1, "system.proc.memory.rssMB": 2955.65, "system.proc.memory.percent": 19.65, "system.proc.cpu.threads": 27.0, "system.network.sent": 3709404, "system.network.recv": 2574045, "_wandb": true, "_timestamp": 1579509178, "_runtime": 585}
--{"system.gpu.0.gpu": 15.07, "system.gpu.0.memory": 3.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 71.73, "system.gpu.0.powerWatts": 34.48, "system.gpu.0.powerPercent": 49.26, "system.cpu": 25.27, "system.memory": 22.4, "system.disk": 22.4, "system.proc.memory.availableMB": 11676.86, "system.proc.memory.rssMB": 2950.69, "system.proc.memory.percent": 19.61, "system.proc.cpu.threads": 27.0, "system.network.sent": 3721790, "system.network.recv": 2631378, "_wandb": true, "_timestamp": 1579509208, "_runtime": 615}
--{"system.gpu.0.gpu": 45.27, "system.gpu.0.memory": 29.07, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 74.07, "system.gpu.0.powerWatts": 48.68, "system.gpu.0.powerPercent": 69.55, "system.cpu": 61.3, "system.memory": 22.83, "system.disk": 22.4, "system.proc.memory.availableMB": 11611.68, "system.proc.memory.rssMB": 2958.09, "system.proc.memory.percent": 19.66, "system.proc.cpu.threads": 27.47, "system.network.sent": 4312731, "system.network.recv": 3024984, "_wandb": true, "_timestamp": 1579509238, "_runtime": 645}
--{"system.gpu.0.gpu": 85.27, "system.gpu.0.memory": 64.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 80.4, "system.gpu.0.powerWatts": 69.5, "system.gpu.0.powerPercent": 99.29, "system.cpu": 98.87, "system.memory": 23.4, "system.disk": 22.4, "system.proc.memory.availableMB": 11523.09, "system.proc.memory.rssMB": 2965.59, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 28.0, "system.network.sent": 5355584, "system.network.recv": 3684826, "_wandb": true, "_timestamp": 1579509268, "_runtime": 675}
--{"system.gpu.0.gpu": 82.67, "system.gpu.0.memory": 63.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.13, "system.gpu.0.powerWatts": 68.41, "system.gpu.0.powerPercent": 97.73, "system.cpu": 97.43, "system.memory": 23.36, "system.disk": 22.4, "system.proc.memory.availableMB": 11527.65, "system.proc.memory.rssMB": 2966.13, "system.proc.memory.percent": 19.72, "system.proc.cpu.threads": 27.93, "system.network.sent": 6262772, "system.network.recv": 4284351, "_wandb": true, "_timestamp": 1579509298, "_runtime": 706}
--{"system.gpu.0.gpu": 84.6, "system.gpu.0.memory": 55.33, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.4, "system.gpu.0.powerWatts": 66.84, "system.gpu.0.powerPercent": 95.48, "system.cpu": 99.88, "system.memory": 23.27, "system.disk": 22.4, "system.proc.memory.availableMB": 11542.26, "system.proc.memory.rssMB": 2958.56, "system.proc.memory.percent": 19.67, "system.proc.cpu.threads": 27.0, "system.network.sent": 6275456, "system.network.recv": 4336424, "_wandb": true, "_timestamp": 1579509329, "_runtime": 736}
--{"system.gpu.0.gpu": 84.4, "system.gpu.0.memory": 55.13, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.73, "system.gpu.0.powerWatts": 73.68, "system.gpu.0.powerPercent": 105.26, "system.cpu": 99.89, "system.memory": 23.29, "system.disk": 22.4, "system.proc.memory.availableMB": 11538.26, "system.proc.memory.rssMB": 2958.56, "system.proc.memory.percent": 19.67, "system.proc.cpu.threads": 27.0, "system.network.sent": 6279094, "system.network.recv": 4342260, "_wandb": true, "_timestamp": 1579509359, "_runtime": 766}
-+{"system.network.sent":10977141,"system.gpu.0.powerPercent":96.79,"system.network.recv":7409894,"system.disk":22.4,"system.gpu.0.powerWatts":67.75,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":65.33,"system.gpu.0.gpu":85.6,"_runtime":1008,"system.proc.memory.rssMB":2966.29,"system.proc.memory.availableMB":11506.94,"system.cpu":98.25,"system.proc.cpu.threads":28,"system.memory":23.5,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509601}
-+{"system.network.sent":11502749,"system.gpu.0.powerPercent":97.46,"system.network.recv":7764756,"system.disk":22.4,"system.gpu.0.powerWatts":68.23,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":60.73,"system.gpu.0.gpu":85.87,"_runtime":1039,"system.proc.memory.rssMB":2962.16,"system.proc.memory.availableMB":11528.19,"system.cpu":97.55,"system.proc.cpu.threads":27.47,"system.memory":23.37,"system.proc.memory.percent":19.69,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509631}
-+{"system.network.sent":11508976,"system.gpu.0.powerPercent":102.06,"system.network.recv":7771440,"system.disk":22.4,"system.gpu.0.powerWatts":71.44,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.53,"system.gpu.0.gpu":85.6,"_runtime":1069,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11533.16,"system.cpu":99.91,"system.proc.cpu.threads":27,"system.memory":23.34,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509662}
-+{"system.network.sent":11522899,"system.gpu.0.powerPercent":93.89,"system.network.recv":7774171,"system.disk":22.4,"system.gpu.0.powerWatts":65.73,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.8,"_runtime":1099,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11449.37,"system.cpu":99.9,"system.proc.cpu.threads":27,"system.memory":23.89,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509692}
-+{"system.network.sent":12355982,"system.gpu.0.powerPercent":99.47,"system.network.recv":8325343,"system.disk":22.4,"system.gpu.0.powerWatts":69.63,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":53.6,"system.gpu.0.gpu":80.47,"_runtime":1129,"system.proc.memory.rssMB":2962.93,"system.proc.memory.availableMB":11549.31,"system.cpu":91.64,"system.proc.cpu.threads":27.73,"system.memory":23.23,"system.proc.memory.percent":19.7,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509722}
-+{"system.network.sent":13392411,"system.gpu.0.powerPercent":96.5,"system.network.recv":9022410,"system.disk":22.4,"system.gpu.0.powerWatts":67.55,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":66.2,"system.gpu.0.gpu":86.73,"_runtime":1160,"system.proc.memory.rssMB":2966.31,"system.proc.memory.availableMB":11507.02,"system.cpu":96.58,"system.proc.cpu.threads":28,"system.memory":23.51,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509752}
-+{"system.network.sent":14052060,"system.gpu.0.powerPercent":93.62,"system.network.recv":9455229,"system.disk":22.4,"system.gpu.0.powerWatts":65.53,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":62.4,"system.gpu.0.gpu":86.33,"_runtime":1190,"system.proc.memory.rssMB":2964.4,"system.proc.memory.availableMB":11520.81,"system.cpu":96.15,"system.proc.cpu.threads":27.67,"system.memory":23.41,"system.proc.memory.percent":19.71,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509783}
-+{"system.network.sent":14116134,"system.gpu.0.powerPercent":97.24,"system.network.recv":9471018,"system.disk":22.4,"system.gpu.0.powerWatts":68.07,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.13,"_runtime":1220,"system.proc.memory.rssMB":2959.24,"system.proc.memory.availableMB":11527.75,"system.cpu":99.85,"system.proc.cpu.threads":27,"system.memory":23.39,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509813}
-+{"system.network.sent":14129520,"system.gpu.0.powerPercent":102.88,"system.network.recv":9474423,"system.disk":22.4,"system.gpu.0.powerWatts":72.02,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":56.33,"system.gpu.0.gpu":86.27,"_runtime":1250,"system.proc.memory.rssMB":2958.7,"system.proc.memory.availableMB":11472.54,"system.cpu":99.87,"system.proc.cpu.threads":27,"system.memory":23.75,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509843}
-+{"system.network.sent":14134644,"system.gpu.0.powerPercent":87.89,"system.network.recv":9477692,"system.disk":22.4,"system.gpu.0.powerWatts":61.52,"_wandb":true,"system.gpu.0.temp":76.75,"system.gpu.0.memory":39.12,"system.gpu.0.gpu":73.5,"_runtime":1267,"system.proc.memory.rssMB":2956.05,"system.proc.memory.availableMB":11567.16,"system.cpu":86.28,"system.proc.cpu.threads":26.38,"system.memory":23.1,"system.proc.memory.percent":19.65,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509859}
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-index 6941a0a..e946e56 100644
---- a/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-@@ -1 +1,5 @@
--{"gradients/classifier.bias": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.0654682070016861, -0.06339701265096664, -0.06132581830024719, -0.05925462394952774, -0.05718342587351799, -0.05511223152279854, -0.053041037172079086, -0.050969842821359634, -0.048898644745349884, -0.04682745039463043, -0.04475625604391098, -0.04268506169319153, -0.040613867342472076, -0.038542672991752625, -0.03647147864103317, -0.03440028056502342, -0.03232908621430397, -0.03025789186358452, -0.028186697512865067, -0.026115499436855316, -0.024044305086135864, -0.021973110735416412, -0.01990191638469696, -0.01783072203397751, -0.015759527683258057, -0.013688329607248306, -0.011617135256528854, -0.009545940905809402, -0.0074747465550899506, -0.005403552204370499, -0.0033323541283607483, -0.0012611597776412964, 0.0008100345730781555, 0.0028812289237976074, 0.004952423274517059, 0.007023617625236511, 0.009094811975955963, 0.011166006326675415, 0.013237208127975464, 0.015308402478694916, 0.017379596829414368, 0.01945079118013382, 0.02152198553085327, 0.023593179881572723, 0.025664374232292175, 0.027735568583011627, 0.02980676293373108, 0.03187795728445053, 0.03394915163516998, 0.03602035343647003, 0.038091547787189484, 0.040162742137908936, 0.04223393648862839, 0.04430513083934784, 0.04637632519006729, 0.04844751954078674, 0.050518713891506195, 0.05258990824222565, 0.0546611025929451, 0.05673230439424515, 0.0588034987449646, 0.060874685645103455, 0.0629458874464035, 0.06501707434654236, 0.06708827614784241]}, "gradients/classifier.weight": {"_type": "histogram", "values": [1.0, 1.0, 1.0, 0.0, 3.0, 1.0, 5.0, 2.0, 4.0, 10.0, 9.0, 17.0, 15.0, 21.0, 30.0, 49.0, 53.0, 61.0, 86.0, 96.0, 118.0, 155.0, 170.0, 210.0, 214.0, 249.0, 229.0, 254.0, 272.0, 299.0, 314.0, 295.0, 344.0, 291.0, 277.0, 262.0, 259.0, 239.0, 186.0, 184.0, 169.0, 136.0, 111.0, 97.0, 83.0, 60.0, 47.0, 38.0, 19.0, 23.0, 20.0, 13.0, 17.0, 7.0, 8.0, 4.0, 1.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.09012244641780853, -0.08724749088287354, -0.08437253534793854, -0.08149757981300354, -0.07862262427806854, -0.07574766874313354, -0.07287271320819855, -0.06999775767326355, -0.06712280213832855, -0.06424784660339355, -0.06137289106845856, -0.05849793553352356, -0.05562297999858856, -0.052748024463653564, -0.04987306892871857, -0.04699811339378357, -0.04412315785884857, -0.041248202323913574, -0.03837324678897858, -0.03549829125404358, -0.03262333571910858, -0.029748380184173584, -0.026873424649238586, -0.02399846911430359, -0.02112351357936859, -0.018248558044433594, -0.015373602509498596, -0.012498646974563599, -0.009623691439628601, -0.0067487359046936035, -0.003873780369758606, -0.0009988248348236084, 0.0018761307001113892, 0.004751086235046387, 0.007626041769981384, 0.010500997304916382, 0.01337595283985138, 0.016250908374786377, 0.019125863909721375, 0.022000819444656372, 0.02487577497959137, 0.027750730514526367, 0.030625686049461365, 0.03350064158439636, 0.03637559711933136, 0.03925055265426636, 0.042125508189201355, 0.04500046372413635, 0.04787541925907135, 0.05075037479400635, 0.053625330328941345, 0.05650028586387634, 0.05937524139881134, 0.06225019693374634, 0.06512515246868134, 0.06800010800361633, 0.07087506353855133, 0.07375001907348633, 0.07662497460842133, 0.07949993014335632, 0.08237488567829132, 0.08524984121322632, 0.08812479674816132, 0.09099975228309631, 0.09387470781803131]}, "val_acc": 0.23687943262411348, "train_acc": 0.25812953441384673, "_runtime": 814.0969541072845, "_timestamp": 1579509224.6157851, "_step": 0}
-+{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.0654682070016861,-0.06339701265096664,-0.06132581830024719,-0.05925462394952774,-0.05718342587351799,-0.05511223152279854,-0.053041037172079086,-0.050969842821359634,-0.048898644745349884,-0.04682745039463043,-0.04475625604391098,-0.04268506169319153,-0.040613867342472076,-0.038542672991752625,-0.03647147864103317,-0.03440028056502342,-0.03232908621430397,-0.03025789186358452,-0.028186697512865067,-0.026115499436855316,-0.024044305086135864,-0.021973110735416412,-0.01990191638469696,-0.01783072203397751,-0.015759527683258057,-0.013688329607248306,-0.011617135256528854,-0.009545940905809402,-0.0074747465550899506,-0.005403552204370499,-0.0033323541283607483,-0.0012611597776412964,0.0008100345730781555,0.0028812289237976074,0.004952423274517059,0.007023617625236511,0.009094811975955963,0.011166006326675415,0.013237208127975464,0.015308402478694916,0.017379596829414368,0.01945079118013382,0.02152198553085327,0.023593179881572723,0.025664374232292175,0.027735568583011627,0.02980676293373108,0.03187795728445053,0.03394915163516998,0.03602035343647003,0.038091547787189484,0.040162742137908936,0.04223393648862839,0.04430513083934784,0.04637632519006729,0.04844751954078674,0.050518713891506195,0.05258990824222565,0.0546611025929451,0.05673230439424515,0.0588034987449646,0.060874685645103455,0.0629458874464035,0.06501707434654236,0.06708827614784241]},"gradients/classifier.weight":{"bins":[-0.09012244641780853,-0.08724749088287354,-0.08437253534793854,-0.08149757981300354,-0.07862262427806854,-0.07574766874313354,-0.07287271320819855,-0.06999775767326355,-0.06712280213832855,-0.06424784660339355,-0.06137289106845856,-0.05849793553352356,-0.05562297999858856,-0.052748024463653564,-0.04987306892871857,-0.04699811339378357,-0.04412315785884857,-0.041248202323913574,-0.03837324678897858,-0.03549829125404358,-0.03262333571910858,-0.029748380184173584,-0.026873424649238586,-0.02399846911430359,-0.02112351357936859,-0.018248558044433594,-0.015373602509498596,-0.012498646974563599,-0.009623691439628601,-0.0067487359046936035,-0.003873780369758606,-0.0009988248348236084,0.0018761307001113892,0.004751086235046387,0.007626041769981384,0.010500997304916382,0.01337595283985138,0.016250908374786377,0.019125863909721375,0.022000819444656372,0.02487577497959137,0.027750730514526367,0.030625686049461365,0.03350064158439636,0.03637559711933136,0.03925055265426636,0.042125508189201355,0.04500046372413635,0.04787541925907135,0.05075037479400635,0.053625330328941345,0.05650028586387634,0.05937524139881134,0.06225019693374634,0.06512515246868134,0.06800010800361633,0.07087506353855133,0.07375001907348633,0.07662497460842133,0.07949993014335632,0.08237488567829132,0.08524984121322632,0.08812479674816132,0.09099975228309631,0.09387470781803131],"_type":"histogram","values":[1,1,1,0,3,1,5,2,4,10,9,17,15,21,30,49,53,61,86,96,118,155,170,210,214,249,229,254,272,299,314,295,344,291,277,262,259,239,186,184,169,136,111,97,83,60,47,38,19,23,20,13,17,7,8,4,1,2,2,0,0,0,0,1]},"_step":0,"val_acc":0.23687943262411348,"train_acc":0.25812953441384673,"_runtime":814.0969541072845,"_timestamp":1.5795092246157851e+09}
-+{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1],"bins":[-0.07717597484588623,-0.07544030994176865,-0.07370464503765106,-0.07196898013353348,-0.0702333152294159,-0.06849765032529831,-0.06676198542118073,-0.06502632051706314,-0.06329065561294556,-0.06155499070882797,-0.05981932580471039,-0.058083660900592804,-0.05634799599647522,-0.054612331092357635,-0.05287666618824005,-0.05114100128412247,-0.04940533638000488,-0.0476696714758873,-0.045934006571769714,-0.04419834539294243,-0.042462680488824844,-0.04072701558470726,-0.038991350680589676,-0.03725568577647209,-0.03552002087235451,-0.03378435596823692,-0.03204869106411934,-0.030313026160001755,-0.02857736125588417,-0.026841696351766586,-0.025106031447649002,-0.023370366543531418,-0.021634701639413834,-0.01989903673529625,-0.018163371831178665,-0.01642770692706108,-0.014692042022943497,-0.012956380844116211,-0.011220715939998627,-0.009485051035881042,-0.007749386131763458,-0.006013721227645874,-0.00427805632352829,-0.0025423914194107056,-0.0008067265152931213,0.0009289383888244629,0.002664603292942047,0.004400268197059631,0.006135933101177216,0.0078715980052948,0.009607262909412384,0.011342927813529968,0.013078592717647552,0.014814257621765137,0.01654992252588272,0.018285587430000305,0.02002125233411789,0.021756917238235474,0.023492582142353058,0.025228247046470642,0.026963911950588226,0.02869957685470581,0.030435241758823395,0.03217090666294098,0.03390657156705856]},"gradients/classifier.weight":{"_type":"histogram","values":[1,0,1,0,1,1,3,1,1,2,4,9,11,17,27,29,40,36,67,86,99,128,150,186,242,222,248,298,311,327,349,317,357,337,321,308,284,232,208,178,153,140,97,76,67,43,32,35,19,16,10,6,2,2,3,3,0,0,0,0,0,0,0,1],"bins":[-0.10413810610771179,-0.10082836449146271,-0.09751862287521362,-0.09420888125896454,-0.09089913964271545,-0.08758939802646637,-0.08427965641021729,-0.0809699147939682,-0.07766017317771912,-0.07435043156147003,-0.07104068994522095,-0.06773094832897186,-0.06442121416330338,-0.06111147254705429,-0.057801730930805206,-0.05449198931455612,-0.05118224769830704,-0.04787250608205795,-0.04456276446580887,-0.041253022849559784,-0.0379432812333107,-0.034633539617061615,-0.03132379800081253,-0.028014056384563446,-0.02470432221889496,-0.021394580602645874,-0.01808483898639679,-0.014775097370147705,-0.01146535575389862,-0.008155614137649536,-0.004845872521400452,-0.0015361309051513672,0.0017736107110977173,0.005083352327346802,0.008393093943595886,0.01170283555984497,0.015012577176094055,0.01832231879234314,0.021632060408592224,0.02494180202484131,0.028251543641090393,0.03156128525733948,0.03487102687358856,0.038180768489837646,0.04149051010608673,0.044800251722335815,0.0481099933385849,0.051419734954833984,0.054729461669921875,0.05803920328617096,0.061348944902420044,0.06465868651866913,0.06796842813491821,0.0712781697511673,0.07458791136741638,0.07789765298366547,0.08120739459991455,0.08451713621616364,0.08782687783241272,0.0911366194486618,0.09444636106491089,0.09775610268115997,0.10106584429740906,0.10437558591365814,0.10768532752990723]},"_step":1,"val_acc":0.25011820330969264,"train_acc":0.258383926343752,"_runtime":974.3342196941376,"_timestamp":1.5795093848530507e+09}
-+{"gradients/classifier.bias":{"values":[1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.006489427760243416,-0.006147412117570639,-0.005805396940559149,-0.005463381297886372,-0.0051213656552135944,-0.004779350012540817,-0.004437334835529327,-0.00409531919285655,-0.0037533037830144167,-0.003411288373172283,-0.003069272730499506,-0.0027272573206573725,-0.002385241910815239,-0.0020432262681424618,-0.0017012106254696846,-0.0013591954484581947,-0.0010171798057854176,-0.0006751641631126404,-0.0003331489861011505,8.866656571626663e-06,0.00035088229924440384,0.0006928974762558937,0.0010349131189286709,0.001376928761601448,0.001718943938612938,0.0020609600469470024,0.0024029752239584923,0.002744990400969982,0.0030870065093040466,0.0034290216863155365,0.0037710368633270264,0.004113052971661091,0.004455068148672581,0.004797083325684071,0.005139099434018135,0.005481114611029625,0.005823129788041115,0.006165145896375179,0.006507161073386669,0.006849176250398159,0.0071911923587322235,0.007533207535743713,0.007875222712755203,0.008217238821089268,0.008559253998100758,0.008901269175112247,0.009243285283446312,0.009585300460457802,0.009927315637469292,0.010269330814480782,0.01061134785413742,0.01095336303114891,0.0112953782081604,0.01163739338517189,0.01197940856218338,0.01232142373919487,0.012663440778851509,0.013005455955862999,0.013347471132874489,0.013689486309885979,0.014031501486897469,0.014373516663908958,0.014715533703565598,0.015057548880577087,0.015399564057588577],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.07622425258159637,-0.07385586947202682,-0.07148748636245728,-0.06911909580230713,-0.06675071269273758,-0.06438232958316803,-0.06201394647359848,-0.05964556336402893,-0.05727717652916908,-0.054908789694309235,-0.052540406584739685,-0.050172023475170135,-0.047803640365600586,-0.04543525353074074,-0.04306687042117119,-0.04069848358631134,-0.03833010047674179,-0.03596171736717224,-0.03359333053231239,-0.031224947422742844,-0.028856560587882996,-0.026488177478313446,-0.024119794368743896,-0.02175140753388405,-0.0193830244243145,-0.01701464131474495,-0.014646254479885101,-0.012277871370315552,-0.009909488260746002,-0.007541105151176453,-0.005172714591026306,-0.0028043314814567566,-0.00043594837188720703,0.0019324347376823425,0.004300817847251892,0.006669208407402039,0.009037591516971588,0.011405974626541138,0.013774357736110687,0.016142740845680237,0.018511131405830383,0.020879514515399933,0.023247897624969482,0.025616280734539032,0.02798466384410858,0.03035304695367813,0.03272143751382828,0.03508982062339783,0.03745820373296738,0.039826586842536926,0.042194969952106476,0.04456336051225662,0.04693174362182617,0.049300119280815125,0.05166850984096527,0.05403690040111542,0.05640527606010437,0.05877366662025452,0.06114204227924347,0.06351043283939362,0.06587882339954376,0.06824719905853271,0.07061558961868286,0.07298396527767181,0.07535235583782196],"_type":"histogram","values":[1,2,2,4,0,3,3,1,11,7,15,14,23,25,27,43,59,66,75,106,101,128,148,168,174,206,231,240,275,266,300,299,271,298,285,266,270,214,209,214,192,142,152,94,103,94,63,48,43,36,29,22,19,17,12,8,5,3,1,6,3,1,0,1]},"_step":2,"val_acc":0.24964539007092199,"train_acc":0.2603407873430231,"_runtime":1133.4028816223145,"_timestamp":1.5795095439217126e+09}
-+{"gradients/classifier.bias":{"values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.06606416404247284,-0.06390783190727234,-0.06175149977207184,-0.05959516763687134,-0.05743883550167084,-0.05528250336647034,-0.053126171231269836,-0.050969839096069336,-0.048813506960868835,-0.046657174825668335,-0.044500842690467834,-0.042344510555267334,-0.040188178420066833,-0.03803184628486633,-0.03587551414966583,-0.03371918201446533,-0.03156284987926483,-0.02940651774406433,-0.02725018560886383,-0.02509385347366333,-0.02293752133846283,-0.02078118920326233,-0.01862485706806183,-0.016468524932861328,-0.014312192797660828,-0.012155860662460327,-0.009999528527259827,-0.007843196392059326,-0.005686864256858826,-0.003530532121658325,-0.0013741999864578247,0.0007821321487426758,0.0029384642839431763,0.005094796419143677,0.007251128554344177,0.009407460689544678,0.011563792824745178,0.013720124959945679,0.01587645709514618,0.01803278923034668,0.02018912136554718,0.02234545350074768,0.02450178563594818,0.02665811777114868,0.028814449906349182,0.030970782041549683,0.03312711417675018,0.035283446311950684,0.037439778447151184,0.039596110582351685,0.041752442717552185,0.043908774852752686,0.046065106987953186,0.048221439123153687,0.05037777125835419,0.05253410339355469,0.05469043552875519,0.05684676766395569,0.05900309979915619,0.06115943193435669,0.06331576406955719,0.06547209620475769,0.06762842833995819,0.06978476047515869,0.07194109261035919],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.09906706213951111,-0.09581608325242996,-0.09256510436534882,-0.08931412547826767,-0.08606314659118652,-0.08281217515468597,-0.07956118881702423,-0.07631021738052368,-0.07305923849344254,-0.06980825960636139,-0.06655728071928024,-0.0633063018321991,-0.06005532294511795,-0.056804344058036804,-0.053553368896245956,-0.05030239000916481,-0.047051411122083664,-0.04380043223500252,-0.04054945334792137,-0.037298478186130524,-0.03404749929904938,-0.03079652041196823,-0.027545541524887085,-0.02429456263780594,-0.021043583750724792,-0.017792604863643646,-0.0145416259765625,-0.01129065454006195,-0.008039675652980804,-0.004788696765899658,-0.001537717878818512,0.0017132610082626343,0.0049642398953437805,0.008215218782424927,0.011466197669506073,0.01471717655658722,0.017968155443668365,0.02121913433074951,0.02447010576725006,0.027721092104911804,0.030972063541412354,0.0342230498790741,0.037474021315574646,0.040724992752075195,0.04397597908973694,0.04722695052623749,0.05047793686389923,0.05372890830039978,0.05697989463806152,0.06023086607456207,0.06348185241222382,0.06673282384872437,0.06998381018638611,0.07323478162288666,0.07648575305938721,0.07973673939704895,0.0829877108335495,0.08623869717121124,0.08948966860771179,0.09274065494537354,0.09599162638187408,0.09924261271953583,0.10249358415603638,0.10574457049369812,0.10899554193019867],"_type":"histogram","values":[1,0,0,0,2,2,0,4,3,6,10,11,14,22,31,43,53,58,86,101,112,160,183,225,221,275,317,314,310,329,323,356,343,312,332,263,237,192,175,162,123,83,77,78,50,43,29,27,12,11,6,5,4,3,0,0,1,0,0,1,1,0,1,1]},"_step":3,"val_acc":0.26222222222222225,"train_acc":0.2627868635921119,"_runtime":1291.7072627544403,"_timestamp":1.5795097022260938e+09}
-+{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.037257447838783264,-0.035971060395240784,-0.034684669226408005,-0.033398281782865524,-0.032111890614032745,-0.030825503170490265,-0.029539113864302635,-0.028252724558115005,-0.026966335251927376,-0.025679945945739746,-0.024393556639552116,-0.023107167333364487,-0.021820779889822006,-0.020534390583634377,-0.019248001277446747,-0.017961611971259117,-0.016675222665071487,-0.015388833358883858,-0.014102444052696228,-0.012816054746508598,-0.011529665440320969,-0.010243277996778488,-0.008956888690590858,-0.007670499384403229,-0.006384110078215599,-0.005097720772027969,-0.003811333328485489,-0.00252494215965271,-0.0012385547161102295,4.783645272254944e-05,0.00133422389626503,0.002620615065097809,0.003907002508640289,0.00519338995218277,0.006479781121015549,0.007766168564558029,0.009052559733390808,0.010338947176933289,0.011625338345766068,0.012911725789308548,0.014198116958141327,0.015484504401683807,0.016770891845226288,0.018057283014059067,0.019343670457601547,0.020630061626434326,0.021916449069976807,0.023202840238809586,0.024489227682352066,0.025775618851184845,0.027062006294727325,0.028348393738269806,0.029634781181812286,0.030921176075935364,0.032207563519477844,0.033493950963020325,0.034780338406562805,0.036066725850105286,0.03735312074422836,0.038639508187770844,0.039925895631313324,0.041212283074855804,0.04249867796897888,0.04378506541252136,0.04507145285606384]},"gradients/classifier.weight":{"bins":[-0.0888357013463974,-0.08612215518951416,-0.08340860903263092,-0.08069506287574768,-0.07798151671886444,-0.0752679631114006,-0.07255441695451736,-0.06984087079763412,-0.06712732464075089,-0.06441377848386765,-0.061700232326984406,-0.05898668244481087,-0.05627313628792763,-0.05355959013104439,-0.05084604024887085,-0.04813249409198761,-0.04541894793510437,-0.04270540177822113,-0.03999185562133789,-0.03727830573916435,-0.03456475958228111,-0.03185121342539787,-0.029137663543224335,-0.026424117386341095,-0.023710571229457855,-0.020997025072574615,-0.018283478915691376,-0.015569932758808136,-0.0128563791513443,-0.01014283299446106,-0.00742928683757782,-0.00471574068069458,-0.0020021945238113403,0.0007113516330718994,0.003424897789955139,0.006138443946838379,0.008851990103721619,0.011565543711185455,0.014279089868068695,0.016992636024951935,0.019706182181835175,0.022419728338718414,0.025133274495601654,0.027846820652484894,0.03056037425994873,0.03327392041683197,0.03598746657371521,0.03870101273059845,0.04141455888748169,0.04412810504436493,0.04684165120124817,0.04955519735813141,0.05226874351501465,0.05498228967189789,0.05769583582878113,0.06040938198566437,0.0631229430437088,0.06583648920059204,0.06855003535747528,0.07126358151435852,0.07397712767124176,0.076690673828125,0.07940421998500824,0.08211776614189148,0.08483131229877472],"_type":"histogram","values":[1,0,0,0,2,0,1,0,10,6,9,13,11,18,18,29,47,58,58,70,96,103,104,181,183,180,232,264,280,262,304,320,289,307,281,323,255,289,218,224,185,155,132,132,118,76,65,59,48,22,30,26,17,9,5,3,4,2,3,3,1,2,0,1]},"_step":4,"val_acc":0.262789598108747,"train_acc":0.2653650279586515,"_runtime":1448.6882483959198,"_timestamp":1.5795098592070794e+09}
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json b/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-index 3724adb..0ce5b0d 100644
---- a/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-@@ -3,10 +3,10 @@
-     "program": "<python with no main file>",
-     "git": {
-         "remote": "https://github.com/ubamba98/droughtwatch",
--        "commit": "fea1daedb6b14125e1dec2c49a5e3b211d016f90"
-+        "commit": "4e7b9b38b8d5d3ec44d43373b8e263f50ead87a3"
-     },
-     "email": "ubamba98@gmail.com",
--    "startedAt": "2020-01-20T08:23:13.672686",
-+    "startedAt": "2020-01-20T08:44:21.248355",
-     "host": "ccw-iclr",
-     "username": "ubamba98",
-     "executable": "/home/ubamba98/anaconda3/bin/python",
-@@ -25,5 +25,5 @@
-     "mode": "run",
-     "name": "efficentnet-b3-765",
-     "project": "droughtwatch",
--    "heartbeatAt": "2020-01-20T08:36:16.324952"
-+    "heartbeatAt": "2020-01-20T08:44:22.172990"
- }
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-summary.json b/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-index 05e4af4..27d2e55 100644
---- a/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-@@ -1 +1 @@
--{"graph_0": {"_type": "graph", "format": "torch", "nodes": [{"name": "conv_stem", "id": 140438557381128, "class_name": "Conv2dSame(3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False)", "parameters": [["weight", [40, 3, 3, 3]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [1080]}, {"name": "bn1", "id": 140438557383704, "class_name": "BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [40]], ["bias", [40]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [40, 40]}, {"name": "blocks.0.0", "id": 140438557382920, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)\n  (bn1): BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [40, 1, 3, 3]], ["bn1.weight", [40]], ["bn1.bias", [40]], ["se.conv_reduce.weight", [10, 40, 1, 1]], ["se.conv_reduce.bias", [10]], ["se.conv_expand.weight", [40, 10, 1, 1]], ["se.conv_expand.bias", [40]], ["conv_pw.weight", [24, 40, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [360, 40, 40, 400, 10, 400, 40, 960, 24, 24]}, {"name": "blocks.0.1", "id": 140438680665224, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)\n  (bn1): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [24, 1, 3, 3]], ["bn1.weight", [24]], ["bn1.bias", [24]], ["se.conv_reduce.weight", [6, 24, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [24, 6, 1, 1]], ["se.conv_expand.bias", [24]], ["conv_pw.weight", [24, 24, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [216, 24, 24, 144, 6, 144, 24, 576, 24, 24]}, {"name": "blocks.1.0", "id": 140438676598736, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(144, 144, kernel_size=(3, 3), stride=(2, 2), groups=144, bias=False)\n  (bn2): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [144, 24, 1, 1]], ["bn1.weight", [144]], ["bn1.bias", [144]], ["conv_dw.weight", [144, 1, 3, 3]], ["bn2.weight", [144]], ["bn2.bias", [144]], ["se.conv_reduce.weight", [6, 144, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [144, 6, 1, 1]], ["se.conv_expand.bias", [144]], ["conv_pwl.weight", [32, 144, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 4608, 32, 32]}, {"name": "blocks.1.1", "id": 140438557424160, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.1.2", "id": 140438679559640, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.2.0", "id": 140438679470320, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(192, 192, kernel_size=(5, 5), stride=(2, 2), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 5, 5]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [48, 192, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [6144, 192, 192, 4800, 192, 192, 1536, 8, 1536, 192, 9216, 48, 48]}, {"name": "blocks.2.1", "id": 140438557424384, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.2.2", "id": 140438557422704, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.3.0", "id": 140438557421920, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(288, 288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 3, 3]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [96, 288, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [13824, 288, 288, 2592, 288, 288, 3456, 12, 3456, 288, 27648, 96, 96]}, {"name": "blocks.3.1", "id": 140438557422816, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.2", "id": 140438557824392, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.3", "id": 140438557825232, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.4", "id": 140438557825176, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.4.0", "id": 140438557824672, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 5, 5]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [136, 576, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [55296, 576, 576, 14400, 576, 576, 13824, 24, 13824, 576, 78336, 136, 136]}, {"name": "blocks.4.1", "id": 140438557823496, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.2", "id": 140438679158968, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.3", "id": 140438679496744, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.4", "id": 140438679422456, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.5.0", "id": 140438679421448, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(816, 816, kernel_size=(5, 5), stride=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [232, 816, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 189312, 232, 232]}, {"name": "blocks.5.1", "id": 140438679580400, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.2", "id": 140438679115088, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.3", "id": 140438676984832, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.4", "id": 140440670709296, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.5", "id": 140440670710192, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.6.0", "id": 140440670709464, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 3, 3]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [384, 1392, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [322944, 1392, 1392, 12528, 1392, 1392, 80736, 58, 80736, 1392, 534528, 384, 384]}, {"name": "blocks.6.1", "id": 140438679947864, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(384, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)\n  (bn2): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(2304, 96, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(96, 2304, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(2304, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [2304, 384, 1, 1]], ["bn1.weight", [2304]], ["bn1.bias", [2304]], ["conv_dw.weight", [2304, 1, 3, 3]], ["bn2.weight", [2304]], ["bn2.bias", [2304]], ["se.conv_reduce.weight", [96, 2304, 1, 1]], ["se.conv_reduce.bias", [96]], ["se.conv_expand.weight", [2304, 96, 1, 1]], ["se.conv_expand.bias", [2304]], ["conv_pwl.weight", [384, 2304, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [884736, 2304, 2304, 20736, 2304, 2304, 221184, 96, 221184, 2304, 884736, 384, 384]}, {"name": "conv_head", "id": 140438557382584, "class_name": "Conv2d(384, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)", "parameters": [["weight", [1536, 384, 1, 1]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [589824]}, {"name": "bn2", "id": 140438703610848, "class_name": "BatchNorm2d(1536, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [1536]], ["bias", [1536]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [1536, 1536]}, {"name": "global_pool", "id": 140438703610792, "class_name": "SelectAdaptivePool2d (output_size=1, pool_type=avg)", "parameters": [], "output_shape": [[256, 1536, 1, 1]], "num_parameters": []}, {"name": "classifier", "id": 140438679885696, "class_name": "Linear(in_features=1536, out_features=4, bias=True)", "parameters": [["weight", [4, 1536]], ["bias", [4]]], "output_shape": [[256, 4]], "num_parameters": [6144, 4]}], "edges": []}, "train_acc": 0.25812953441384673, "_step": 0, "gradients/classifier.weight": {"_type": "histogram", "values": [1.0, 1.0, 1.0, 0.0, 3.0, 1.0, 5.0, 2.0, 4.0, 10.0, 9.0, 17.0, 15.0, 21.0, 30.0, 49.0, 53.0, 61.0, 86.0, 96.0, 118.0, 155.0, 170.0, 210.0, 214.0, 249.0, 229.0, 254.0, 272.0, 299.0, 314.0, 295.0, 344.0, 291.0, 277.0, 262.0, 259.0, 239.0, 186.0, 184.0, 169.0, 136.0, 111.0, 97.0, 83.0, 60.0, 47.0, 38.0, 19.0, 23.0, 20.0, 13.0, 17.0, 7.0, 8.0, 4.0, 1.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.09012244641780853, -0.08724749088287354, -0.08437253534793854, -0.08149757981300354, -0.07862262427806854, -0.07574766874313354, -0.07287271320819855, -0.06999775767326355, -0.06712280213832855, -0.06424784660339355, -0.06137289106845856, -0.05849793553352356, -0.05562297999858856, -0.052748024463653564, -0.04987306892871857, -0.04699811339378357, -0.04412315785884857, -0.041248202323913574, -0.03837324678897858, -0.03549829125404358, -0.03262333571910858, -0.029748380184173584, -0.026873424649238586, -0.02399846911430359, -0.02112351357936859, -0.018248558044433594, -0.015373602509498596, -0.012498646974563599, -0.009623691439628601, -0.0067487359046936035, -0.003873780369758606, -0.0009988248348236084, 0.0018761307001113892, 0.004751086235046387, 0.007626041769981384, 0.010500997304916382, 0.01337595283985138, 0.016250908374786377, 0.019125863909721375, 0.022000819444656372, 0.02487577497959137, 0.027750730514526367, 0.030625686049461365, 0.03350064158439636, 0.03637559711933136, 0.03925055265426636, 0.042125508189201355, 0.04500046372413635, 0.04787541925907135, 0.05075037479400635, 0.053625330328941345, 0.05650028586387634, 0.05937524139881134, 0.06225019693374634, 0.06512515246868134, 0.06800010800361633, 0.07087506353855133, 0.07375001907348633, 0.07662497460842133, 0.07949993014335632, 0.08237488567829132, 0.08524984121322632, 0.08812479674816132, 0.09099975228309631, 0.09387470781803131]}, "gradients/classifier.bias": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.0654682070016861, -0.06339701265096664, -0.06132581830024719, -0.05925462394952774, -0.05718342587351799, -0.05511223152279854, -0.053041037172079086, -0.050969842821359634, -0.048898644745349884, -0.04682745039463043, -0.04475625604391098, -0.04268506169319153, -0.040613867342472076, -0.038542672991752625, -0.03647147864103317, -0.03440028056502342, -0.03232908621430397, -0.03025789186358452, -0.028186697512865067, -0.026115499436855316, -0.024044305086135864, -0.021973110735416412, -0.01990191638469696, -0.01783072203397751, -0.015759527683258057, -0.013688329607248306, -0.011617135256528854, -0.009545940905809402, -0.0074747465550899506, -0.005403552204370499, -0.0033323541283607483, -0.0012611597776412964, 0.0008100345730781555, 0.0028812289237976074, 0.004952423274517059, 0.007023617625236511, 0.009094811975955963, 0.011166006326675415, 0.013237208127975464, 0.015308402478694916, 0.017379596829414368, 0.01945079118013382, 0.02152198553085327, 0.023593179881572723, 0.025664374232292175, 0.027735568583011627, 0.02980676293373108, 0.03187795728445053, 0.03394915163516998, 0.03602035343647003, 0.038091547787189484, 0.040162742137908936, 0.04223393648862839, 0.04430513083934784, 0.04637632519006729, 0.04844751954078674, 0.050518713891506195, 0.05258990824222565, 0.0546611025929451, 0.05673230439424515, 0.0588034987449646, 0.060874685645103455, 0.0629458874464035, 0.06501707434654236, 0.06708827614784241]}, "val_acc": 0.23687943262411348, "_runtime": 814.0969541072845, "_timestamp": 1579509224.6157851}
-+{"graph_0": {"_type": "graph", "edges": [], "nodes": [{"id": 140438557381128, "name": "conv_stem", "class_name": "Conv2dSame(3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False)", "parameters": [["weight", [40, 3, 3, 3]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [1080]}, {"id": 140438557383704, "name": "bn1", "class_name": "BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [40]], ["bias", [40]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [40, 40]}, {"id": 140438557382920, "name": "blocks.0.0", "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)\n  (bn1): BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [40, 1, 3, 3]], ["bn1.weight", [40]], ["bn1.bias", [40]], ["se.conv_reduce.weight", [10, 40, 1, 1]], ["se.conv_reduce.bias", [10]], ["se.conv_expand.weight", [40, 10, 1, 1]], ["se.conv_expand.bias", [40]], ["conv_pw.weight", [24, 40, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [360, 40, 40, 400, 10, 400, 40, 960, 24, 24]}, {"id": 140438680665224, "name": "blocks.0.1", "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)\n  (bn1): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [24, 1, 3, 3]], ["bn1.weight", [24]], ["bn1.bias", [24]], ["se.conv_reduce.weight", [6, 24, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [24, 6, 1, 1]], ["se.conv_expand.bias", [24]], ["conv_pw.weight", [24, 24, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [216, 24, 24, 144, 6, 144, 24, 576, 24, 24]}, {"id": 140438676598736, "name": "blocks.1.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(144, 144, kernel_size=(3, 3), stride=(2, 2), groups=144, bias=False)\n  (bn2): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [144, 24, 1, 1]], ["bn1.weight", [144]], ["bn1.bias", [144]], ["conv_dw.weight", [144, 1, 3, 3]], ["bn2.weight", [144]], ["bn2.bias", [144]], ["se.conv_reduce.weight", [6, 144, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [144, 6, 1, 1]], ["se.conv_expand.bias", [144]], ["conv_pwl.weight", [32, 144, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 4608, 32, 32]}, {"id": 140438557424160, "name": "blocks.1.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"id": 140438679559640, "name": "blocks.1.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"id": 140438679470320, "name": "blocks.2.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(192, 192, kernel_size=(5, 5), stride=(2, 2), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 5, 5]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [48, 192, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [6144, 192, 192, 4800, 192, 192, 1536, 8, 1536, 192, 9216, 48, 48]}, {"id": 140438557424384, "name": "blocks.2.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"id": 140438557422704, "name": "blocks.2.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"id": 140438557421920, "name": "blocks.3.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(288, 288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 3, 3]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [96, 288, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [13824, 288, 288, 2592, 288, 288, 3456, 12, 3456, 288, 27648, 96, 96]}, {"id": 140438557422816, "name": "blocks.3.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557824392, "name": "blocks.3.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557825232, "name": "blocks.3.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557825176, "name": "blocks.3.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557824672, "name": "blocks.4.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 5, 5]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [136, 576, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [55296, 576, 576, 14400, 576, 576, 13824, 24, 13824, 576, 78336, 136, 136]}, {"id": 140438557823496, "name": "blocks.4.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679158968, "name": "blocks.4.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679496744, "name": "blocks.4.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679422456, "name": "blocks.4.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679421448, "name": "blocks.5.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(816, 816, kernel_size=(5, 5), stride=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [232, 816, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 189312, 232, 232]}, {"id": 140438679580400, "name": "blocks.5.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140438679115088, "name": "blocks.5.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140438676984832, "name": "blocks.5.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140440670709296, "name": "blocks.5.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140440670710192, "name": "blocks.5.5", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140440670709464, "name": "blocks.6.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 3, 3]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [384, 1392, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [322944, 1392, 1392, 12528, 1392, 1392, 80736, 58, 80736, 1392, 534528, 384, 384]}, {"id": 140438679947864, "name": "blocks.6.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(384, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)\n  (bn2): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(2304, 96, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(96, 2304, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(2304, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [2304, 384, 1, 1]], ["bn1.weight", [2304]], ["bn1.bias", [2304]], ["conv_dw.weight", [2304, 1, 3, 3]], ["bn2.weight", [2304]], ["bn2.bias", [2304]], ["se.conv_reduce.weight", [96, 2304, 1, 1]], ["se.conv_reduce.bias", [96]], ["se.conv_expand.weight", [2304, 96, 1, 1]], ["se.conv_expand.bias", [2304]], ["conv_pwl.weight", [384, 2304, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [884736, 2304, 2304, 20736, 2304, 2304, 221184, 96, 221184, 2304, 884736, 384, 384]}, {"id": 140438557382584, "name": "conv_head", "class_name": "Conv2d(384, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)", "parameters": [["weight", [1536, 384, 1, 1]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [589824]}, {"id": 140438703610848, "name": "bn2", "class_name": "BatchNorm2d(1536, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [1536]], ["bias", [1536]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [1536, 1536]}, {"id": 140438703610792, "name": "global_pool", "class_name": "SelectAdaptivePool2d (output_size=1, pool_type=avg)", "parameters": [], "output_shape": [[256, 1536, 1, 1]], "num_parameters": []}, {"id": 140438679885696, "name": "classifier", "class_name": "Linear(in_features=1536, out_features=4, bias=True)", "parameters": [["weight", [4, 1536]], ["bias", [4]]], "output_shape": [[256, 4]], "num_parameters": [6144, 4]}], "format": "torch"}, "train_acc": 0.2653650279586515, "_step": 4, "gradients/classifier.weight": {"bins": [-0.0888357013463974, -0.08612215518951416, -0.08340860903263092, -0.08069506287574768, -0.07798151671886444, -0.0752679631114006, -0.07255441695451736, -0.06984087079763412, -0.06712732464075089, -0.06441377848386765, -0.061700232326984406, -0.05898668244481087, -0.05627313628792763, -0.05355959013104439, -0.05084604024887085, -0.04813249409198761, -0.04541894793510437, -0.04270540177822113, -0.03999185562133789, -0.03727830573916435, -0.03456475958228111, -0.03185121342539787, -0.029137663543224335, -0.026424117386341095, -0.023710571229457855, -0.020997025072574615, -0.018283478915691376, -0.015569932758808136, -0.0128563791513443, -0.01014283299446106, -0.00742928683757782, -0.00471574068069458, -0.0020021945238113403, 0.0007113516330718994, 0.003424897789955139, 0.006138443946838379, 0.008851990103721619, 0.011565543711185455, 0.014279089868068697, 0.016992636024951935, 0.019706182181835175, 0.022419728338718414, 0.025133274495601658, 0.027846820652484897, 0.03056037425994873, 0.03327392041683197, 0.03598746657371521, 0.03870101273059845, 0.04141455888748169, 0.04412810504436493, 0.04684165120124817, 0.04955519735813141, 0.05226874351501465, 0.05498228967189789, 0.05769583582878113, 0.06040938198566437, 0.0631229430437088, 0.06583648920059204, 0.06855003535747528, 0.07126358151435852, 0.07397712767124176, 0.076690673828125, 0.07940421998500824, 0.08211776614189148, 0.08483131229877472], "_type": "histogram", "values": [1, 0, 0, 0, 2, 0, 1, 0, 10, 6, 9, 13, 11, 18, 18, 29, 47, 58, 58, 70, 96, 103, 104, 181, 183, 180, 232, 264, 280, 262, 304, 320, 289, 307, 281, 323, 255, 289, 218, 224, 185, 155, 132, 132, 118, 76, 65, 59, 48, 22, 30, 26, 17, 9, 5, 3, 4, 2, 3, 3, 1, 2, 0, 1]}, "gradients/classifier.bias": {"bins": [-0.037257447838783264, -0.035971060395240784, -0.034684669226408005, -0.033398281782865524, -0.032111890614032745, -0.030825503170490265, -0.029539113864302635, -0.028252724558115005, -0.026966335251927376, -0.025679945945739743, -0.024393556639552116, -0.023107167333364487, -0.02182077988982201, -0.020534390583634377, -0.019248001277446747, -0.017961611971259117, -0.016675222665071487, -0.015388833358883858, -0.014102444052696228, -0.012816054746508598, -0.011529665440320969, -0.010243277996778488, -0.008956888690590858, -0.007670499384403229, -0.006384110078215599, -0.005097720772027969, -0.003811333328485489, -0.00252494215965271, -0.0012385547161102295, 4.783645272254944e-05, 0.00133422389626503, 0.002620615065097809, 0.003907002508640289, 0.00519338995218277, 0.006479781121015549, 0.007766168564558029, 0.009052559733390808, 0.010338947176933289, 0.011625338345766068, 0.012911725789308548, 0.014198116958141329, 0.015484504401683807, 0.016770891845226288, 0.018057283014059067, 0.019343670457601547, 0.02063006162643433, 0.021916449069976807, 0.023202840238809586, 0.024489227682352063, 0.025775618851184845, 0.027062006294727325, 0.02834839373826981, 0.029634781181812286, 0.030921176075935364, 0.032207563519477844, 0.033493950963020325, 0.034780338406562805, 0.036066725850105286, 0.03735312074422836, 0.03863950818777085, 0.03992589563131333, 0.04121228307485581, 0.04249867796897888, 0.04378506541252136, 0.04507145285606384], "_type": "histogram", "values": [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]}, "val_acc": 0.262789598108747, "_runtime": 1448.6882483959198, "_timestamp": 1579509859.2070794}
diff --git a/wandb/run-20200120_081855-gzutdaae/requirements.txt b/wandb/run-20200120_081855-gzutdaae/requirements.txt
deleted file mode 100644
index 2143393..0000000
--- a/wandb/run-20200120_081855-gzutdaae/requirements.txt
+++ /dev/null
@@ -1,267 +0,0 @@
-absl-py==0.9.0
-alabaster==0.7.12
-albumentations==0.4.3
-anaconda-client==1.7.2
-anaconda-navigator==1.9.7
-anaconda-project==0.8.3
-argh==0.26.2
-asn1crypto==1.3.0
-astroid==2.3.3
-astropy==4.0
-atomicwrites==1.3.0
-attrs==19.3.0
-autopep8==1.4.4
-babel==2.8.0
-backcall==0.1.0
-backports.os==0.1.1
-backports.shutil-get-terminal-size==1.0.0
-beautifulsoup4==4.8.2
-bitarray==1.2.0
-bkcharts==0.2
-bleach==3.1.0
-bokeh==1.4.0
-boto==2.49.0
-bottleneck==1.3.1
-cachetools==4.0.0
-catalyst==20.1
-certifi==2019.11.28
-cffi==1.13.2
-chardet==3.0.4
-click==7.0
-cloudpickle==1.2.2
-clyent==1.2.2
-colorama==0.4.3
-conda-build==3.17.8
-conda-package-handling==1.6.0
-conda-verify==3.1.1
-conda==4.8.1
-configparser==4.0.2
-contextlib2==0.6.0.post1
-crc32c==2.0
-cryptography==2.8
-cycler==0.10.0
-cython==0.29.14
-cytoolz==0.10.1
-dask==2.9.1
-decorator==4.4.1
-defusedxml==0.6.0
-diff-match-patch==20181111
-distributed==2.9.1
-docker-pycreds==0.4.0
-docutils==0.15.2
-entrypoints==0.3
-et-xmlfile==1.0.1
-fastcache==1.1.0
-filelock==3.0.12
-flake8==3.7.9
-flask==1.1.1
-fsspec==0.6.2
-future==0.18.2
-gevent==1.4.0
-gitdb2==2.0.6
-gitpython==3.0.5
-glob2==0.7
-gmpy2==2.0.8
-google-auth-oauthlib==0.4.1
-google-auth==1.10.1
-gql==0.2.0
-graphql-core==1.1
-greenlet==0.4.15
-grpcio==1.26.0
-h5py==2.9.0
-heapdict==1.0.1
-html5lib==1.0.1
-hypothesis==4.54.2
-idna==2.8
-imageio==2.6.1
-imagesize==1.2.0
-imgaug==0.2.6
-importlib-metadata==1.3.0
-intervaltree==3.0.2
-ipykernel==5.1.3
-ipython-genutils==0.2.0
-ipython==7.11.1
-ipywidgets==7.5.1
-isort==4.3.21
-itsdangerous==1.1.0
-jdcal==1.4.1
-jedi==0.14.1
-jeepney==0.4.2
-jinja2==2.10.3
-joblib==0.14.1
-json5==0.8.5
-jsonschema==3.2.0
-jupyter-client==5.3.4
-jupyter-console==6.0.0
-jupyter-core==4.6.1
-jupyter==1.0.0
-jupyterlab-server==1.0.6
-jupyterlab==1.2.4
-keyring==20.0.0
-kiwisolver==1.1.0
-lazy-object-proxy==1.4.3
-libarchive-c==2.8
-lief==0.9.0
-llvmlite==0.31.0
-locket==0.2.0
-lxml==4.4.2
-markdown==3.1.1
-markupsafe==1.1.1
-matplotlib==3.1.1
-mccabe==0.6.1
-mistune==0.8.4
-mkl-fft==1.0.15
-mkl-random==1.1.0
-mkl-service==2.3.0
-mock==3.0.5
-more-itertools==8.0.2
-mpmath==1.1.0
-msgpack==0.6.1
-multipledispatch==0.6.0
-navigator-updater==0.2.1
-nbconvert==5.6.1
-nbformat==4.4.0
-networkx==2.4
-nltk==3.4.5
-nose==1.3.7
-notebook==6.0.2
-numba==0.47.0
-numexpr==2.7.0
-numpy==1.18.1
-numpydoc==0.9.2
-nvidia-ml-py3==7.352.0
-oauthlib==3.1.0
-olefile==0.46
-opencv-python-headless==4.1.2.30
-opencv-python==4.1.2.30
-openpyxl==3.0.2
-packaging==20.0
-pandas==0.25.3
-pandocfilters==1.4.2
-parso==0.5.2
-partd==1.1.0
-path==13.1.0
-pathlib2==2.3.5
-pathtools==0.1.2
-patsy==0.5.1
-pep8==1.7.1
-pexpect==4.7.0
-pickleshare==0.7.5
-pillow==6.2.1
-pip==19.3.1
-pkginfo==1.5.0.1
-plotly==4.4.1
-pluggy==0.13.1
-ply==3.11
-prometheus-client==0.7.1
-promise==2.3
-prompt-toolkit==2.0.10
-protobuf==3.11.2
-psutil==5.6.7
-ptyprocess==0.6.0
-py==1.8.1
-pyasn1-modules==0.2.8
-pyasn1==0.4.8
-pycodestyle==2.5.0
-pycosat==0.6.3
-pycparser==2.19
-pycrypto==2.6.1
-pycurl==7.43.0.3
-pydocstyle==4.0.1
-pyflakes==2.1.1
-pygments==2.5.2
-pylint==2.4.4
-pyodbc==4.0.27
-pyopenssl==19.1.0
-pyparsing==2.4.6
-pyrsistent==0.15.6
-pysocks==1.7.1
-pytest-arraydiff==0.3
-pytest-astropy-header==0.1.1
-pytest-astropy==0.7.0
-pytest-doctestplus==0.5.0
-pytest-openfiles==0.4.0
-pytest-remotedata==0.3.2
-pytest==5.3.2
-python-dateutil==2.8.1
-python-jsonrpc-server==0.3.2
-python-language-server==0.31.2
-pytz==2019.3
-pywavelets==1.1.1
-pyxdg==0.26
-pyyaml==5.2
-pyzmq==18.1.0
-qdarkstyle==2.7
-qtawesome==0.6.0
-qtconsole==4.6.0
-qtpy==1.9.0
-requests-oauthlib==1.3.0
-requests==2.22.0
-retrying==1.3.3
-rope==0.14.0
-rsa==4.0
-rtree==0.8.3
-ruamel-yaml==0.15.87
-safitty==1.3
-scikit-image==0.15.0
-scikit-learn==0.22.1
-scipy==1.3.2
-seaborn==0.9.0
-secretstorage==3.1.1
-send2trash==1.5.0
-sentry-sdk==0.14.0
-setuptools==45.0.0
-shortuuid==0.5.0
-simplegeneric==0.8.1
-singledispatch==3.4.0.3
-six==1.13.0
-smmap2==2.0.5
-snowballstemmer==2.0.0
-sortedcollections==1.1.2
-sortedcontainers==2.1.0
-soupsieve==1.9.5
-sphinx==2.3.1
-sphinxcontrib-applehelp==1.0.1
-sphinxcontrib-devhelp==1.0.1
-sphinxcontrib-htmlhelp==1.0.2
-sphinxcontrib-jsmath==1.0.1
-sphinxcontrib-qthelp==1.0.2
-sphinxcontrib-serializinghtml==1.1.3
-sphinxcontrib-websupport==1.1.2
-spyder-kernels==1.8.1
-spyder==4.0.1
-sqlalchemy==1.3.12
-statsmodels==0.10.1
-subprocess32==3.5.4
-sympy==1.5.1
-tables==3.6.1
-tblib==1.6.0
-tensorboard==2.1.0
-tensorboardx==2.0
-terminado==0.8.3
-testpath==0.4.4
-timm==0.1.14
-toolz==0.10.0
-torch==1.2.0
-torchvision==0.4.0a0
-tornado==6.0.3
-tqdm==4.41.1
-traitlets==4.3.3
-ujson==1.35
-unicodecsv==0.14.1
-urllib3==1.25.7
-wandb==0.8.21
-watchdog==0.9.0
-wcwidth==0.1.7
-webencodings==0.5.1
-werkzeug==0.16.0
-wheel==0.33.6
-widgetsnbextension==3.5.1
-wrapt==1.11.2
-wurlitzer==2.0.0
-xlrd==1.2.0
-xlsxwriter==1.2.7
-xlwt==1.3.0
-yapf==0.28.0
-zict==1.0.0
-zipp==0.6.0
\ No newline at end of file
diff --git a/wandb/run-20200120_081855-gzutdaae/upstream_diff_fea1daedb6b14125e1dec2c49a5e3b211d016f90.patch b/wandb/run-20200120_081855-gzutdaae/upstream_diff_fea1daedb6b14125e1dec2c49a5e3b211d016f90.patch
deleted file mode 100644
index 8c29a9a..0000000
--- a/wandb/run-20200120_081855-gzutdaae/upstream_diff_fea1daedb6b14125e1dec2c49a5e3b211d016f90.patch
+++ /dev/null
@@ -1,1265 +0,0 @@
-diff --git a/Efficientnet-b3-765.ipynb b/Efficientnet-b3-765.ipynb
-index 691c745..451f688 100644
---- a/Efficientnet-b3-765.ipynb
-+++ b/Efficientnet-b3-765.ipynb
-@@ -47,7 +47,7 @@
-        "\n",
-        "                Logging results to <a href=\"https://wandb.com\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-        "                Project page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch</a><br/>\n",
--       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm</a><br/>\n",
-+       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae</a><br/>\n",
-        "            "
-       ],
-       "text/plain": [
-@@ -67,7 +67,7 @@
-     {
-      "data": {
-       "text/plain": [
--       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm"
-+       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae"
-       ]
-      },
-      "execution_count": 2,
-@@ -77,7 +77,16 @@
-    ],
-    "source": [
-     "import wandb\n",
--    "wandb.init(project=\"droughtwatch\")"
-+    "wandb.init(project='droughtwatch', name='efficentnet-b3-765')"
-+   ]
-+  },
-+  {
-+   "cell_type": "code",
-+   "execution_count": 3,
-+   "metadata": {},
-+   "outputs": [],
-+   "source": [
-+    "os.environ['WANDB_NOTEBOOK_NAME'] = \"efficentnet-b3-765\""
-    ]
-   },
-   {
-@@ -89,7 +98,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 3,
-+   "execution_count": 4,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -112,7 +121,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 4,
-+   "execution_count": 5,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -147,7 +156,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 5,
-+   "execution_count": 6,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -188,7 +197,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 6,
-+   "execution_count": 7,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -226,7 +235,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 7,
-+   "execution_count": 8,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -244,7 +253,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 8,
-+   "execution_count": 9,
-    "metadata": {},
-    "outputs": [
-     {
-@@ -584,7 +593,7 @@
-        ")"
-       ]
-      },
--     "execution_count": 8,
-+     "execution_count": 9,
-      "metadata": {},
-      "output_type": "execute_result"
-     }
-@@ -597,16 +606,16 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 9,
-+   "execution_count": 10,
-    "metadata": {},
-    "outputs": [
-     {
-      "data": {
-       "text/plain": [
--       "[<wandb.wandb_torch.TorchGraph at 0x7f4ae970e6d8>]"
-+       "[<wandb.wandb_torch.TorchGraph at 0x7fba6796b390>]"
-       ]
-      },
--     "execution_count": 9,
-+     "execution_count": 10,
-      "metadata": {},
-      "output_type": "execute_result"
-     }
-@@ -624,7 +633,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 10,
-+   "execution_count": 11,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -651,7 +660,24 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 11,
-+   "execution_count": 15,
-+   "metadata": {},
-+   "outputs": [
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "/home/ubamba98\n"
-+     ]
-+    }
-+   ],
-+   "source": [
-+    "cd .."
-+   ]
-+  },
-+  {
-+   "cell_type": "code",
-+   "execution_count": 16,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -694,7 +720,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 12,
-+   "execution_count": 17,
-    "metadata": {},
-    "outputs": [
-     {
-@@ -741,7 +767,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 13,
-+   "execution_count": 20,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -751,7 +777,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 14,
-+   "execution_count": 21,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -760,7 +786,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 17,
-+   "execution_count": null,
-    "metadata": {
-     "scrolled": false
-    },
-@@ -775,7 +801,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "a613a74c934e4455b2b7bda8092750f6",
-+       "model_id": "80b522c9c4e64d92b6541c2f2c7d07b9",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -787,13 +813,6 @@
-      "output_type": "display_data"
-     },
-     {
--     "name": "stderr",
--     "output_type": "stream",
--     "text": [
--      "Failed to query for notebook name, you can set it manually with the WANDB_NOTEBOOK_NAME environment variable\n"
--     ]
--    },
--    {
-      "name": "stdout",
-      "output_type": "stream",
-      "text": [
-@@ -807,7 +826,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "c6559d9040414ad69b56af72a1ce0a07",
-+       "model_id": "04f71f6e37844647ae678399efcd907a",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -832,7 +851,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "eaee7f0b96914505a2d230b29921dd64",
-+       "model_id": "ee8db6d9d3e645098855574b993436d3",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -857,7 +876,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "87af1df00f004a05a4be631530bc1798",
-+       "model_id": "5ba7659d72cc455e9e844b732455ff47",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -882,7 +901,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "b78d43a2bd3b4bba9c9a7d60a572a916",
-+       "model_id": "f1e1f2aec05f43f6b6fbcbb5851eaa0f",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -892,16 +911,6 @@
-      },
-      "metadata": {},
-      "output_type": "display_data"
--    },
--    {
--     "name": "stdout",
--     "output_type": "stream",
--     "text": [
--      "\n",
--      "Calculating accuracies\n",
--      "Train accuracy:  0.2653650279586515 ;    Val accuracy:  0.262789598108747 \n",
--      "\n"
--     ]
-     }
-    ],
-    "source": [
-@@ -929,8 +938,8 @@
-     "    print('Train accuracy: ', train_acc, ';    Val accuracy: ', val_acc, \"\\n\")\n",
-     "    df_data=np.array([train_acc_list, val_acc_list]).T\n",
-     "    wandb.log({\n",
--    "        \"Test Accuracy\": val_acc,\n",
--    "        \"Train accuracy\": train_acc})\n",
-+    "        \"val_acc\": val_acc,\n",
-+    "        \"train_acc\": train_acc})\n",
-     "    df = pd.DataFrame(df_data,columns = ['train_accuracy','test_accuracy'])\n",
-     "    df.to_csv('logs/b3-765.csv')\n",
-     "model_wgt = \"models/b3-765_1_e\" + str(epoch+1) + \".pth\"\n",
-@@ -939,7 +948,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 18,
-+   "execution_count": null,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -952,208 +961,7 @@
-    "metadata": {
-     "scrolled": false
-    },
--   "outputs": [
--    {
--     "name": "stdout",
--     "output_type": "stream",
--     "text": [
--      "Starting epoch 1 / 10\n"
--     ]
--    },
--    {
--     "data": {
--      "application/vnd.jupyter.widget-view+json": {
--       "model_id": "16450c2e6a644a40855ec79d4250f97d",
--       "version_major": 2,
--       "version_minor": 0
--      },
--      "text/plain": [
--       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
--      ]
--     },
--     "metadata": {},
--     "output_type": "display_data"
--    },
--    {
--     "name": "stderr",
--     "output_type": "stream",
--     "text": [
--      "Failed to query for notebook name, you can set it manually with the WANDB_NOTEBOOK_NAME environment variable\n"
--     ]
--    },
--    {
--     "name": "stdout",
--     "output_type": "stream",
--     "text": [
--      "\n",
--      "Calculating accuracies\n",
--      "Train accuracy:  0.5801701490638866 ;    Val accuracy:  0.6363120567375886\n",
--      "*** New optimal found, saving state ***\n",
--      "Starting epoch 2 / 10\n"
--     ]
--    },
--    {
--     "data": {
--      "application/vnd.jupyter.widget-view+json": {
--       "model_id": "6d41a72300af4dff9d0d056e1346b049",
--       "version_major": 2,
--       "version_minor": 0
--      },
--      "text/plain": [
--       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
--      ]
--     },
--     "metadata": {},
--     "output_type": "display_data"
--    },
--    {
--     "name": "stdout",
--     "output_type": "stream",
--     "text": [
--      "\n",
--      "Calculating accuracies\n",
--      "Train accuracy:  0.6266651664065672 ;    Val accuracy:  0.6672340425531915\n",
--      "*** New optimal found, saving state ***\n",
--      "Starting epoch 3 / 10\n"
--     ]
--    },
--    {
--     "data": {
--      "application/vnd.jupyter.widget-view+json": {
--       "model_id": "ebdaf6842b37444b9b84d94b336324ac",
--       "version_major": 2,
--       "version_minor": 0
--      },
--      "text/plain": [
--       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
--      ]
--     },
--     "metadata": {},
--     "output_type": "display_data"
--    },
--    {
--     "name": "stdout",
--     "output_type": "stream",
--     "text": [
--      "\n",
--      "Calculating accuracies\n",
--      "Train accuracy:  0.6697112162380325 ;    Val accuracy:  0.6526713947990543\n",
--      "Starting epoch 4 / 10\n"
--     ]
--    },
--    {
--     "data": {
--      "application/vnd.jupyter.widget-view+json": {
--       "model_id": "5ddcea86ad1f4e33bca80f7d8d4f0ed6",
--       "version_major": 2,
--       "version_minor": 0
--      },
--      "text/plain": [
--       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
--      ]
--     },
--     "metadata": {},
--     "output_type": "display_data"
--    },
--    {
--     "name": "stdout",
--     "output_type": "stream",
--     "text": [
--      "\n",
--      "Calculating accuracies\n",
--      "Train accuracy:  0.672612262669452 ;    Val accuracy:  0.6879432624113475\n",
--      "*** New optimal found, saving state ***\n",
--      "Starting epoch 5 / 10\n"
--     ]
--    },
--    {
--     "data": {
--      "application/vnd.jupyter.widget-view+json": {
--       "model_id": "d6f0bf6c69204257b4b188493814ef3f",
--       "version_major": 2,
--       "version_minor": 0
--      },
--      "text/plain": [
--       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
--      ]
--     },
--     "metadata": {},
--     "output_type": "display_data"
--    },
--    {
--     "name": "stdout",
--     "output_type": "stream",
--     "text": [
--      "\n",
--      "Calculating accuracies\n",
--      "Train accuracy:  0.6646625148599132 ;    Val accuracy:  0.6322458628841607\n",
--      "Starting epoch 6 / 10\n"
--     ]
--    },
--    {
--     "data": {
--      "application/vnd.jupyter.widget-view+json": {
--       "model_id": "3ccebae05875450aaa1062b6a58bafeb",
--       "version_major": 2,
--       "version_minor": 0
--      },
--      "text/plain": [
--       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
--      ]
--     },
--     "metadata": {},
--     "output_type": "display_data"
--    },
--    {
--     "name": "stdout",
--     "output_type": "stream",
--     "text": [
--      "\n",
--      "Calculating accuracies\n",
--      "Train accuracy:  0.7050668023423626 ;    Val accuracy:  0.6571158392434988\n",
--      "Starting epoch 7 / 10\n"
--     ]
--    },
--    {
--     "data": {
--      "application/vnd.jupyter.widget-view+json": {
--       "model_id": "ecfdae4c32ac4e3c90bfafb35a74898c",
--       "version_major": 2,
--       "version_minor": 0
--      },
--      "text/plain": [
--       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
--      ]
--     },
--     "metadata": {},
--     "output_type": "display_data"
--    },
--    {
--     "name": "stdout",
--     "output_type": "stream",
--     "text": [
--      "\n",
--      "Calculating accuracies\n",
--      "Train accuracy:  0.7046852144475048 ;    Val accuracy:  0.7300236406619386\n",
--      "*** New optimal found, saving state ***\n",
--      "Starting epoch 8 / 10\n"
--     ]
--    },
--    {
--     "data": {
--      "application/vnd.jupyter.widget-view+json": {
--       "model_id": "aaeca08757e84300b77429b26c30ac78",
--       "version_major": 2,
--       "version_minor": 0
--      },
--      "text/plain": [
--       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
--      ]
--     },
--     "metadata": {},
--     "output_type": "display_data"
--    }
--   ],
-+   "outputs": [],
-    "source": [
-     "# # Now we want to finetune the entire model for a few epochs. To do thise we\n",
-     "# # will need to compute gradients with respect to all model parameters, so\n",
-@@ -1182,8 +990,8 @@
-     "    \n",
-     "    print('Train accuracy: ', train_acc, ';    Val accuracy: ', val_acc)\n",
-     "    wandb.log({\n",
--    "        \"Test Accuracy\": val_acc,\n",
--    "        \"Train accuracy\": train_acc})\n",
-+    "        \"val_acc\": val_acc,\n",
-+    "        \"train_acc\": train_acc})\n",
-     "    df_data=np.array([train_acc_list, val_acc_list]).T\n",
-     "    df = pd.DataFrame(df_data,columns = ['train_accuracy','test_accuracy'])\n",
-     "    df.to_csv('logs/b3-765.csv')\n",
-@@ -1271,8 +1079,8 @@
-     "    \n",
-     "    print('Train accuracy: ', train_acc, ';    Val accuracy: ', val_acc)\n",
-     "    wandb.log({\n",
--    "        \"Test Accuracy\": val_acc,\n",
--    "        \"Train accuracy\": train_acc})\n",
-+    "        \"val_acc\": val_acc,\n",
-+    "        \"train_acc\": train_acc})\n",
-     "    df_data=np.array([train_acc_list, val_acc_list]).T\n",
-     "    df = pd.DataFrame(df_data,columns = ['train_accuracy','test_accuracy'])\n",
-     "    df.to_csv('logs/b3-765.csv')\n",
-diff --git a/wandb/run-20200120_081855-gzutdaae/config.yaml b/wandb/run-20200120_081855-gzutdaae/config.yaml
-new file mode 100644
-index 0000000..1189525
---- /dev/null
-+++ b/wandb/run-20200120_081855-gzutdaae/config.yaml
-@@ -0,0 +1,8 @@
-+wandb_version: 1
-+
-+_wandb:
-+  desc: null
-+  value:
-+    cli_version: 0.8.21
-+    is_jupyter_run: true
-+    python_version: 3.7.3
-diff --git a/wandb/run-20200120_081855-gzutdaae/diff.patch b/wandb/run-20200120_081855-gzutdaae/diff.patch
-new file mode 100644
-index 0000000..1aee41d
---- /dev/null
-+++ b/wandb/run-20200120_081855-gzutdaae/diff.patch
-@@ -0,0 +1,370 @@
-+diff --git a/Efficientnet-b3-765.ipynb b/Efficientnet-b3-765.ipynb
-+index e21879d..451f688 100644
-+--- a/Efficientnet-b3-765.ipynb
-++++ b/Efficientnet-b3-765.ipynb
-+@@ -842,8 +842,75 @@
-+      "output_type": "stream",
-+      "text": [
-+       "\n",
-+-      "Calculating accuracies\n"
-++      "Calculating accuracies\n",
-++      "Train accuracy:  0.258383926343752 ;    Val accuracy:  0.25011820330969264 \n",
-++      "\n",
-++      "Starting epoch 3 / 5\n"
-++     ]
-++    },
-++    {
-++     "data": {
-++      "application/vnd.jupyter.widget-view+json": {
-++       "model_id": "ee8db6d9d3e645098855574b993436d3",
-++       "version_major": 2,
-++       "version_minor": 0
-++      },
-++      "text/plain": [
-++       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-++      ]
-++     },
-++     "metadata": {},
-++     "output_type": "display_data"
-++    },
-++    {
-++     "name": "stdout",
-++     "output_type": "stream",
-++     "text": [
-++      "\n",
-++      "Calculating accuracies\n",
-++      "Train accuracy:  0.2603407873430231 ;    Val accuracy:  0.24964539007092199 \n",
-++      "\n",
-++      "Starting epoch 4 / 5\n"
-+      ]
-++    },
-++    {
-++     "data": {
-++      "application/vnd.jupyter.widget-view+json": {
-++       "model_id": "5ba7659d72cc455e9e844b732455ff47",
-++       "version_major": 2,
-++       "version_minor": 0
-++      },
-++      "text/plain": [
-++       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-++      ]
-++     },
-++     "metadata": {},
-++     "output_type": "display_data"
-++    },
-++    {
-++     "name": "stdout",
-++     "output_type": "stream",
-++     "text": [
-++      "\n",
-++      "Calculating accuracies\n",
-++      "Train accuracy:  0.2627868635921119 ;    Val accuracy:  0.26222222222222225 \n",
-++      "\n",
-++      "Starting epoch 5 / 5\n"
-++     ]
-++    },
-++    {
-++     "data": {
-++      "application/vnd.jupyter.widget-view+json": {
-++       "model_id": "f1e1f2aec05f43f6b6fbcbb5851eaa0f",
-++       "version_major": 2,
-++       "version_minor": 0
-++      },
-++      "text/plain": [
-++       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-++      ]
-++     },
-++     "metadata": {},
-++     "output_type": "display_data"
-+     }
-+    ],
-+    "source": [
-+diff --git a/wandb/run-20200120_081855-gzutdaae/diff.patch b/wandb/run-20200120_081855-gzutdaae/diff.patch
-+index c6015c1..e69de29 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/diff.patch
-++++ b/wandb/run-20200120_081855-gzutdaae/diff.patch
-+@@ -1,201 +0,0 @@
-+-diff --git a/Efficientnet-b3-765.ipynb b/Efficientnet-b3-765.ipynb
-+-index 691c745..9cf4f55 100644
-+---- a/Efficientnet-b3-765.ipynb
-+-+++ b/Efficientnet-b3-765.ipynb
-+-@@ -47,7 +47,7 @@
-+-        "\n",
-+-        "                Logging results to <a href=\"https://wandb.com\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-+-        "                Project page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch</a><br/>\n",
-+--       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm</a><br/>\n",
-+-+       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae</a><br/>\n",
-+-        "            "
-+-       ],
-+-       "text/plain": [
-+-@@ -67,7 +67,7 @@
-+-     {
-+-      "data": {
-+-       "text/plain": [
-+--       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm"
-+-+       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae"
-+-       ]
-+-      },
-+-      "execution_count": 2,
-+-@@ -77,7 +77,16 @@
-+-    ],
-+-    "source": [
-+-     "import wandb\n",
-+--    "wandb.init(project=\"droughtwatch\")"
-+-+    "wandb.init(project='droughtwatch', name='efficentnet-b3-765')"
-+-+   ]
-+-+  },
-+-+  {
-+-+   "cell_type": "code",
-+-+   "execution_count": 3,
-+-+   "metadata": {},
-+-+   "outputs": [],
-+-+   "source": [
-+-+    "os.environ['WANDB_NOTEBOOK_NAME'] = \"efficentnet-b3-765\""
-+-    ]
-+-   },
-+-   {
-+-@@ -89,7 +98,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 3,
-+-+   "execution_count": 4,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -112,7 +121,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 4,
-+-+   "execution_count": 5,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -147,7 +156,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 5,
-+-+   "execution_count": 6,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -188,7 +197,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 6,
-+-+   "execution_count": 7,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -226,7 +235,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 7,
-+-+   "execution_count": 8,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -244,7 +253,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 8,
-+-+   "execution_count": 9,
-+-    "metadata": {},
-+-    "outputs": [
-+-     {
-+-@@ -584,7 +593,7 @@
-+-        ")"
-+-       ]
-+-      },
-+--     "execution_count": 8,
-+-+     "execution_count": 9,
-+-      "metadata": {},
-+-      "output_type": "execute_result"
-+-     }
-+-@@ -597,16 +606,16 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 9,
-+-+   "execution_count": 10,
-+-    "metadata": {},
-+-    "outputs": [
-+-     {
-+-      "data": {
-+-       "text/plain": [
-+--       "[<wandb.wandb_torch.TorchGraph at 0x7f4ae970e6d8>]"
-+-+       "[<wandb.wandb_torch.TorchGraph at 0x7fba6796b390>]"
-+-       ]
-+-      },
-+--     "execution_count": 9,
-+-+     "execution_count": 10,
-+-      "metadata": {},
-+-      "output_type": "execute_result"
-+-     }
-+-@@ -624,7 +633,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 10,
-+-+   "execution_count": 11,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -651,57 +660,20 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 11,
-+--   "metadata": {},
-+--   "outputs": [],
-+--   "source": [
-+--    "class ImageDataset(Dataset):\n",
-+--    "        \n",
-+--    "    def __init__(self, transform=None, limit=None, mode = \"train\", train_dir=\"train\", val_dir=\"val\", weights = [1, 1, 1, 1]):\n",
-+--    "        \n",
-+--    "        self.transform = transform\n",
-+--    "        self.limit = limit\n",
-+--    "        self.mode = mode\n",
-+--    "        self.train_dir = train_dir\n",
-+--    "        self.val_dir = val_dir\n",
-+--    "        self.train_files=[]\n",
-+--    "        for i in range(4):\n",
-+--    "            self.train_files += glob.glob(self.train_dir+\"/*\"+str(i)+\"/*\") * weights[i]\n",
-+--    "        self.val_files=glob.glob(self.val_dir+\"/*/*\")\n",
-+--    "        self.train_sample_count = len(self.train_files)\n",
-+--    "        self.val_sample_count = len(self.val_files)\n",
-+--    "        \n",
-+--    "    def __len__(self):\n",
-+--    "        if self.mode == \"train\":\n",
-+--    "            return (self.train_sample_count)\n",
-+--    "        else:\n",
-+--    "            return(self.val_sample_count)\n",
-+--    "\n",
-+--    "    def __getitem__(self, idx): \n",
-+--    "        if self.mode == \"train\":\n",
-+--    "            return (self.get_img(self.train_files[idx]), int(self.train_files[idx].split('/')[-2].split(\"_\")[-1]))\n",
-+--    "        if self.mode == \"val\":\n",
-+--    "            return (self.get_img(self.val_files[idx]), int(self.val_files[idx].split('/')[-2].split(\"_\")[-1]))\n",
-+--    "        \n",
-+--    "    def get_img(self, img_dir):\n",
-+--    "        img = np.load(img_dir)\n",
-+--    "        #img = img.transpose((1, 2, 0))\n",
-+--    "        img = img[:, :, [6, 5, 4]] ## Select for channels to run\n",
-+--    "        img = self.transform(img)\n",
-+--    "        img = torch.from_numpy(np.moveaxis(img, -1, 0)).float()  \n",
-+--    "        return img"
-+--   ]
-+--  },
-+--  {
-+--   "cell_type": "code",
-+--   "execution_count": 12,
-+-+   "execution_count": 14,
-+-    "metadata": {},
-+-    "outputs": [
-+-     {
-+--     "name": "stdout",
-+--     "output_type": "stream",
-+--     "text": [
-+--      "{'train': 799, 'val': 331}\n"
-+-+     "ename": "ValueError",
-+-+     "evalue": "num_samples should be a positive integer value, but got num_samples=0",
-+-+     "output_type": "error",
-+-+     "traceback": [
-+-+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
-+-+      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
-+-+      "\u001b[0;32m<ipython-input-14-06a69a7d0d7b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      5\u001b[0m                 \u001b[0mshuffle\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m                 \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m256\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m                 \u001b[0mnum_workers\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m             )\n\u001b[1;32m      9\u001b[0m valid_loader = DataLoader(\n",
-+-+      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/torch/utils/data/dataloader.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, dataset, batch_size, shuffle, sampler, batch_sampler, num_workers, collate_fn, pin_memory, drop_last, timeout, worker_init_fn, multiprocessing_context)\u001b[0m\n\u001b[1;32m    211\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# map-style\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    212\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mshuffle\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 213\u001b[0;31m                     \u001b[0msampler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mRandomSampler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    214\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    215\u001b[0m                     \u001b[0msampler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSequentialSampler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
-+-+      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/torch/utils/data/sampler.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data_source, replacement, num_samples)\u001b[0m\n\u001b[1;32m     92\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnum_samples\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnum_samples\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     93\u001b[0m             raise ValueError(\"num_samples should be a positive integer \"\n\u001b[0;32m---> 94\u001b[0;31m                              \"value, but got num_samples={}\".format(self.num_samples))\n\u001b[0m\u001b[1;32m     95\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     96\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
-+-+      "\u001b[0;31mValueError\u001b[0m: num_samples should be a positive integer value, but got num_samples=0"
-+-      ]
-+-     }
-+-    ],
-+diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-+index bebeecd..fbd17e8 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-++++ b/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-+@@ -1,26 +1,10 @@
-+-{"system.network.sent":15797,"system.gpu.0.powerPercent":41.9,"system.network.recv":65303,"system.disk":22.4,"system.gpu.0.powerWatts":29.33,"_wandb":true,"system.gpu.0.temp":61,"system.gpu.0.memory":0,"system.gpu.0.gpu":0,"_runtime":1,"system.proc.memory.rssMB":262.66,"system.proc.memory.availableMB":14300.84,"system.cpu":13.75,"system.proc.cpu.threads":17,"system.memory":4.9,"system.proc.memory.percent":1.75,"system.gpu.0.memoryAllocated":0,"_timestamp":1579508336}
-+-{"system.gpu.0.gpu": 10.2, "system.gpu.0.memory": 7.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 68.0, "system.gpu.0.powerWatts": 37.18, "system.gpu.0.powerPercent": 53.11, "system.cpu": 6.9, "system.memory": 22.68, "system.disk": 22.4, "system.proc.memory.availableMB": 11632.24, "system.proc.memory.rssMB": 2960.92, "system.proc.memory.percent": 19.68, "system.proc.cpu.threads": 27.87, "system.network.sent": 244468, "system.network.recv": 251940, "_wandb": true, "_timestamp": 1579508635, "_runtime": 42}
-+-{"system.gpu.0.gpu": 5.47, "system.gpu.0.memory": 4.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 69.93, "system.gpu.0.powerWatts": 38.27, "system.gpu.0.powerPercent": 54.67, "system.cpu": 6.63, "system.memory": 22.78, "system.disk": 22.4, "system.proc.memory.availableMB": 11615.58, "system.proc.memory.rssMB": 2961.46, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 339293, "system.network.recv": 337753, "_wandb": true, "_timestamp": 1579508665, "_runtime": 73}
-+-{"system.gpu.0.gpu": 8.87, "system.gpu.0.memory": 6.47, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 72.07, "system.gpu.0.powerWatts": 40.58, "system.gpu.0.powerPercent": 57.97, "system.cpu": 7.19, "system.memory": 22.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11605.85, "system.proc.memory.rssMB": 2961.46, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 431682, "system.network.recv": 429114, "_wandb": true, "_timestamp": 1579508695, "_runtime": 103}
-+-{"system.gpu.0.gpu": 8.67, "system.gpu.0.memory": 5.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 73.27, "system.gpu.0.powerWatts": 36.56, "system.gpu.0.powerPercent": 52.23, "system.cpu": 7.94, "system.memory": 22.88, "system.disk": 22.4, "system.proc.memory.availableMB": 11602.32, "system.proc.memory.rssMB": 2961.81, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 534529, "system.network.recv": 530758, "_wandb": true, "_timestamp": 1579508725, "_runtime": 133}
-+-{"system.gpu.0.gpu": 8.87, "system.gpu.0.memory": 5.8, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 74.93, "system.gpu.0.powerWatts": 43.21, "system.gpu.0.powerPercent": 61.73, "system.cpu": 8.45, "system.memory": 22.98, "system.disk": 22.4, "system.proc.memory.availableMB": 11587.51, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 635626, "system.network.recv": 634655, "_wandb": true, "_timestamp": 1579508756, "_runtime": 163}
-+-{"system.gpu.0.gpu": 9.87, "system.gpu.0.memory": 7.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 42.67, "system.gpu.0.powerPercent": 60.96, "system.cpu": 8.79, "system.memory": 23.02, "system.disk": 22.4, "system.proc.memory.availableMB": 11581.47, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 748987, "system.network.recv": 747904, "_wandb": true, "_timestamp": 1579508786, "_runtime": 193}
-+-{"system.gpu.0.gpu": 11.87, "system.gpu.0.memory": 8.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.67, "system.gpu.0.powerWatts": 44.82, "system.gpu.0.powerPercent": 64.03, "system.cpu": 9.73, "system.memory": 23.07, "system.disk": 22.4, "system.proc.memory.availableMB": 11575.17, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 873256, "system.network.recv": 874007, "_wandb": true, "_timestamp": 1579508816, "_runtime": 223}
-+-{"system.gpu.0.gpu": 11.0, "system.gpu.0.memory": 8.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.27, "system.gpu.0.powerWatts": 38.19, "system.gpu.0.powerPercent": 54.55, "system.cpu": 10.57, "system.memory": 23.05, "system.disk": 22.4, "system.proc.memory.availableMB": 11572.48, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1023164, "system.network.recv": 1026940, "_wandb": true, "_timestamp": 1579508846, "_runtime": 253}
-+-{"system.gpu.0.gpu": 14.2, "system.gpu.0.memory": 10.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.27, "system.gpu.0.powerWatts": 42.89, "system.gpu.0.powerPercent": 61.28, "system.cpu": 11.98, "system.memory": 23.15, "system.disk": 22.4, "system.proc.memory.availableMB": 11561.87, "system.proc.memory.rssMB": 2962.21, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1178866, "system.network.recv": 1181511, "_wandb": true, "_timestamp": 1579508876, "_runtime": 283}
-+-{"system.gpu.0.gpu": 13.0, "system.gpu.0.memory": 10.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 78.0, "system.gpu.0.powerWatts": 50.01, "system.gpu.0.powerPercent": 71.45, "system.cpu": 13.59, "system.memory": 23.22, "system.disk": 22.4, "system.proc.memory.availableMB": 11553.44, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1331123, "system.network.recv": 1336366, "_wandb": true, "_timestamp": 1579508906, "_runtime": 314}
-+-{"system.gpu.0.gpu": 25.13, "system.gpu.0.memory": 21.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.33, "system.gpu.0.powerWatts": 45.73, "system.gpu.0.powerPercent": 65.33, "system.cpu": 15.11, "system.memory": 23.2, "system.disk": 22.4, "system.proc.memory.availableMB": 11550.57, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1518597, "system.network.recv": 1523627, "_wandb": true, "_timestamp": 1579508936, "_runtime": 344}
-+-{"system.gpu.0.gpu": 19.67, "system.gpu.0.memory": 16.87, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.53, "system.gpu.0.powerWatts": 49.57, "system.gpu.0.powerPercent": 70.82, "system.cpu": 17.23, "system.memory": 23.21, "system.disk": 22.4, "system.proc.memory.availableMB": 11547.93, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1702121, "system.network.recv": 1710364, "_wandb": true, "_timestamp": 1579508966, "_runtime": 374}
-+-{"system.gpu.0.gpu": 18.4, "system.gpu.0.memory": 15.73, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.2, "system.gpu.0.powerWatts": 51.24, "system.gpu.0.powerPercent": 73.2, "system.cpu": 18.21, "system.memory": 23.35, "system.disk": 22.4, "system.proc.memory.availableMB": 11531.67, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1856007, "system.network.recv": 1863572, "_wandb": true, "_timestamp": 1579508997, "_runtime": 404}
-+-{"system.gpu.0.gpu": 18.8, "system.gpu.0.memory": 16.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.47, "system.gpu.0.powerWatts": 49.62, "system.gpu.0.powerPercent": 70.89, "system.cpu": 19.99, "system.memory": 23.32, "system.disk": 22.4, "system.proc.memory.availableMB": 11535.11, "system.proc.memory.rssMB": 2962.48, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2016161, "system.network.recv": 2023461, "_wandb": true, "_timestamp": 1579509027, "_runtime": 434}
-+-{"system.gpu.0.gpu": 21.0, "system.gpu.0.memory": 18.07, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.13, "system.gpu.0.powerWatts": 50.49, "system.gpu.0.powerPercent": 72.13, "system.cpu": 20.69, "system.memory": 23.18, "system.disk": 22.4, "system.proc.memory.availableMB": 11552.24, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2245090, "system.network.recv": 2255638, "_wandb": true, "_timestamp": 1579509057, "_runtime": 464}
-+-{"system.gpu.0.gpu": 17.07, "system.gpu.0.memory": 14.13, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.13, "system.gpu.0.powerWatts": 51.83, "system.gpu.0.powerPercent": 74.04, "system.cpu": 21.11, "system.memory": 23.25, "system.disk": 22.4, "system.proc.memory.availableMB": 11542.37, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2746309, "system.network.recv": 2487509, "_wandb": true, "_timestamp": 1579509087, "_runtime": 494}
-+-{"system.gpu.0.gpu": 66.47, "system.gpu.0.memory": 44.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 78.4, "system.gpu.0.powerWatts": 64.54, "system.gpu.0.powerPercent": 92.21, "system.cpu": 78.97, "system.memory": 23.2, "system.disk": 22.4, "system.proc.memory.availableMB": 11552.42, "system.proc.memory.rssMB": 2957.19, "system.proc.memory.percent": 19.66, "system.proc.cpu.threads": 27.2, "system.network.sent": 3696180, "system.network.recv": 2568386, "_wandb": true, "_timestamp": 1579509117, "_runtime": 525}
-+-{"system.gpu.0.gpu": 82.13, "system.gpu.0.memory": 53.73, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.33, "system.gpu.0.powerWatts": 67.07, "system.gpu.0.powerPercent": 95.82, "system.cpu": 99.89, "system.memory": 23.25, "system.disk": 22.4, "system.proc.memory.availableMB": 11541.6, "system.proc.memory.rssMB": 2956.42, "system.proc.memory.percent": 19.65, "system.proc.cpu.threads": 27.0, "system.network.sent": 3700982, "system.network.recv": 2571448, "_wandb": true, "_timestamp": 1579509147, "_runtime": 555}
-+-{"system.gpu.0.gpu": 78.07, "system.gpu.0.memory": 50.87, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.0, "system.gpu.0.powerWatts": 62.66, "system.gpu.0.powerPercent": 89.52, "system.cpu": 93.01, "system.memory": 23.62, "system.disk": 22.4, "system.proc.memory.availableMB": 11490.1, "system.proc.memory.rssMB": 2955.65, "system.proc.memory.percent": 19.65, "system.proc.cpu.threads": 27.0, "system.network.sent": 3709404, "system.network.recv": 2574045, "_wandb": true, "_timestamp": 1579509178, "_runtime": 585}
-+-{"system.gpu.0.gpu": 15.07, "system.gpu.0.memory": 3.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 71.73, "system.gpu.0.powerWatts": 34.48, "system.gpu.0.powerPercent": 49.26, "system.cpu": 25.27, "system.memory": 22.4, "system.disk": 22.4, "system.proc.memory.availableMB": 11676.86, "system.proc.memory.rssMB": 2950.69, "system.proc.memory.percent": 19.61, "system.proc.cpu.threads": 27.0, "system.network.sent": 3721790, "system.network.recv": 2631378, "_wandb": true, "_timestamp": 1579509208, "_runtime": 615}
-+-{"system.gpu.0.gpu": 45.27, "system.gpu.0.memory": 29.07, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 74.07, "system.gpu.0.powerWatts": 48.68, "system.gpu.0.powerPercent": 69.55, "system.cpu": 61.3, "system.memory": 22.83, "system.disk": 22.4, "system.proc.memory.availableMB": 11611.68, "system.proc.memory.rssMB": 2958.09, "system.proc.memory.percent": 19.66, "system.proc.cpu.threads": 27.47, "system.network.sent": 4312731, "system.network.recv": 3024984, "_wandb": true, "_timestamp": 1579509238, "_runtime": 645}
-+-{"system.gpu.0.gpu": 85.27, "system.gpu.0.memory": 64.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 80.4, "system.gpu.0.powerWatts": 69.5, "system.gpu.0.powerPercent": 99.29, "system.cpu": 98.87, "system.memory": 23.4, "system.disk": 22.4, "system.proc.memory.availableMB": 11523.09, "system.proc.memory.rssMB": 2965.59, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 28.0, "system.network.sent": 5355584, "system.network.recv": 3684826, "_wandb": true, "_timestamp": 1579509268, "_runtime": 675}
-+-{"system.gpu.0.gpu": 82.67, "system.gpu.0.memory": 63.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.13, "system.gpu.0.powerWatts": 68.41, "system.gpu.0.powerPercent": 97.73, "system.cpu": 97.43, "system.memory": 23.36, "system.disk": 22.4, "system.proc.memory.availableMB": 11527.65, "system.proc.memory.rssMB": 2966.13, "system.proc.memory.percent": 19.72, "system.proc.cpu.threads": 27.93, "system.network.sent": 6262772, "system.network.recv": 4284351, "_wandb": true, "_timestamp": 1579509298, "_runtime": 706}
-+-{"system.gpu.0.gpu": 84.6, "system.gpu.0.memory": 55.33, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.4, "system.gpu.0.powerWatts": 66.84, "system.gpu.0.powerPercent": 95.48, "system.cpu": 99.88, "system.memory": 23.27, "system.disk": 22.4, "system.proc.memory.availableMB": 11542.26, "system.proc.memory.rssMB": 2958.56, "system.proc.memory.percent": 19.67, "system.proc.cpu.threads": 27.0, "system.network.sent": 6275456, "system.network.recv": 4336424, "_wandb": true, "_timestamp": 1579509329, "_runtime": 736}
-+-{"system.gpu.0.gpu": 84.4, "system.gpu.0.memory": 55.13, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.73, "system.gpu.0.powerWatts": 73.68, "system.gpu.0.powerPercent": 105.26, "system.cpu": 99.89, "system.memory": 23.29, "system.disk": 22.4, "system.proc.memory.availableMB": 11538.26, "system.proc.memory.rssMB": 2958.56, "system.proc.memory.percent": 19.67, "system.proc.cpu.threads": 27.0, "system.network.sent": 6279094, "system.network.recv": 4342260, "_wandb": true, "_timestamp": 1579509359, "_runtime": 766}
-++{"system.network.sent":10977141,"system.gpu.0.powerPercent":96.79,"system.network.recv":7409894,"system.disk":22.4,"system.gpu.0.powerWatts":67.75,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":65.33,"system.gpu.0.gpu":85.6,"_runtime":1008,"system.proc.memory.rssMB":2966.29,"system.proc.memory.availableMB":11506.94,"system.cpu":98.25,"system.proc.cpu.threads":28,"system.memory":23.5,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509601}
-++{"system.network.sent":11502749,"system.gpu.0.powerPercent":97.46,"system.network.recv":7764756,"system.disk":22.4,"system.gpu.0.powerWatts":68.23,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":60.73,"system.gpu.0.gpu":85.87,"_runtime":1039,"system.proc.memory.rssMB":2962.16,"system.proc.memory.availableMB":11528.19,"system.cpu":97.55,"system.proc.cpu.threads":27.47,"system.memory":23.37,"system.proc.memory.percent":19.69,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509631}
-++{"system.network.sent":11508976,"system.gpu.0.powerPercent":102.06,"system.network.recv":7771440,"system.disk":22.4,"system.gpu.0.powerWatts":71.44,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.53,"system.gpu.0.gpu":85.6,"_runtime":1069,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11533.16,"system.cpu":99.91,"system.proc.cpu.threads":27,"system.memory":23.34,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509662}
-++{"system.network.sent":11522899,"system.gpu.0.powerPercent":93.89,"system.network.recv":7774171,"system.disk":22.4,"system.gpu.0.powerWatts":65.73,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.8,"_runtime":1099,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11449.37,"system.cpu":99.9,"system.proc.cpu.threads":27,"system.memory":23.89,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509692}
-++{"system.network.sent":12355982,"system.gpu.0.powerPercent":99.47,"system.network.recv":8325343,"system.disk":22.4,"system.gpu.0.powerWatts":69.63,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":53.6,"system.gpu.0.gpu":80.47,"_runtime":1129,"system.proc.memory.rssMB":2962.93,"system.proc.memory.availableMB":11549.31,"system.cpu":91.64,"system.proc.cpu.threads":27.73,"system.memory":23.23,"system.proc.memory.percent":19.7,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509722}
-++{"system.network.sent":13392411,"system.gpu.0.powerPercent":96.5,"system.network.recv":9022410,"system.disk":22.4,"system.gpu.0.powerWatts":67.55,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":66.2,"system.gpu.0.gpu":86.73,"_runtime":1160,"system.proc.memory.rssMB":2966.31,"system.proc.memory.availableMB":11507.02,"system.cpu":96.58,"system.proc.cpu.threads":28,"system.memory":23.51,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509752}
-++{"system.network.sent":14052060,"system.gpu.0.powerPercent":93.62,"system.network.recv":9455229,"system.disk":22.4,"system.gpu.0.powerWatts":65.53,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":62.4,"system.gpu.0.gpu":86.33,"_runtime":1190,"system.proc.memory.rssMB":2964.4,"system.proc.memory.availableMB":11520.81,"system.cpu":96.15,"system.proc.cpu.threads":27.67,"system.memory":23.41,"system.proc.memory.percent":19.71,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509783}
-++{"system.network.sent":14116134,"system.gpu.0.powerPercent":97.24,"system.network.recv":9471018,"system.disk":22.4,"system.gpu.0.powerWatts":68.07,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.13,"_runtime":1220,"system.proc.memory.rssMB":2959.24,"system.proc.memory.availableMB":11527.75,"system.cpu":99.85,"system.proc.cpu.threads":27,"system.memory":23.39,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509813}
-++{"system.network.sent":14129520,"system.gpu.0.powerPercent":102.88,"system.network.recv":9474423,"system.disk":22.4,"system.gpu.0.powerWatts":72.02,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":56.33,"system.gpu.0.gpu":86.27,"_runtime":1250,"system.proc.memory.rssMB":2958.7,"system.proc.memory.availableMB":11472.54,"system.cpu":99.87,"system.proc.cpu.threads":27,"system.memory":23.75,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509843}
-++{"system.network.sent":14134644,"system.gpu.0.powerPercent":87.89,"system.network.recv":9477692,"system.disk":22.4,"system.gpu.0.powerWatts":61.52,"_wandb":true,"system.gpu.0.temp":76.75,"system.gpu.0.memory":39.12,"system.gpu.0.gpu":73.5,"_runtime":1267,"system.proc.memory.rssMB":2956.05,"system.proc.memory.availableMB":11567.16,"system.cpu":86.28,"system.proc.cpu.threads":26.38,"system.memory":23.1,"system.proc.memory.percent":19.65,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509859}
-+diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-+index 6941a0a..e946e56 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-++++ b/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-+@@ -1 +1,5 @@
-+-{"gradients/classifier.bias": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.0654682070016861, -0.06339701265096664, -0.06132581830024719, -0.05925462394952774, -0.05718342587351799, -0.05511223152279854, -0.053041037172079086, -0.050969842821359634, -0.048898644745349884, -0.04682745039463043, -0.04475625604391098, -0.04268506169319153, -0.040613867342472076, -0.038542672991752625, -0.03647147864103317, -0.03440028056502342, -0.03232908621430397, -0.03025789186358452, -0.028186697512865067, -0.026115499436855316, -0.024044305086135864, -0.021973110735416412, -0.01990191638469696, -0.01783072203397751, -0.015759527683258057, -0.013688329607248306, -0.011617135256528854, -0.009545940905809402, -0.0074747465550899506, -0.005403552204370499, -0.0033323541283607483, -0.0012611597776412964, 0.0008100345730781555, 0.0028812289237976074, 0.004952423274517059, 0.007023617625236511, 0.009094811975955963, 0.011166006326675415, 0.013237208127975464, 0.015308402478694916, 0.017379596829414368, 0.01945079118013382, 0.02152198553085327, 0.023593179881572723, 0.025664374232292175, 0.027735568583011627, 0.02980676293373108, 0.03187795728445053, 0.03394915163516998, 0.03602035343647003, 0.038091547787189484, 0.040162742137908936, 0.04223393648862839, 0.04430513083934784, 0.04637632519006729, 0.04844751954078674, 0.050518713891506195, 0.05258990824222565, 0.0546611025929451, 0.05673230439424515, 0.0588034987449646, 0.060874685645103455, 0.0629458874464035, 0.06501707434654236, 0.06708827614784241]}, "gradients/classifier.weight": {"_type": "histogram", "values": [1.0, 1.0, 1.0, 0.0, 3.0, 1.0, 5.0, 2.0, 4.0, 10.0, 9.0, 17.0, 15.0, 21.0, 30.0, 49.0, 53.0, 61.0, 86.0, 96.0, 118.0, 155.0, 170.0, 210.0, 214.0, 249.0, 229.0, 254.0, 272.0, 299.0, 314.0, 295.0, 344.0, 291.0, 277.0, 262.0, 259.0, 239.0, 186.0, 184.0, 169.0, 136.0, 111.0, 97.0, 83.0, 60.0, 47.0, 38.0, 19.0, 23.0, 20.0, 13.0, 17.0, 7.0, 8.0, 4.0, 1.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.09012244641780853, -0.08724749088287354, -0.08437253534793854, -0.08149757981300354, -0.07862262427806854, -0.07574766874313354, -0.07287271320819855, -0.06999775767326355, -0.06712280213832855, -0.06424784660339355, -0.06137289106845856, -0.05849793553352356, -0.05562297999858856, -0.052748024463653564, -0.04987306892871857, -0.04699811339378357, -0.04412315785884857, -0.041248202323913574, -0.03837324678897858, -0.03549829125404358, -0.03262333571910858, -0.029748380184173584, -0.026873424649238586, -0.02399846911430359, -0.02112351357936859, -0.018248558044433594, -0.015373602509498596, -0.012498646974563599, -0.009623691439628601, -0.0067487359046936035, -0.003873780369758606, -0.0009988248348236084, 0.0018761307001113892, 0.004751086235046387, 0.007626041769981384, 0.010500997304916382, 0.01337595283985138, 0.016250908374786377, 0.019125863909721375, 0.022000819444656372, 0.02487577497959137, 0.027750730514526367, 0.030625686049461365, 0.03350064158439636, 0.03637559711933136, 0.03925055265426636, 0.042125508189201355, 0.04500046372413635, 0.04787541925907135, 0.05075037479400635, 0.053625330328941345, 0.05650028586387634, 0.05937524139881134, 0.06225019693374634, 0.06512515246868134, 0.06800010800361633, 0.07087506353855133, 0.07375001907348633, 0.07662497460842133, 0.07949993014335632, 0.08237488567829132, 0.08524984121322632, 0.08812479674816132, 0.09099975228309631, 0.09387470781803131]}, "val_acc": 0.23687943262411348, "train_acc": 0.25812953441384673, "_runtime": 814.0969541072845, "_timestamp": 1579509224.6157851, "_step": 0}
-++{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.0654682070016861,-0.06339701265096664,-0.06132581830024719,-0.05925462394952774,-0.05718342587351799,-0.05511223152279854,-0.053041037172079086,-0.050969842821359634,-0.048898644745349884,-0.04682745039463043,-0.04475625604391098,-0.04268506169319153,-0.040613867342472076,-0.038542672991752625,-0.03647147864103317,-0.03440028056502342,-0.03232908621430397,-0.03025789186358452,-0.028186697512865067,-0.026115499436855316,-0.024044305086135864,-0.021973110735416412,-0.01990191638469696,-0.01783072203397751,-0.015759527683258057,-0.013688329607248306,-0.011617135256528854,-0.009545940905809402,-0.0074747465550899506,-0.005403552204370499,-0.0033323541283607483,-0.0012611597776412964,0.0008100345730781555,0.0028812289237976074,0.004952423274517059,0.007023617625236511,0.009094811975955963,0.011166006326675415,0.013237208127975464,0.015308402478694916,0.017379596829414368,0.01945079118013382,0.02152198553085327,0.023593179881572723,0.025664374232292175,0.027735568583011627,0.02980676293373108,0.03187795728445053,0.03394915163516998,0.03602035343647003,0.038091547787189484,0.040162742137908936,0.04223393648862839,0.04430513083934784,0.04637632519006729,0.04844751954078674,0.050518713891506195,0.05258990824222565,0.0546611025929451,0.05673230439424515,0.0588034987449646,0.060874685645103455,0.0629458874464035,0.06501707434654236,0.06708827614784241]},"gradients/classifier.weight":{"bins":[-0.09012244641780853,-0.08724749088287354,-0.08437253534793854,-0.08149757981300354,-0.07862262427806854,-0.07574766874313354,-0.07287271320819855,-0.06999775767326355,-0.06712280213832855,-0.06424784660339355,-0.06137289106845856,-0.05849793553352356,-0.05562297999858856,-0.052748024463653564,-0.04987306892871857,-0.04699811339378357,-0.04412315785884857,-0.041248202323913574,-0.03837324678897858,-0.03549829125404358,-0.03262333571910858,-0.029748380184173584,-0.026873424649238586,-0.02399846911430359,-0.02112351357936859,-0.018248558044433594,-0.015373602509498596,-0.012498646974563599,-0.009623691439628601,-0.0067487359046936035,-0.003873780369758606,-0.0009988248348236084,0.0018761307001113892,0.004751086235046387,0.007626041769981384,0.010500997304916382,0.01337595283985138,0.016250908374786377,0.019125863909721375,0.022000819444656372,0.02487577497959137,0.027750730514526367,0.030625686049461365,0.03350064158439636,0.03637559711933136,0.03925055265426636,0.042125508189201355,0.04500046372413635,0.04787541925907135,0.05075037479400635,0.053625330328941345,0.05650028586387634,0.05937524139881134,0.06225019693374634,0.06512515246868134,0.06800010800361633,0.07087506353855133,0.07375001907348633,0.07662497460842133,0.07949993014335632,0.08237488567829132,0.08524984121322632,0.08812479674816132,0.09099975228309631,0.09387470781803131],"_type":"histogram","values":[1,1,1,0,3,1,5,2,4,10,9,17,15,21,30,49,53,61,86,96,118,155,170,210,214,249,229,254,272,299,314,295,344,291,277,262,259,239,186,184,169,136,111,97,83,60,47,38,19,23,20,13,17,7,8,4,1,2,2,0,0,0,0,1]},"_step":0,"val_acc":0.23687943262411348,"train_acc":0.25812953441384673,"_runtime":814.0969541072845,"_timestamp":1.5795092246157851e+09}
-++{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1],"bins":[-0.07717597484588623,-0.07544030994176865,-0.07370464503765106,-0.07196898013353348,-0.0702333152294159,-0.06849765032529831,-0.06676198542118073,-0.06502632051706314,-0.06329065561294556,-0.06155499070882797,-0.05981932580471039,-0.058083660900592804,-0.05634799599647522,-0.054612331092357635,-0.05287666618824005,-0.05114100128412247,-0.04940533638000488,-0.0476696714758873,-0.045934006571769714,-0.04419834539294243,-0.042462680488824844,-0.04072701558470726,-0.038991350680589676,-0.03725568577647209,-0.03552002087235451,-0.03378435596823692,-0.03204869106411934,-0.030313026160001755,-0.02857736125588417,-0.026841696351766586,-0.025106031447649002,-0.023370366543531418,-0.021634701639413834,-0.01989903673529625,-0.018163371831178665,-0.01642770692706108,-0.014692042022943497,-0.012956380844116211,-0.011220715939998627,-0.009485051035881042,-0.007749386131763458,-0.006013721227645874,-0.00427805632352829,-0.0025423914194107056,-0.0008067265152931213,0.0009289383888244629,0.002664603292942047,0.004400268197059631,0.006135933101177216,0.0078715980052948,0.009607262909412384,0.011342927813529968,0.013078592717647552,0.014814257621765137,0.01654992252588272,0.018285587430000305,0.02002125233411789,0.021756917238235474,0.023492582142353058,0.025228247046470642,0.026963911950588226,0.02869957685470581,0.030435241758823395,0.03217090666294098,0.03390657156705856]},"gradients/classifier.weight":{"_type":"histogram","values":[1,0,1,0,1,1,3,1,1,2,4,9,11,17,27,29,40,36,67,86,99,128,150,186,242,222,248,298,311,327,349,317,357,337,321,308,284,232,208,178,153,140,97,76,67,43,32,35,19,16,10,6,2,2,3,3,0,0,0,0,0,0,0,1],"bins":[-0.10413810610771179,-0.10082836449146271,-0.09751862287521362,-0.09420888125896454,-0.09089913964271545,-0.08758939802646637,-0.08427965641021729,-0.0809699147939682,-0.07766017317771912,-0.07435043156147003,-0.07104068994522095,-0.06773094832897186,-0.06442121416330338,-0.06111147254705429,-0.057801730930805206,-0.05449198931455612,-0.05118224769830704,-0.04787250608205795,-0.04456276446580887,-0.041253022849559784,-0.0379432812333107,-0.034633539617061615,-0.03132379800081253,-0.028014056384563446,-0.02470432221889496,-0.021394580602645874,-0.01808483898639679,-0.014775097370147705,-0.01146535575389862,-0.008155614137649536,-0.004845872521400452,-0.0015361309051513672,0.0017736107110977173,0.005083352327346802,0.008393093943595886,0.01170283555984497,0.015012577176094055,0.01832231879234314,0.021632060408592224,0.02494180202484131,0.028251543641090393,0.03156128525733948,0.03487102687358856,0.038180768489837646,0.04149051010608673,0.044800251722335815,0.0481099933385849,0.051419734954833984,0.054729461669921875,0.05803920328617096,0.061348944902420044,0.06465868651866913,0.06796842813491821,0.0712781697511673,0.07458791136741638,0.07789765298366547,0.08120739459991455,0.08451713621616364,0.08782687783241272,0.0911366194486618,0.09444636106491089,0.09775610268115997,0.10106584429740906,0.10437558591365814,0.10768532752990723]},"_step":1,"val_acc":0.25011820330969264,"train_acc":0.258383926343752,"_runtime":974.3342196941376,"_timestamp":1.5795093848530507e+09}
-++{"gradients/classifier.bias":{"values":[1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.006489427760243416,-0.006147412117570639,-0.005805396940559149,-0.005463381297886372,-0.0051213656552135944,-0.004779350012540817,-0.004437334835529327,-0.00409531919285655,-0.0037533037830144167,-0.003411288373172283,-0.003069272730499506,-0.0027272573206573725,-0.002385241910815239,-0.0020432262681424618,-0.0017012106254696846,-0.0013591954484581947,-0.0010171798057854176,-0.0006751641631126404,-0.0003331489861011505,8.866656571626663e-06,0.00035088229924440384,0.0006928974762558937,0.0010349131189286709,0.001376928761601448,0.001718943938612938,0.0020609600469470024,0.0024029752239584923,0.002744990400969982,0.0030870065093040466,0.0034290216863155365,0.0037710368633270264,0.004113052971661091,0.004455068148672581,0.004797083325684071,0.005139099434018135,0.005481114611029625,0.005823129788041115,0.006165145896375179,0.006507161073386669,0.006849176250398159,0.0071911923587322235,0.007533207535743713,0.007875222712755203,0.008217238821089268,0.008559253998100758,0.008901269175112247,0.009243285283446312,0.009585300460457802,0.009927315637469292,0.010269330814480782,0.01061134785413742,0.01095336303114891,0.0112953782081604,0.01163739338517189,0.01197940856218338,0.01232142373919487,0.012663440778851509,0.013005455955862999,0.013347471132874489,0.013689486309885979,0.014031501486897469,0.014373516663908958,0.014715533703565598,0.015057548880577087,0.015399564057588577],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.07622425258159637,-0.07385586947202682,-0.07148748636245728,-0.06911909580230713,-0.06675071269273758,-0.06438232958316803,-0.06201394647359848,-0.05964556336402893,-0.05727717652916908,-0.054908789694309235,-0.052540406584739685,-0.050172023475170135,-0.047803640365600586,-0.04543525353074074,-0.04306687042117119,-0.04069848358631134,-0.03833010047674179,-0.03596171736717224,-0.03359333053231239,-0.031224947422742844,-0.028856560587882996,-0.026488177478313446,-0.024119794368743896,-0.02175140753388405,-0.0193830244243145,-0.01701464131474495,-0.014646254479885101,-0.012277871370315552,-0.009909488260746002,-0.007541105151176453,-0.005172714591026306,-0.0028043314814567566,-0.00043594837188720703,0.0019324347376823425,0.004300817847251892,0.006669208407402039,0.009037591516971588,0.011405974626541138,0.013774357736110687,0.016142740845680237,0.018511131405830383,0.020879514515399933,0.023247897624969482,0.025616280734539032,0.02798466384410858,0.03035304695367813,0.03272143751382828,0.03508982062339783,0.03745820373296738,0.039826586842536926,0.042194969952106476,0.04456336051225662,0.04693174362182617,0.049300119280815125,0.05166850984096527,0.05403690040111542,0.05640527606010437,0.05877366662025452,0.06114204227924347,0.06351043283939362,0.06587882339954376,0.06824719905853271,0.07061558961868286,0.07298396527767181,0.07535235583782196],"_type":"histogram","values":[1,2,2,4,0,3,3,1,11,7,15,14,23,25,27,43,59,66,75,106,101,128,148,168,174,206,231,240,275,266,300,299,271,298,285,266,270,214,209,214,192,142,152,94,103,94,63,48,43,36,29,22,19,17,12,8,5,3,1,6,3,1,0,1]},"_step":2,"val_acc":0.24964539007092199,"train_acc":0.2603407873430231,"_runtime":1133.4028816223145,"_timestamp":1.5795095439217126e+09}
-++{"gradients/classifier.bias":{"values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.06606416404247284,-0.06390783190727234,-0.06175149977207184,-0.05959516763687134,-0.05743883550167084,-0.05528250336647034,-0.053126171231269836,-0.050969839096069336,-0.048813506960868835,-0.046657174825668335,-0.044500842690467834,-0.042344510555267334,-0.040188178420066833,-0.03803184628486633,-0.03587551414966583,-0.03371918201446533,-0.03156284987926483,-0.02940651774406433,-0.02725018560886383,-0.02509385347366333,-0.02293752133846283,-0.02078118920326233,-0.01862485706806183,-0.016468524932861328,-0.014312192797660828,-0.012155860662460327,-0.009999528527259827,-0.007843196392059326,-0.005686864256858826,-0.003530532121658325,-0.0013741999864578247,0.0007821321487426758,0.0029384642839431763,0.005094796419143677,0.007251128554344177,0.009407460689544678,0.011563792824745178,0.013720124959945679,0.01587645709514618,0.01803278923034668,0.02018912136554718,0.02234545350074768,0.02450178563594818,0.02665811777114868,0.028814449906349182,0.030970782041549683,0.03312711417675018,0.035283446311950684,0.037439778447151184,0.039596110582351685,0.041752442717552185,0.043908774852752686,0.046065106987953186,0.048221439123153687,0.05037777125835419,0.05253410339355469,0.05469043552875519,0.05684676766395569,0.05900309979915619,0.06115943193435669,0.06331576406955719,0.06547209620475769,0.06762842833995819,0.06978476047515869,0.07194109261035919],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.09906706213951111,-0.09581608325242996,-0.09256510436534882,-0.08931412547826767,-0.08606314659118652,-0.08281217515468597,-0.07956118881702423,-0.07631021738052368,-0.07305923849344254,-0.06980825960636139,-0.06655728071928024,-0.0633063018321991,-0.06005532294511795,-0.056804344058036804,-0.053553368896245956,-0.05030239000916481,-0.047051411122083664,-0.04380043223500252,-0.04054945334792137,-0.037298478186130524,-0.03404749929904938,-0.03079652041196823,-0.027545541524887085,-0.02429456263780594,-0.021043583750724792,-0.017792604863643646,-0.0145416259765625,-0.01129065454006195,-0.008039675652980804,-0.004788696765899658,-0.001537717878818512,0.0017132610082626343,0.0049642398953437805,0.008215218782424927,0.011466197669506073,0.01471717655658722,0.017968155443668365,0.02121913433074951,0.02447010576725006,0.027721092104911804,0.030972063541412354,0.0342230498790741,0.037474021315574646,0.040724992752075195,0.04397597908973694,0.04722695052623749,0.05047793686389923,0.05372890830039978,0.05697989463806152,0.06023086607456207,0.06348185241222382,0.06673282384872437,0.06998381018638611,0.07323478162288666,0.07648575305938721,0.07973673939704895,0.0829877108335495,0.08623869717121124,0.08948966860771179,0.09274065494537354,0.09599162638187408,0.09924261271953583,0.10249358415603638,0.10574457049369812,0.10899554193019867],"_type":"histogram","values":[1,0,0,0,2,2,0,4,3,6,10,11,14,22,31,43,53,58,86,101,112,160,183,225,221,275,317,314,310,329,323,356,343,312,332,263,237,192,175,162,123,83,77,78,50,43,29,27,12,11,6,5,4,3,0,0,1,0,0,1,1,0,1,1]},"_step":3,"val_acc":0.26222222222222225,"train_acc":0.2627868635921119,"_runtime":1291.7072627544403,"_timestamp":1.5795097022260938e+09}
-++{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.037257447838783264,-0.035971060395240784,-0.034684669226408005,-0.033398281782865524,-0.032111890614032745,-0.030825503170490265,-0.029539113864302635,-0.028252724558115005,-0.026966335251927376,-0.025679945945739746,-0.024393556639552116,-0.023107167333364487,-0.021820779889822006,-0.020534390583634377,-0.019248001277446747,-0.017961611971259117,-0.016675222665071487,-0.015388833358883858,-0.014102444052696228,-0.012816054746508598,-0.011529665440320969,-0.010243277996778488,-0.008956888690590858,-0.007670499384403229,-0.006384110078215599,-0.005097720772027969,-0.003811333328485489,-0.00252494215965271,-0.0012385547161102295,4.783645272254944e-05,0.00133422389626503,0.002620615065097809,0.003907002508640289,0.00519338995218277,0.006479781121015549,0.007766168564558029,0.009052559733390808,0.010338947176933289,0.011625338345766068,0.012911725789308548,0.014198116958141327,0.015484504401683807,0.016770891845226288,0.018057283014059067,0.019343670457601547,0.020630061626434326,0.021916449069976807,0.023202840238809586,0.024489227682352066,0.025775618851184845,0.027062006294727325,0.028348393738269806,0.029634781181812286,0.030921176075935364,0.032207563519477844,0.033493950963020325,0.034780338406562805,0.036066725850105286,0.03735312074422836,0.038639508187770844,0.039925895631313324,0.041212283074855804,0.04249867796897888,0.04378506541252136,0.04507145285606384]},"gradients/classifier.weight":{"bins":[-0.0888357013463974,-0.08612215518951416,-0.08340860903263092,-0.08069506287574768,-0.07798151671886444,-0.0752679631114006,-0.07255441695451736,-0.06984087079763412,-0.06712732464075089,-0.06441377848386765,-0.061700232326984406,-0.05898668244481087,-0.05627313628792763,-0.05355959013104439,-0.05084604024887085,-0.04813249409198761,-0.04541894793510437,-0.04270540177822113,-0.03999185562133789,-0.03727830573916435,-0.03456475958228111,-0.03185121342539787,-0.029137663543224335,-0.026424117386341095,-0.023710571229457855,-0.020997025072574615,-0.018283478915691376,-0.015569932758808136,-0.0128563791513443,-0.01014283299446106,-0.00742928683757782,-0.00471574068069458,-0.0020021945238113403,0.0007113516330718994,0.003424897789955139,0.006138443946838379,0.008851990103721619,0.011565543711185455,0.014279089868068695,0.016992636024951935,0.019706182181835175,0.022419728338718414,0.025133274495601654,0.027846820652484894,0.03056037425994873,0.03327392041683197,0.03598746657371521,0.03870101273059845,0.04141455888748169,0.04412810504436493,0.04684165120124817,0.04955519735813141,0.05226874351501465,0.05498228967189789,0.05769583582878113,0.06040938198566437,0.0631229430437088,0.06583648920059204,0.06855003535747528,0.07126358151435852,0.07397712767124176,0.076690673828125,0.07940421998500824,0.08211776614189148,0.08483131229877472],"_type":"histogram","values":[1,0,0,0,2,0,1,0,10,6,9,13,11,18,18,29,47,58,58,70,96,103,104,181,183,180,232,264,280,262,304,320,289,307,281,323,255,289,218,224,185,155,132,132,118,76,65,59,48,22,30,26,17,9,5,3,4,2,3,3,1,2,0,1]},"_step":4,"val_acc":0.262789598108747,"train_acc":0.2653650279586515,"_runtime":1448.6882483959198,"_timestamp":1.5795098592070794e+09}
-+diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json b/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-+index 3724adb..0ce5b0d 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-++++ b/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-+@@ -3,10 +3,10 @@
-+     "program": "<python with no main file>",
-+     "git": {
-+         "remote": "https://github.com/ubamba98/droughtwatch",
-+-        "commit": "fea1daedb6b14125e1dec2c49a5e3b211d016f90"
-++        "commit": "4e7b9b38b8d5d3ec44d43373b8e263f50ead87a3"
-+     },
-+     "email": "ubamba98@gmail.com",
-+-    "startedAt": "2020-01-20T08:23:13.672686",
-++    "startedAt": "2020-01-20T08:44:21.248355",
-+     "host": "ccw-iclr",
-+     "username": "ubamba98",
-+     "executable": "/home/ubamba98/anaconda3/bin/python",
-+@@ -25,5 +25,5 @@
-+     "mode": "run",
-+     "name": "efficentnet-b3-765",
-+     "project": "droughtwatch",
-+-    "heartbeatAt": "2020-01-20T08:36:16.324952"
-++    "heartbeatAt": "2020-01-20T08:44:22.172990"
-+ }
-+diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-summary.json b/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-+index 05e4af4..27d2e55 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-++++ b/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-+@@ -1 +1 @@
-+-{"graph_0": {"_type": "graph", "format": "torch", "nodes": [{"name": "conv_stem", "id": 140438557381128, "class_name": "Conv2dSame(3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False)", "parameters": [["weight", [40, 3, 3, 3]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [1080]}, {"name": "bn1", "id": 140438557383704, "class_name": "BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [40]], ["bias", [40]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [40, 40]}, {"name": "blocks.0.0", "id": 140438557382920, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)\n  (bn1): BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [40, 1, 3, 3]], ["bn1.weight", [40]], ["bn1.bias", [40]], ["se.conv_reduce.weight", [10, 40, 1, 1]], ["se.conv_reduce.bias", [10]], ["se.conv_expand.weight", [40, 10, 1, 1]], ["se.conv_expand.bias", [40]], ["conv_pw.weight", [24, 40, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [360, 40, 40, 400, 10, 400, 40, 960, 24, 24]}, {"name": "blocks.0.1", "id": 140438680665224, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)\n  (bn1): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [24, 1, 3, 3]], ["bn1.weight", [24]], ["bn1.bias", [24]], ["se.conv_reduce.weight", [6, 24, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [24, 6, 1, 1]], ["se.conv_expand.bias", [24]], ["conv_pw.weight", [24, 24, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [216, 24, 24, 144, 6, 144, 24, 576, 24, 24]}, {"name": "blocks.1.0", "id": 140438676598736, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(144, 144, kernel_size=(3, 3), stride=(2, 2), groups=144, bias=False)\n  (bn2): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [144, 24, 1, 1]], ["bn1.weight", [144]], ["bn1.bias", [144]], ["conv_dw.weight", [144, 1, 3, 3]], ["bn2.weight", [144]], ["bn2.bias", [144]], ["se.conv_reduce.weight", [6, 144, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [144, 6, 1, 1]], ["se.conv_expand.bias", [144]], ["conv_pwl.weight", [32, 144, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 4608, 32, 32]}, {"name": "blocks.1.1", "id": 140438557424160, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.1.2", "id": 140438679559640, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.2.0", "id": 140438679470320, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(192, 192, kernel_size=(5, 5), stride=(2, 2), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 5, 5]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [48, 192, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [6144, 192, 192, 4800, 192, 192, 1536, 8, 1536, 192, 9216, 48, 48]}, {"name": "blocks.2.1", "id": 140438557424384, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.2.2", "id": 140438557422704, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.3.0", "id": 140438557421920, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(288, 288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 3, 3]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [96, 288, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [13824, 288, 288, 2592, 288, 288, 3456, 12, 3456, 288, 27648, 96, 96]}, {"name": "blocks.3.1", "id": 140438557422816, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.2", "id": 140438557824392, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.3", "id": 140438557825232, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.4", "id": 140438557825176, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.4.0", "id": 140438557824672, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 5, 5]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [136, 576, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [55296, 576, 576, 14400, 576, 576, 13824, 24, 13824, 576, 78336, 136, 136]}, {"name": "blocks.4.1", "id": 140438557823496, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.2", "id": 140438679158968, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.3", "id": 140438679496744, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.4", "id": 140438679422456, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.5.0", "id": 140438679421448, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(816, 816, kernel_size=(5, 5), stride=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [232, 816, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 189312, 232, 232]}, {"name": "blocks.5.1", "id": 140438679580400, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.2", "id": 140438679115088, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.3", "id": 140438676984832, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.4", "id": 140440670709296, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.5", "id": 140440670710192, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.6.0", "id": 140440670709464, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 3, 3]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [384, 1392, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [322944, 1392, 1392, 12528, 1392, 1392, 80736, 58, 80736, 1392, 534528, 384, 384]}, {"name": "blocks.6.1", "id": 140438679947864, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(384, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)\n  (bn2): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(2304, 96, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(96, 2304, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(2304, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [2304, 384, 1, 1]], ["bn1.weight", [2304]], ["bn1.bias", [2304]], ["conv_dw.weight", [2304, 1, 3, 3]], ["bn2.weight", [2304]], ["bn2.bias", [2304]], ["se.conv_reduce.weight", [96, 2304, 1, 1]], ["se.conv_reduce.bias", [96]], ["se.conv_expand.weight", [2304, 96, 1, 1]], ["se.conv_expand.bias", [2304]], ["conv_pwl.weight", [384, 2304, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [884736, 2304, 2304, 20736, 2304, 2304, 221184, 96, 221184, 2304, 884736, 384, 384]}, {"name": "conv_head", "id": 140438557382584, "class_name": "Conv2d(384, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)", "parameters": [["weight", [1536, 384, 1, 1]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [589824]}, {"name": "bn2", "id": 140438703610848, "class_name": "BatchNorm2d(1536, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [1536]], ["bias", [1536]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [1536, 1536]}, {"name": "global_pool", "id": 140438703610792, "class_name": "SelectAdaptivePool2d (output_size=1, pool_type=avg)", "parameters": [], "output_shape": [[256, 1536, 1, 1]], "num_parameters": []}, {"name": "classifier", "id": 140438679885696, "class_name": "Linear(in_features=1536, out_features=4, bias=True)", "parameters": [["weight", [4, 1536]], ["bias", [4]]], "output_shape": [[256, 4]], "num_parameters": [6144, 4]}], "edges": []}, "train_acc": 0.25812953441384673, "_step": 0, "gradients/classifier.weight": {"_type": "histogram", "values": [1.0, 1.0, 1.0, 0.0, 3.0, 1.0, 5.0, 2.0, 4.0, 10.0, 9.0, 17.0, 15.0, 21.0, 30.0, 49.0, 53.0, 61.0, 86.0, 96.0, 118.0, 155.0, 170.0, 210.0, 214.0, 249.0, 229.0, 254.0, 272.0, 299.0, 314.0, 295.0, 344.0, 291.0, 277.0, 262.0, 259.0, 239.0, 186.0, 184.0, 169.0, 136.0, 111.0, 97.0, 83.0, 60.0, 47.0, 38.0, 19.0, 23.0, 20.0, 13.0, 17.0, 7.0, 8.0, 4.0, 1.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.09012244641780853, -0.08724749088287354, -0.08437253534793854, -0.08149757981300354, -0.07862262427806854, -0.07574766874313354, -0.07287271320819855, -0.06999775767326355, -0.06712280213832855, -0.06424784660339355, -0.06137289106845856, -0.05849793553352356, -0.05562297999858856, -0.052748024463653564, -0.04987306892871857, -0.04699811339378357, -0.04412315785884857, -0.041248202323913574, -0.03837324678897858, -0.03549829125404358, -0.03262333571910858, -0.029748380184173584, -0.026873424649238586, -0.02399846911430359, -0.02112351357936859, -0.018248558044433594, -0.015373602509498596, -0.012498646974563599, -0.009623691439628601, -0.0067487359046936035, -0.003873780369758606, -0.0009988248348236084, 0.0018761307001113892, 0.004751086235046387, 0.007626041769981384, 0.010500997304916382, 0.01337595283985138, 0.016250908374786377, 0.019125863909721375, 0.022000819444656372, 0.02487577497959137, 0.027750730514526367, 0.030625686049461365, 0.03350064158439636, 0.03637559711933136, 0.03925055265426636, 0.042125508189201355, 0.04500046372413635, 0.04787541925907135, 0.05075037479400635, 0.053625330328941345, 0.05650028586387634, 0.05937524139881134, 0.06225019693374634, 0.06512515246868134, 0.06800010800361633, 0.07087506353855133, 0.07375001907348633, 0.07662497460842133, 0.07949993014335632, 0.08237488567829132, 0.08524984121322632, 0.08812479674816132, 0.09099975228309631, 0.09387470781803131]}, "gradients/classifier.bias": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.0654682070016861, -0.06339701265096664, -0.06132581830024719, -0.05925462394952774, -0.05718342587351799, -0.05511223152279854, -0.053041037172079086, -0.050969842821359634, -0.048898644745349884, -0.04682745039463043, -0.04475625604391098, -0.04268506169319153, -0.040613867342472076, -0.038542672991752625, -0.03647147864103317, -0.03440028056502342, -0.03232908621430397, -0.03025789186358452, -0.028186697512865067, -0.026115499436855316, -0.024044305086135864, -0.021973110735416412, -0.01990191638469696, -0.01783072203397751, -0.015759527683258057, -0.013688329607248306, -0.011617135256528854, -0.009545940905809402, -0.0074747465550899506, -0.005403552204370499, -0.0033323541283607483, -0.0012611597776412964, 0.0008100345730781555, 0.0028812289237976074, 0.004952423274517059, 0.007023617625236511, 0.009094811975955963, 0.011166006326675415, 0.013237208127975464, 0.015308402478694916, 0.017379596829414368, 0.01945079118013382, 0.02152198553085327, 0.023593179881572723, 0.025664374232292175, 0.027735568583011627, 0.02980676293373108, 0.03187795728445053, 0.03394915163516998, 0.03602035343647003, 0.038091547787189484, 0.040162742137908936, 0.04223393648862839, 0.04430513083934784, 0.04637632519006729, 0.04844751954078674, 0.050518713891506195, 0.05258990824222565, 0.0546611025929451, 0.05673230439424515, 0.0588034987449646, 0.060874685645103455, 0.0629458874464035, 0.06501707434654236, 0.06708827614784241]}, "val_acc": 0.23687943262411348, "_runtime": 814.0969541072845, "_timestamp": 1579509224.6157851}
-++{"graph_0": {"_type": "graph", "edges": [], "nodes": [{"id": 140438557381128, "name": "conv_stem", "class_name": "Conv2dSame(3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False)", "parameters": [["weight", [40, 3, 3, 3]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [1080]}, {"id": 140438557383704, "name": "bn1", "class_name": "BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [40]], ["bias", [40]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [40, 40]}, {"id": 140438557382920, "name": "blocks.0.0", "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)\n  (bn1): BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [40, 1, 3, 3]], ["bn1.weight", [40]], ["bn1.bias", [40]], ["se.conv_reduce.weight", [10, 40, 1, 1]], ["se.conv_reduce.bias", [10]], ["se.conv_expand.weight", [40, 10, 1, 1]], ["se.conv_expand.bias", [40]], ["conv_pw.weight", [24, 40, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [360, 40, 40, 400, 10, 400, 40, 960, 24, 24]}, {"id": 140438680665224, "name": "blocks.0.1", "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)\n  (bn1): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [24, 1, 3, 3]], ["bn1.weight", [24]], ["bn1.bias", [24]], ["se.conv_reduce.weight", [6, 24, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [24, 6, 1, 1]], ["se.conv_expand.bias", [24]], ["conv_pw.weight", [24, 24, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [216, 24, 24, 144, 6, 144, 24, 576, 24, 24]}, {"id": 140438676598736, "name": "blocks.1.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(144, 144, kernel_size=(3, 3), stride=(2, 2), groups=144, bias=False)\n  (bn2): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [144, 24, 1, 1]], ["bn1.weight", [144]], ["bn1.bias", [144]], ["conv_dw.weight", [144, 1, 3, 3]], ["bn2.weight", [144]], ["bn2.bias", [144]], ["se.conv_reduce.weight", [6, 144, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [144, 6, 1, 1]], ["se.conv_expand.bias", [144]], ["conv_pwl.weight", [32, 144, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 4608, 32, 32]}, {"id": 140438557424160, "name": "blocks.1.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"id": 140438679559640, "name": "blocks.1.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"id": 140438679470320, "name": "blocks.2.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(192, 192, kernel_size=(5, 5), stride=(2, 2), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 5, 5]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [48, 192, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [6144, 192, 192, 4800, 192, 192, 1536, 8, 1536, 192, 9216, 48, 48]}, {"id": 140438557424384, "name": "blocks.2.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"id": 140438557422704, "name": "blocks.2.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"id": 140438557421920, "name": "blocks.3.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(288, 288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 3, 3]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [96, 288, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [13824, 288, 288, 2592, 288, 288, 3456, 12, 3456, 288, 27648, 96, 96]}, {"id": 140438557422816, "name": "blocks.3.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557824392, "name": "blocks.3.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557825232, "name": "blocks.3.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557825176, "name": "blocks.3.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557824672, "name": "blocks.4.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 5, 5]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [136, 576, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [55296, 576, 576, 14400, 576, 576, 13824, 24, 13824, 576, 78336, 136, 136]}, {"id": 140438557823496, "name": "blocks.4.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679158968, "name": "blocks.4.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679496744, "name": "blocks.4.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679422456, "name": "blocks.4.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679421448, "name": "blocks.5.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(816, 816, kernel_size=(5, 5), stride=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [232, 816, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 189312, 232, 232]}, {"id": 140438679580400, "name": "blocks.5.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140438679115088, "name": "blocks.5.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140438676984832, "name": "blocks.5.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140440670709296, "name": "blocks.5.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140440670710192, "name": "blocks.5.5", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140440670709464, "name": "blocks.6.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 3, 3]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [384, 1392, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [322944, 1392, 1392, 12528, 1392, 1392, 80736, 58, 80736, 1392, 534528, 384, 384]}, {"id": 140438679947864, "name": "blocks.6.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(384, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)\n  (bn2): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(2304, 96, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(96, 2304, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(2304, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [2304, 384, 1, 1]], ["bn1.weight", [2304]], ["bn1.bias", [2304]], ["conv_dw.weight", [2304, 1, 3, 3]], ["bn2.weight", [2304]], ["bn2.bias", [2304]], ["se.conv_reduce.weight", [96, 2304, 1, 1]], ["se.conv_reduce.bias", [96]], ["se.conv_expand.weight", [2304, 96, 1, 1]], ["se.conv_expand.bias", [2304]], ["conv_pwl.weight", [384, 2304, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [884736, 2304, 2304, 20736, 2304, 2304, 221184, 96, 221184, 2304, 884736, 384, 384]}, {"id": 140438557382584, "name": "conv_head", "class_name": "Conv2d(384, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)", "parameters": [["weight", [1536, 384, 1, 1]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [589824]}, {"id": 140438703610848, "name": "bn2", "class_name": "BatchNorm2d(1536, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [1536]], ["bias", [1536]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [1536, 1536]}, {"id": 140438703610792, "name": "global_pool", "class_name": "SelectAdaptivePool2d (output_size=1, pool_type=avg)", "parameters": [], "output_shape": [[256, 1536, 1, 1]], "num_parameters": []}, {"id": 140438679885696, "name": "classifier", "class_name": "Linear(in_features=1536, out_features=4, bias=True)", "parameters": [["weight", [4, 1536]], ["bias", [4]]], "output_shape": [[256, 4]], "num_parameters": [6144, 4]}], "format": "torch"}, "train_acc": 0.2653650279586515, "_step": 4, "gradients/classifier.weight": {"bins": [-0.0888357013463974, -0.08612215518951416, -0.08340860903263092, -0.08069506287574768, -0.07798151671886444, -0.0752679631114006, -0.07255441695451736, -0.06984087079763412, -0.06712732464075089, -0.06441377848386765, -0.061700232326984406, -0.05898668244481087, -0.05627313628792763, -0.05355959013104439, -0.05084604024887085, -0.04813249409198761, -0.04541894793510437, -0.04270540177822113, -0.03999185562133789, -0.03727830573916435, -0.03456475958228111, -0.03185121342539787, -0.029137663543224335, -0.026424117386341095, -0.023710571229457855, -0.020997025072574615, -0.018283478915691376, -0.015569932758808136, -0.0128563791513443, -0.01014283299446106, -0.00742928683757782, -0.00471574068069458, -0.0020021945238113403, 0.0007113516330718994, 0.003424897789955139, 0.006138443946838379, 0.008851990103721619, 0.011565543711185455, 0.014279089868068697, 0.016992636024951935, 0.019706182181835175, 0.022419728338718414, 0.025133274495601658, 0.027846820652484897, 0.03056037425994873, 0.03327392041683197, 0.03598746657371521, 0.03870101273059845, 0.04141455888748169, 0.04412810504436493, 0.04684165120124817, 0.04955519735813141, 0.05226874351501465, 0.05498228967189789, 0.05769583582878113, 0.06040938198566437, 0.0631229430437088, 0.06583648920059204, 0.06855003535747528, 0.07126358151435852, 0.07397712767124176, 0.076690673828125, 0.07940421998500824, 0.08211776614189148, 0.08483131229877472], "_type": "histogram", "values": [1, 0, 0, 0, 2, 0, 1, 0, 10, 6, 9, 13, 11, 18, 18, 29, 47, 58, 58, 70, 96, 103, 104, 181, 183, 180, 232, 264, 280, 262, 304, 320, 289, 307, 281, 323, 255, 289, 218, 224, 185, 155, 132, 132, 118, 76, 65, 59, 48, 22, 30, 26, 17, 9, 5, 3, 4, 2, 3, 3, 1, 2, 0, 1]}, "gradients/classifier.bias": {"bins": [-0.037257447838783264, -0.035971060395240784, -0.034684669226408005, -0.033398281782865524, -0.032111890614032745, -0.030825503170490265, -0.029539113864302635, -0.028252724558115005, -0.026966335251927376, -0.025679945945739743, -0.024393556639552116, -0.023107167333364487, -0.02182077988982201, -0.020534390583634377, -0.019248001277446747, -0.017961611971259117, -0.016675222665071487, -0.015388833358883858, -0.014102444052696228, -0.012816054746508598, -0.011529665440320969, -0.010243277996778488, -0.008956888690590858, -0.007670499384403229, -0.006384110078215599, -0.005097720772027969, -0.003811333328485489, -0.00252494215965271, -0.0012385547161102295, 4.783645272254944e-05, 0.00133422389626503, 0.002620615065097809, 0.003907002508640289, 0.00519338995218277, 0.006479781121015549, 0.007766168564558029, 0.009052559733390808, 0.010338947176933289, 0.011625338345766068, 0.012911725789308548, 0.014198116958141329, 0.015484504401683807, 0.016770891845226288, 0.018057283014059067, 0.019343670457601547, 0.02063006162643433, 0.021916449069976807, 0.023202840238809586, 0.024489227682352063, 0.025775618851184845, 0.027062006294727325, 0.02834839373826981, 0.029634781181812286, 0.030921176075935364, 0.032207563519477844, 0.033493950963020325, 0.034780338406562805, 0.036066725850105286, 0.03735312074422836, 0.03863950818777085, 0.03992589563131333, 0.04121228307485581, 0.04249867796897888, 0.04378506541252136, 0.04507145285606384], "_type": "histogram", "values": [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]}, "val_acc": 0.262789598108747, "_runtime": 1448.6882483959198, "_timestamp": 1579509859.2070794}
-diff --git a/wandb/run-20200120_081855-gzutdaae/requirements.txt b/wandb/run-20200120_081855-gzutdaae/requirements.txt
-new file mode 100644
-index 0000000..2143393
---- /dev/null
-+++ b/wandb/run-20200120_081855-gzutdaae/requirements.txt
-@@ -0,0 +1,267 @@
-+absl-py==0.9.0
-+alabaster==0.7.12
-+albumentations==0.4.3
-+anaconda-client==1.7.2
-+anaconda-navigator==1.9.7
-+anaconda-project==0.8.3
-+argh==0.26.2
-+asn1crypto==1.3.0
-+astroid==2.3.3
-+astropy==4.0
-+atomicwrites==1.3.0
-+attrs==19.3.0
-+autopep8==1.4.4
-+babel==2.8.0
-+backcall==0.1.0
-+backports.os==0.1.1
-+backports.shutil-get-terminal-size==1.0.0
-+beautifulsoup4==4.8.2
-+bitarray==1.2.0
-+bkcharts==0.2
-+bleach==3.1.0
-+bokeh==1.4.0
-+boto==2.49.0
-+bottleneck==1.3.1
-+cachetools==4.0.0
-+catalyst==20.1
-+certifi==2019.11.28
-+cffi==1.13.2
-+chardet==3.0.4
-+click==7.0
-+cloudpickle==1.2.2
-+clyent==1.2.2
-+colorama==0.4.3
-+conda-build==3.17.8
-+conda-package-handling==1.6.0
-+conda-verify==3.1.1
-+conda==4.8.1
-+configparser==4.0.2
-+contextlib2==0.6.0.post1
-+crc32c==2.0
-+cryptography==2.8
-+cycler==0.10.0
-+cython==0.29.14
-+cytoolz==0.10.1
-+dask==2.9.1
-+decorator==4.4.1
-+defusedxml==0.6.0
-+diff-match-patch==20181111
-+distributed==2.9.1
-+docker-pycreds==0.4.0
-+docutils==0.15.2
-+entrypoints==0.3
-+et-xmlfile==1.0.1
-+fastcache==1.1.0
-+filelock==3.0.12
-+flake8==3.7.9
-+flask==1.1.1
-+fsspec==0.6.2
-+future==0.18.2
-+gevent==1.4.0
-+gitdb2==2.0.6
-+gitpython==3.0.5
-+glob2==0.7
-+gmpy2==2.0.8
-+google-auth-oauthlib==0.4.1
-+google-auth==1.10.1
-+gql==0.2.0
-+graphql-core==1.1
-+greenlet==0.4.15
-+grpcio==1.26.0
-+h5py==2.9.0
-+heapdict==1.0.1
-+html5lib==1.0.1
-+hypothesis==4.54.2
-+idna==2.8
-+imageio==2.6.1
-+imagesize==1.2.0
-+imgaug==0.2.6
-+importlib-metadata==1.3.0
-+intervaltree==3.0.2
-+ipykernel==5.1.3
-+ipython-genutils==0.2.0
-+ipython==7.11.1
-+ipywidgets==7.5.1
-+isort==4.3.21
-+itsdangerous==1.1.0
-+jdcal==1.4.1
-+jedi==0.14.1
-+jeepney==0.4.2
-+jinja2==2.10.3
-+joblib==0.14.1
-+json5==0.8.5
-+jsonschema==3.2.0
-+jupyter-client==5.3.4
-+jupyter-console==6.0.0
-+jupyter-core==4.6.1
-+jupyter==1.0.0
-+jupyterlab-server==1.0.6
-+jupyterlab==1.2.4
-+keyring==20.0.0
-+kiwisolver==1.1.0
-+lazy-object-proxy==1.4.3
-+libarchive-c==2.8
-+lief==0.9.0
-+llvmlite==0.31.0
-+locket==0.2.0
-+lxml==4.4.2
-+markdown==3.1.1
-+markupsafe==1.1.1
-+matplotlib==3.1.1
-+mccabe==0.6.1
-+mistune==0.8.4
-+mkl-fft==1.0.15
-+mkl-random==1.1.0
-+mkl-service==2.3.0
-+mock==3.0.5
-+more-itertools==8.0.2
-+mpmath==1.1.0
-+msgpack==0.6.1
-+multipledispatch==0.6.0
-+navigator-updater==0.2.1
-+nbconvert==5.6.1
-+nbformat==4.4.0
-+networkx==2.4
-+nltk==3.4.5
-+nose==1.3.7
-+notebook==6.0.2
-+numba==0.47.0
-+numexpr==2.7.0
-+numpy==1.18.1
-+numpydoc==0.9.2
-+nvidia-ml-py3==7.352.0
-+oauthlib==3.1.0
-+olefile==0.46
-+opencv-python-headless==4.1.2.30
-+opencv-python==4.1.2.30
-+openpyxl==3.0.2
-+packaging==20.0
-+pandas==0.25.3
-+pandocfilters==1.4.2
-+parso==0.5.2
-+partd==1.1.0
-+path==13.1.0
-+pathlib2==2.3.5
-+pathtools==0.1.2
-+patsy==0.5.1
-+pep8==1.7.1
-+pexpect==4.7.0
-+pickleshare==0.7.5
-+pillow==6.2.1
-+pip==19.3.1
-+pkginfo==1.5.0.1
-+plotly==4.4.1
-+pluggy==0.13.1
-+ply==3.11
-+prometheus-client==0.7.1
-+promise==2.3
-+prompt-toolkit==2.0.10
-+protobuf==3.11.2
-+psutil==5.6.7
-+ptyprocess==0.6.0
-+py==1.8.1
-+pyasn1-modules==0.2.8
-+pyasn1==0.4.8
-+pycodestyle==2.5.0
-+pycosat==0.6.3
-+pycparser==2.19
-+pycrypto==2.6.1
-+pycurl==7.43.0.3
-+pydocstyle==4.0.1
-+pyflakes==2.1.1
-+pygments==2.5.2
-+pylint==2.4.4
-+pyodbc==4.0.27
-+pyopenssl==19.1.0
-+pyparsing==2.4.6
-+pyrsistent==0.15.6
-+pysocks==1.7.1
-+pytest-arraydiff==0.3
-+pytest-astropy-header==0.1.1
-+pytest-astropy==0.7.0
-+pytest-doctestplus==0.5.0
-+pytest-openfiles==0.4.0
-+pytest-remotedata==0.3.2
-+pytest==5.3.2
-+python-dateutil==2.8.1
-+python-jsonrpc-server==0.3.2
-+python-language-server==0.31.2
-+pytz==2019.3
-+pywavelets==1.1.1
-+pyxdg==0.26
-+pyyaml==5.2
-+pyzmq==18.1.0
-+qdarkstyle==2.7
-+qtawesome==0.6.0
-+qtconsole==4.6.0
-+qtpy==1.9.0
-+requests-oauthlib==1.3.0
-+requests==2.22.0
-+retrying==1.3.3
-+rope==0.14.0
-+rsa==4.0
-+rtree==0.8.3
-+ruamel-yaml==0.15.87
-+safitty==1.3
-+scikit-image==0.15.0
-+scikit-learn==0.22.1
-+scipy==1.3.2
-+seaborn==0.9.0
-+secretstorage==3.1.1
-+send2trash==1.5.0
-+sentry-sdk==0.14.0
-+setuptools==45.0.0
-+shortuuid==0.5.0
-+simplegeneric==0.8.1
-+singledispatch==3.4.0.3
-+six==1.13.0
-+smmap2==2.0.5
-+snowballstemmer==2.0.0
-+sortedcollections==1.1.2
-+sortedcontainers==2.1.0
-+soupsieve==1.9.5
-+sphinx==2.3.1
-+sphinxcontrib-applehelp==1.0.1
-+sphinxcontrib-devhelp==1.0.1
-+sphinxcontrib-htmlhelp==1.0.2
-+sphinxcontrib-jsmath==1.0.1
-+sphinxcontrib-qthelp==1.0.2
-+sphinxcontrib-serializinghtml==1.1.3
-+sphinxcontrib-websupport==1.1.2
-+spyder-kernels==1.8.1
-+spyder==4.0.1
-+sqlalchemy==1.3.12
-+statsmodels==0.10.1
-+subprocess32==3.5.4
-+sympy==1.5.1
-+tables==3.6.1
-+tblib==1.6.0
-+tensorboard==2.1.0
-+tensorboardx==2.0
-+terminado==0.8.3
-+testpath==0.4.4
-+timm==0.1.14
-+toolz==0.10.0
-+torch==1.2.0
-+torchvision==0.4.0a0
-+tornado==6.0.3
-+tqdm==4.41.1
-+traitlets==4.3.3
-+ujson==1.35
-+unicodecsv==0.14.1
-+urllib3==1.25.7
-+wandb==0.8.21
-+watchdog==0.9.0
-+wcwidth==0.1.7
-+webencodings==0.5.1
-+werkzeug==0.16.0
-+wheel==0.33.6
-+widgetsnbextension==3.5.1
-+wrapt==1.11.2
-+wurlitzer==2.0.0
-+xlrd==1.2.0
-+xlsxwriter==1.2.7
-+xlwt==1.3.0
-+yapf==0.28.0
-+zict==1.0.0
-+zipp==0.6.0
-\ No newline at end of file
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-new file mode 100644
-index 0000000..fbd17e8
---- /dev/null
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-@@ -0,0 +1,10 @@
-+{"system.network.sent":10977141,"system.gpu.0.powerPercent":96.79,"system.network.recv":7409894,"system.disk":22.4,"system.gpu.0.powerWatts":67.75,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":65.33,"system.gpu.0.gpu":85.6,"_runtime":1008,"system.proc.memory.rssMB":2966.29,"system.proc.memory.availableMB":11506.94,"system.cpu":98.25,"system.proc.cpu.threads":28,"system.memory":23.5,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509601}
-+{"system.network.sent":11502749,"system.gpu.0.powerPercent":97.46,"system.network.recv":7764756,"system.disk":22.4,"system.gpu.0.powerWatts":68.23,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":60.73,"system.gpu.0.gpu":85.87,"_runtime":1039,"system.proc.memory.rssMB":2962.16,"system.proc.memory.availableMB":11528.19,"system.cpu":97.55,"system.proc.cpu.threads":27.47,"system.memory":23.37,"system.proc.memory.percent":19.69,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509631}
-+{"system.network.sent":11508976,"system.gpu.0.powerPercent":102.06,"system.network.recv":7771440,"system.disk":22.4,"system.gpu.0.powerWatts":71.44,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.53,"system.gpu.0.gpu":85.6,"_runtime":1069,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11533.16,"system.cpu":99.91,"system.proc.cpu.threads":27,"system.memory":23.34,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509662}
-+{"system.network.sent":11522899,"system.gpu.0.powerPercent":93.89,"system.network.recv":7774171,"system.disk":22.4,"system.gpu.0.powerWatts":65.73,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.8,"_runtime":1099,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11449.37,"system.cpu":99.9,"system.proc.cpu.threads":27,"system.memory":23.89,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509692}
-+{"system.network.sent":12355982,"system.gpu.0.powerPercent":99.47,"system.network.recv":8325343,"system.disk":22.4,"system.gpu.0.powerWatts":69.63,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":53.6,"system.gpu.0.gpu":80.47,"_runtime":1129,"system.proc.memory.rssMB":2962.93,"system.proc.memory.availableMB":11549.31,"system.cpu":91.64,"system.proc.cpu.threads":27.73,"system.memory":23.23,"system.proc.memory.percent":19.7,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509722}
-+{"system.network.sent":13392411,"system.gpu.0.powerPercent":96.5,"system.network.recv":9022410,"system.disk":22.4,"system.gpu.0.powerWatts":67.55,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":66.2,"system.gpu.0.gpu":86.73,"_runtime":1160,"system.proc.memory.rssMB":2966.31,"system.proc.memory.availableMB":11507.02,"system.cpu":96.58,"system.proc.cpu.threads":28,"system.memory":23.51,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509752}
-+{"system.network.sent":14052060,"system.gpu.0.powerPercent":93.62,"system.network.recv":9455229,"system.disk":22.4,"system.gpu.0.powerWatts":65.53,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":62.4,"system.gpu.0.gpu":86.33,"_runtime":1190,"system.proc.memory.rssMB":2964.4,"system.proc.memory.availableMB":11520.81,"system.cpu":96.15,"system.proc.cpu.threads":27.67,"system.memory":23.41,"system.proc.memory.percent":19.71,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509783}
-+{"system.network.sent":14116134,"system.gpu.0.powerPercent":97.24,"system.network.recv":9471018,"system.disk":22.4,"system.gpu.0.powerWatts":68.07,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.13,"_runtime":1220,"system.proc.memory.rssMB":2959.24,"system.proc.memory.availableMB":11527.75,"system.cpu":99.85,"system.proc.cpu.threads":27,"system.memory":23.39,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509813}
-+{"system.network.sent":14129520,"system.gpu.0.powerPercent":102.88,"system.network.recv":9474423,"system.disk":22.4,"system.gpu.0.powerWatts":72.02,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":56.33,"system.gpu.0.gpu":86.27,"_runtime":1250,"system.proc.memory.rssMB":2958.7,"system.proc.memory.availableMB":11472.54,"system.cpu":99.87,"system.proc.cpu.threads":27,"system.memory":23.75,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509843}
-+{"system.network.sent":14134644,"system.gpu.0.powerPercent":87.89,"system.network.recv":9477692,"system.disk":22.4,"system.gpu.0.powerWatts":61.52,"_wandb":true,"system.gpu.0.temp":76.75,"system.gpu.0.memory":39.12,"system.gpu.0.gpu":73.5,"_runtime":1267,"system.proc.memory.rssMB":2956.05,"system.proc.memory.availableMB":11567.16,"system.cpu":86.28,"system.proc.cpu.threads":26.38,"system.memory":23.1,"system.proc.memory.percent":19.65,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509859}
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-new file mode 100644
-index 0000000..e946e56
---- /dev/null
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-@@ -0,0 +1,5 @@
-+{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.0654682070016861,-0.06339701265096664,-0.06132581830024719,-0.05925462394952774,-0.05718342587351799,-0.05511223152279854,-0.053041037172079086,-0.050969842821359634,-0.048898644745349884,-0.04682745039463043,-0.04475625604391098,-0.04268506169319153,-0.040613867342472076,-0.038542672991752625,-0.03647147864103317,-0.03440028056502342,-0.03232908621430397,-0.03025789186358452,-0.028186697512865067,-0.026115499436855316,-0.024044305086135864,-0.021973110735416412,-0.01990191638469696,-0.01783072203397751,-0.015759527683258057,-0.013688329607248306,-0.011617135256528854,-0.009545940905809402,-0.0074747465550899506,-0.005403552204370499,-0.0033323541283607483,-0.0012611597776412964,0.0008100345730781555,0.0028812289237976074,0.004952423274517059,0.007023617625236511,0.009094811975955963,0.011166006326675415,0.013237208127975464,0.015308402478694916,0.017379596829414368,0.01945079118013382,0.02152198553085327,0.023593179881572723,0.025664374232292175,0.027735568583011627,0.02980676293373108,0.03187795728445053,0.03394915163516998,0.03602035343647003,0.038091547787189484,0.040162742137908936,0.04223393648862839,0.04430513083934784,0.04637632519006729,0.04844751954078674,0.050518713891506195,0.05258990824222565,0.0546611025929451,0.05673230439424515,0.0588034987449646,0.060874685645103455,0.0629458874464035,0.06501707434654236,0.06708827614784241]},"gradients/classifier.weight":{"bins":[-0.09012244641780853,-0.08724749088287354,-0.08437253534793854,-0.08149757981300354,-0.07862262427806854,-0.07574766874313354,-0.07287271320819855,-0.06999775767326355,-0.06712280213832855,-0.06424784660339355,-0.06137289106845856,-0.05849793553352356,-0.05562297999858856,-0.052748024463653564,-0.04987306892871857,-0.04699811339378357,-0.04412315785884857,-0.041248202323913574,-0.03837324678897858,-0.03549829125404358,-0.03262333571910858,-0.029748380184173584,-0.026873424649238586,-0.02399846911430359,-0.02112351357936859,-0.018248558044433594,-0.015373602509498596,-0.012498646974563599,-0.009623691439628601,-0.0067487359046936035,-0.003873780369758606,-0.0009988248348236084,0.0018761307001113892,0.004751086235046387,0.007626041769981384,0.010500997304916382,0.01337595283985138,0.016250908374786377,0.019125863909721375,0.022000819444656372,0.02487577497959137,0.027750730514526367,0.030625686049461365,0.03350064158439636,0.03637559711933136,0.03925055265426636,0.042125508189201355,0.04500046372413635,0.04787541925907135,0.05075037479400635,0.053625330328941345,0.05650028586387634,0.05937524139881134,0.06225019693374634,0.06512515246868134,0.06800010800361633,0.07087506353855133,0.07375001907348633,0.07662497460842133,0.07949993014335632,0.08237488567829132,0.08524984121322632,0.08812479674816132,0.09099975228309631,0.09387470781803131],"_type":"histogram","values":[1,1,1,0,3,1,5,2,4,10,9,17,15,21,30,49,53,61,86,96,118,155,170,210,214,249,229,254,272,299,314,295,344,291,277,262,259,239,186,184,169,136,111,97,83,60,47,38,19,23,20,13,17,7,8,4,1,2,2,0,0,0,0,1]},"_step":0,"val_acc":0.23687943262411348,"train_acc":0.25812953441384673,"_runtime":814.0969541072845,"_timestamp":1.5795092246157851e+09}
-+{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1],"bins":[-0.07717597484588623,-0.07544030994176865,-0.07370464503765106,-0.07196898013353348,-0.0702333152294159,-0.06849765032529831,-0.06676198542118073,-0.06502632051706314,-0.06329065561294556,-0.06155499070882797,-0.05981932580471039,-0.058083660900592804,-0.05634799599647522,-0.054612331092357635,-0.05287666618824005,-0.05114100128412247,-0.04940533638000488,-0.0476696714758873,-0.045934006571769714,-0.04419834539294243,-0.042462680488824844,-0.04072701558470726,-0.038991350680589676,-0.03725568577647209,-0.03552002087235451,-0.03378435596823692,-0.03204869106411934,-0.030313026160001755,-0.02857736125588417,-0.026841696351766586,-0.025106031447649002,-0.023370366543531418,-0.021634701639413834,-0.01989903673529625,-0.018163371831178665,-0.01642770692706108,-0.014692042022943497,-0.012956380844116211,-0.011220715939998627,-0.009485051035881042,-0.007749386131763458,-0.006013721227645874,-0.00427805632352829,-0.0025423914194107056,-0.0008067265152931213,0.0009289383888244629,0.002664603292942047,0.004400268197059631,0.006135933101177216,0.0078715980052948,0.009607262909412384,0.011342927813529968,0.013078592717647552,0.014814257621765137,0.01654992252588272,0.018285587430000305,0.02002125233411789,0.021756917238235474,0.023492582142353058,0.025228247046470642,0.026963911950588226,0.02869957685470581,0.030435241758823395,0.03217090666294098,0.03390657156705856]},"gradients/classifier.weight":{"_type":"histogram","values":[1,0,1,0,1,1,3,1,1,2,4,9,11,17,27,29,40,36,67,86,99,128,150,186,242,222,248,298,311,327,349,317,357,337,321,308,284,232,208,178,153,140,97,76,67,43,32,35,19,16,10,6,2,2,3,3,0,0,0,0,0,0,0,1],"bins":[-0.10413810610771179,-0.10082836449146271,-0.09751862287521362,-0.09420888125896454,-0.09089913964271545,-0.08758939802646637,-0.08427965641021729,-0.0809699147939682,-0.07766017317771912,-0.07435043156147003,-0.07104068994522095,-0.06773094832897186,-0.06442121416330338,-0.06111147254705429,-0.057801730930805206,-0.05449198931455612,-0.05118224769830704,-0.04787250608205795,-0.04456276446580887,-0.041253022849559784,-0.0379432812333107,-0.034633539617061615,-0.03132379800081253,-0.028014056384563446,-0.02470432221889496,-0.021394580602645874,-0.01808483898639679,-0.014775097370147705,-0.01146535575389862,-0.008155614137649536,-0.004845872521400452,-0.0015361309051513672,0.0017736107110977173,0.005083352327346802,0.008393093943595886,0.01170283555984497,0.015012577176094055,0.01832231879234314,0.021632060408592224,0.02494180202484131,0.028251543641090393,0.03156128525733948,0.03487102687358856,0.038180768489837646,0.04149051010608673,0.044800251722335815,0.0481099933385849,0.051419734954833984,0.054729461669921875,0.05803920328617096,0.061348944902420044,0.06465868651866913,0.06796842813491821,0.0712781697511673,0.07458791136741638,0.07789765298366547,0.08120739459991455,0.08451713621616364,0.08782687783241272,0.0911366194486618,0.09444636106491089,0.09775610268115997,0.10106584429740906,0.10437558591365814,0.10768532752990723]},"_step":1,"val_acc":0.25011820330969264,"train_acc":0.258383926343752,"_runtime":974.3342196941376,"_timestamp":1.5795093848530507e+09}
-+{"gradients/classifier.bias":{"values":[1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.006489427760243416,-0.006147412117570639,-0.005805396940559149,-0.005463381297886372,-0.0051213656552135944,-0.004779350012540817,-0.004437334835529327,-0.00409531919285655,-0.0037533037830144167,-0.003411288373172283,-0.003069272730499506,-0.0027272573206573725,-0.002385241910815239,-0.0020432262681424618,-0.0017012106254696846,-0.0013591954484581947,-0.0010171798057854176,-0.0006751641631126404,-0.0003331489861011505,8.866656571626663e-06,0.00035088229924440384,0.0006928974762558937,0.0010349131189286709,0.001376928761601448,0.001718943938612938,0.0020609600469470024,0.0024029752239584923,0.002744990400969982,0.0030870065093040466,0.0034290216863155365,0.0037710368633270264,0.004113052971661091,0.004455068148672581,0.004797083325684071,0.005139099434018135,0.005481114611029625,0.005823129788041115,0.006165145896375179,0.006507161073386669,0.006849176250398159,0.0071911923587322235,0.007533207535743713,0.007875222712755203,0.008217238821089268,0.008559253998100758,0.008901269175112247,0.009243285283446312,0.009585300460457802,0.009927315637469292,0.010269330814480782,0.01061134785413742,0.01095336303114891,0.0112953782081604,0.01163739338517189,0.01197940856218338,0.01232142373919487,0.012663440778851509,0.013005455955862999,0.013347471132874489,0.013689486309885979,0.014031501486897469,0.014373516663908958,0.014715533703565598,0.015057548880577087,0.015399564057588577],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.07622425258159637,-0.07385586947202682,-0.07148748636245728,-0.06911909580230713,-0.06675071269273758,-0.06438232958316803,-0.06201394647359848,-0.05964556336402893,-0.05727717652916908,-0.054908789694309235,-0.052540406584739685,-0.050172023475170135,-0.047803640365600586,-0.04543525353074074,-0.04306687042117119,-0.04069848358631134,-0.03833010047674179,-0.03596171736717224,-0.03359333053231239,-0.031224947422742844,-0.028856560587882996,-0.026488177478313446,-0.024119794368743896,-0.02175140753388405,-0.0193830244243145,-0.01701464131474495,-0.014646254479885101,-0.012277871370315552,-0.009909488260746002,-0.007541105151176453,-0.005172714591026306,-0.0028043314814567566,-0.00043594837188720703,0.0019324347376823425,0.004300817847251892,0.006669208407402039,0.009037591516971588,0.011405974626541138,0.013774357736110687,0.016142740845680237,0.018511131405830383,0.020879514515399933,0.023247897624969482,0.025616280734539032,0.02798466384410858,0.03035304695367813,0.03272143751382828,0.03508982062339783,0.03745820373296738,0.039826586842536926,0.042194969952106476,0.04456336051225662,0.04693174362182617,0.049300119280815125,0.05166850984096527,0.05403690040111542,0.05640527606010437,0.05877366662025452,0.06114204227924347,0.06351043283939362,0.06587882339954376,0.06824719905853271,0.07061558961868286,0.07298396527767181,0.07535235583782196],"_type":"histogram","values":[1,2,2,4,0,3,3,1,11,7,15,14,23,25,27,43,59,66,75,106,101,128,148,168,174,206,231,240,275,266,300,299,271,298,285,266,270,214,209,214,192,142,152,94,103,94,63,48,43,36,29,22,19,17,12,8,5,3,1,6,3,1,0,1]},"_step":2,"val_acc":0.24964539007092199,"train_acc":0.2603407873430231,"_runtime":1133.4028816223145,"_timestamp":1.5795095439217126e+09}
-+{"gradients/classifier.bias":{"values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.06606416404247284,-0.06390783190727234,-0.06175149977207184,-0.05959516763687134,-0.05743883550167084,-0.05528250336647034,-0.053126171231269836,-0.050969839096069336,-0.048813506960868835,-0.046657174825668335,-0.044500842690467834,-0.042344510555267334,-0.040188178420066833,-0.03803184628486633,-0.03587551414966583,-0.03371918201446533,-0.03156284987926483,-0.02940651774406433,-0.02725018560886383,-0.02509385347366333,-0.02293752133846283,-0.02078118920326233,-0.01862485706806183,-0.016468524932861328,-0.014312192797660828,-0.012155860662460327,-0.009999528527259827,-0.007843196392059326,-0.005686864256858826,-0.003530532121658325,-0.0013741999864578247,0.0007821321487426758,0.0029384642839431763,0.005094796419143677,0.007251128554344177,0.009407460689544678,0.011563792824745178,0.013720124959945679,0.01587645709514618,0.01803278923034668,0.02018912136554718,0.02234545350074768,0.02450178563594818,0.02665811777114868,0.028814449906349182,0.030970782041549683,0.03312711417675018,0.035283446311950684,0.037439778447151184,0.039596110582351685,0.041752442717552185,0.043908774852752686,0.046065106987953186,0.048221439123153687,0.05037777125835419,0.05253410339355469,0.05469043552875519,0.05684676766395569,0.05900309979915619,0.06115943193435669,0.06331576406955719,0.06547209620475769,0.06762842833995819,0.06978476047515869,0.07194109261035919],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.09906706213951111,-0.09581608325242996,-0.09256510436534882,-0.08931412547826767,-0.08606314659118652,-0.08281217515468597,-0.07956118881702423,-0.07631021738052368,-0.07305923849344254,-0.06980825960636139,-0.06655728071928024,-0.0633063018321991,-0.06005532294511795,-0.056804344058036804,-0.053553368896245956,-0.05030239000916481,-0.047051411122083664,-0.04380043223500252,-0.04054945334792137,-0.037298478186130524,-0.03404749929904938,-0.03079652041196823,-0.027545541524887085,-0.02429456263780594,-0.021043583750724792,-0.017792604863643646,-0.0145416259765625,-0.01129065454006195,-0.008039675652980804,-0.004788696765899658,-0.001537717878818512,0.0017132610082626343,0.0049642398953437805,0.008215218782424927,0.011466197669506073,0.01471717655658722,0.017968155443668365,0.02121913433074951,0.02447010576725006,0.027721092104911804,0.030972063541412354,0.0342230498790741,0.037474021315574646,0.040724992752075195,0.04397597908973694,0.04722695052623749,0.05047793686389923,0.05372890830039978,0.05697989463806152,0.06023086607456207,0.06348185241222382,0.06673282384872437,0.06998381018638611,0.07323478162288666,0.07648575305938721,0.07973673939704895,0.0829877108335495,0.08623869717121124,0.08948966860771179,0.09274065494537354,0.09599162638187408,0.09924261271953583,0.10249358415603638,0.10574457049369812,0.10899554193019867],"_type":"histogram","values":[1,0,0,0,2,2,0,4,3,6,10,11,14,22,31,43,53,58,86,101,112,160,183,225,221,275,317,314,310,329,323,356,343,312,332,263,237,192,175,162,123,83,77,78,50,43,29,27,12,11,6,5,4,3,0,0,1,0,0,1,1,0,1,1]},"_step":3,"val_acc":0.26222222222222225,"train_acc":0.2627868635921119,"_runtime":1291.7072627544403,"_timestamp":1.5795097022260938e+09}
-+{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.037257447838783264,-0.035971060395240784,-0.034684669226408005,-0.033398281782865524,-0.032111890614032745,-0.030825503170490265,-0.029539113864302635,-0.028252724558115005,-0.026966335251927376,-0.025679945945739746,-0.024393556639552116,-0.023107167333364487,-0.021820779889822006,-0.020534390583634377,-0.019248001277446747,-0.017961611971259117,-0.016675222665071487,-0.015388833358883858,-0.014102444052696228,-0.012816054746508598,-0.011529665440320969,-0.010243277996778488,-0.008956888690590858,-0.007670499384403229,-0.006384110078215599,-0.005097720772027969,-0.003811333328485489,-0.00252494215965271,-0.0012385547161102295,4.783645272254944e-05,0.00133422389626503,0.002620615065097809,0.003907002508640289,0.00519338995218277,0.006479781121015549,0.007766168564558029,0.009052559733390808,0.010338947176933289,0.011625338345766068,0.012911725789308548,0.014198116958141327,0.015484504401683807,0.016770891845226288,0.018057283014059067,0.019343670457601547,0.020630061626434326,0.021916449069976807,0.023202840238809586,0.024489227682352066,0.025775618851184845,0.027062006294727325,0.028348393738269806,0.029634781181812286,0.030921176075935364,0.032207563519477844,0.033493950963020325,0.034780338406562805,0.036066725850105286,0.03735312074422836,0.038639508187770844,0.039925895631313324,0.041212283074855804,0.04249867796897888,0.04378506541252136,0.04507145285606384]},"gradients/classifier.weight":{"bins":[-0.0888357013463974,-0.08612215518951416,-0.08340860903263092,-0.08069506287574768,-0.07798151671886444,-0.0752679631114006,-0.07255441695451736,-0.06984087079763412,-0.06712732464075089,-0.06441377848386765,-0.061700232326984406,-0.05898668244481087,-0.05627313628792763,-0.05355959013104439,-0.05084604024887085,-0.04813249409198761,-0.04541894793510437,-0.04270540177822113,-0.03999185562133789,-0.03727830573916435,-0.03456475958228111,-0.03185121342539787,-0.029137663543224335,-0.026424117386341095,-0.023710571229457855,-0.020997025072574615,-0.018283478915691376,-0.015569932758808136,-0.0128563791513443,-0.01014283299446106,-0.00742928683757782,-0.00471574068069458,-0.0020021945238113403,0.0007113516330718994,0.003424897789955139,0.006138443946838379,0.008851990103721619,0.011565543711185455,0.014279089868068695,0.016992636024951935,0.019706182181835175,0.022419728338718414,0.025133274495601654,0.027846820652484894,0.03056037425994873,0.03327392041683197,0.03598746657371521,0.03870101273059845,0.04141455888748169,0.04412810504436493,0.04684165120124817,0.04955519735813141,0.05226874351501465,0.05498228967189789,0.05769583582878113,0.06040938198566437,0.0631229430437088,0.06583648920059204,0.06855003535747528,0.07126358151435852,0.07397712767124176,0.076690673828125,0.07940421998500824,0.08211776614189148,0.08483131229877472],"_type":"histogram","values":[1,0,0,0,2,0,1,0,10,6,9,13,11,18,18,29,47,58,58,70,96,103,104,181,183,180,232,264,280,262,304,320,289,307,281,323,255,289,218,224,185,155,132,132,118,76,65,59,48,22,30,26,17,9,5,3,4,2,3,3,1,2,0,1]},"_step":4,"val_acc":0.262789598108747,"train_acc":0.2653650279586515,"_runtime":1448.6882483959198,"_timestamp":1.5795098592070794e+09}
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json b/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-new file mode 100644
-index 0000000..0ce5b0d
---- /dev/null
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-@@ -0,0 +1,29 @@
-+{
-+    "root": "/home/ubamba98/droughtwatch",
-+    "program": "<python with no main file>",
-+    "git": {
-+        "remote": "https://github.com/ubamba98/droughtwatch",
-+        "commit": "4e7b9b38b8d5d3ec44d43373b8e263f50ead87a3"
-+    },
-+    "email": "ubamba98@gmail.com",
-+    "startedAt": "2020-01-20T08:44:21.248355",
-+    "host": "ccw-iclr",
-+    "username": "ubamba98",
-+    "executable": "/home/ubamba98/anaconda3/bin/python",
-+    "os": "Linux-4.9.0-11-amd64-x86_64-with-debian-9.11",
-+    "python": "3.7.3",
-+    "gpu": "Tesla T4",
-+    "gpu_count": 1,
-+    "cpu_count": 4,
-+    "cuda": "10.0.130",
-+    "args": [
-+        "-f",
-+        "/home/ubamba98/.local/share/jupyter/runtime/kernel-f86872c7-f93b-4579-ae59-db40fc8ec9c5.json"
-+    ],
-+    "state": "running",
-+    "jobType": null,
-+    "mode": "run",
-+    "name": "efficentnet-b3-765",
-+    "project": "droughtwatch",
-+    "heartbeatAt": "2020-01-20T08:44:22.172990"
-+}
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-summary.json b/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-new file mode 100644
-index 0000000..27d2e55
---- /dev/null
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-@@ -0,0 +1 @@
-+{"graph_0": {"_type": "graph", "edges": [], "nodes": [{"id": 140438557381128, "name": "conv_stem", "class_name": "Conv2dSame(3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False)", "parameters": [["weight", [40, 3, 3, 3]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [1080]}, {"id": 140438557383704, "name": "bn1", "class_name": "BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [40]], ["bias", [40]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [40, 40]}, {"id": 140438557382920, "name": "blocks.0.0", "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)\n  (bn1): BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [40, 1, 3, 3]], ["bn1.weight", [40]], ["bn1.bias", [40]], ["se.conv_reduce.weight", [10, 40, 1, 1]], ["se.conv_reduce.bias", [10]], ["se.conv_expand.weight", [40, 10, 1, 1]], ["se.conv_expand.bias", [40]], ["conv_pw.weight", [24, 40, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [360, 40, 40, 400, 10, 400, 40, 960, 24, 24]}, {"id": 140438680665224, "name": "blocks.0.1", "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)\n  (bn1): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [24, 1, 3, 3]], ["bn1.weight", [24]], ["bn1.bias", [24]], ["se.conv_reduce.weight", [6, 24, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [24, 6, 1, 1]], ["se.conv_expand.bias", [24]], ["conv_pw.weight", [24, 24, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [216, 24, 24, 144, 6, 144, 24, 576, 24, 24]}, {"id": 140438676598736, "name": "blocks.1.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(144, 144, kernel_size=(3, 3), stride=(2, 2), groups=144, bias=False)\n  (bn2): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [144, 24, 1, 1]], ["bn1.weight", [144]], ["bn1.bias", [144]], ["conv_dw.weight", [144, 1, 3, 3]], ["bn2.weight", [144]], ["bn2.bias", [144]], ["se.conv_reduce.weight", [6, 144, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [144, 6, 1, 1]], ["se.conv_expand.bias", [144]], ["conv_pwl.weight", [32, 144, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 4608, 32, 32]}, {"id": 140438557424160, "name": "blocks.1.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"id": 140438679559640, "name": "blocks.1.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"id": 140438679470320, "name": "blocks.2.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(192, 192, kernel_size=(5, 5), stride=(2, 2), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 5, 5]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [48, 192, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [6144, 192, 192, 4800, 192, 192, 1536, 8, 1536, 192, 9216, 48, 48]}, {"id": 140438557424384, "name": "blocks.2.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"id": 140438557422704, "name": "blocks.2.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"id": 140438557421920, "name": "blocks.3.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(288, 288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 3, 3]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [96, 288, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [13824, 288, 288, 2592, 288, 288, 3456, 12, 3456, 288, 27648, 96, 96]}, {"id": 140438557422816, "name": "blocks.3.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557824392, "name": "blocks.3.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557825232, "name": "blocks.3.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557825176, "name": "blocks.3.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557824672, "name": "blocks.4.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 5, 5]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [136, 576, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [55296, 576, 576, 14400, 576, 576, 13824, 24, 13824, 576, 78336, 136, 136]}, {"id": 140438557823496, "name": "blocks.4.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679158968, "name": "blocks.4.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679496744, "name": "blocks.4.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679422456, "name": "blocks.4.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679421448, "name": "blocks.5.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(816, 816, kernel_size=(5, 5), stride=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [232, 816, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 189312, 232, 232]}, {"id": 140438679580400, "name": "blocks.5.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140438679115088, "name": "blocks.5.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140438676984832, "name": "blocks.5.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140440670709296, "name": "blocks.5.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140440670710192, "name": "blocks.5.5", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140440670709464, "name": "blocks.6.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 3, 3]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [384, 1392, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [322944, 1392, 1392, 12528, 1392, 1392, 80736, 58, 80736, 1392, 534528, 384, 384]}, {"id": 140438679947864, "name": "blocks.6.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(384, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)\n  (bn2): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(2304, 96, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(96, 2304, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(2304, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [2304, 384, 1, 1]], ["bn1.weight", [2304]], ["bn1.bias", [2304]], ["conv_dw.weight", [2304, 1, 3, 3]], ["bn2.weight", [2304]], ["bn2.bias", [2304]], ["se.conv_reduce.weight", [96, 2304, 1, 1]], ["se.conv_reduce.bias", [96]], ["se.conv_expand.weight", [2304, 96, 1, 1]], ["se.conv_expand.bias", [2304]], ["conv_pwl.weight", [384, 2304, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [884736, 2304, 2304, 20736, 2304, 2304, 221184, 96, 221184, 2304, 884736, 384, 384]}, {"id": 140438557382584, "name": "conv_head", "class_name": "Conv2d(384, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)", "parameters": [["weight", [1536, 384, 1, 1]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [589824]}, {"id": 140438703610848, "name": "bn2", "class_name": "BatchNorm2d(1536, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [1536]], ["bias", [1536]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [1536, 1536]}, {"id": 140438703610792, "name": "global_pool", "class_name": "SelectAdaptivePool2d (output_size=1, pool_type=avg)", "parameters": [], "output_shape": [[256, 1536, 1, 1]], "num_parameters": []}, {"id": 140438679885696, "name": "classifier", "class_name": "Linear(in_features=1536, out_features=4, bias=True)", "parameters": [["weight", [4, 1536]], ["bias", [4]]], "output_shape": [[256, 4]], "num_parameters": [6144, 4]}], "format": "torch"}, "train_acc": 0.2653650279586515, "_step": 4, "gradients/classifier.weight": {"bins": [-0.0888357013463974, -0.08612215518951416, -0.08340860903263092, -0.08069506287574768, -0.07798151671886444, -0.0752679631114006, -0.07255441695451736, -0.06984087079763412, -0.06712732464075089, -0.06441377848386765, -0.061700232326984406, -0.05898668244481087, -0.05627313628792763, -0.05355959013104439, -0.05084604024887085, -0.04813249409198761, -0.04541894793510437, -0.04270540177822113, -0.03999185562133789, -0.03727830573916435, -0.03456475958228111, -0.03185121342539787, -0.029137663543224335, -0.026424117386341095, -0.023710571229457855, -0.020997025072574615, -0.018283478915691376, -0.015569932758808136, -0.0128563791513443, -0.01014283299446106, -0.00742928683757782, -0.00471574068069458, -0.0020021945238113403, 0.0007113516330718994, 0.003424897789955139, 0.006138443946838379, 0.008851990103721619, 0.011565543711185455, 0.014279089868068697, 0.016992636024951935, 0.019706182181835175, 0.022419728338718414, 0.025133274495601658, 0.027846820652484897, 0.03056037425994873, 0.03327392041683197, 0.03598746657371521, 0.03870101273059845, 0.04141455888748169, 0.04412810504436493, 0.04684165120124817, 0.04955519735813141, 0.05226874351501465, 0.05498228967189789, 0.05769583582878113, 0.06040938198566437, 0.0631229430437088, 0.06583648920059204, 0.06855003535747528, 0.07126358151435852, 0.07397712767124176, 0.076690673828125, 0.07940421998500824, 0.08211776614189148, 0.08483131229877472], "_type": "histogram", "values": [1, 0, 0, 0, 2, 0, 1, 0, 10, 6, 9, 13, 11, 18, 18, 29, 47, 58, 58, 70, 96, 103, 104, 181, 183, 180, 232, 264, 280, 262, 304, 320, 289, 307, 281, 323, 255, 289, 218, 224, 185, 155, 132, 132, 118, 76, 65, 59, 48, 22, 30, 26, 17, 9, 5, 3, 4, 2, 3, 3, 1, 2, 0, 1]}, "gradients/classifier.bias": {"bins": [-0.037257447838783264, -0.035971060395240784, -0.034684669226408005, -0.033398281782865524, -0.032111890614032745, -0.030825503170490265, -0.029539113864302635, -0.028252724558115005, -0.026966335251927376, -0.025679945945739743, -0.024393556639552116, -0.023107167333364487, -0.02182077988982201, -0.020534390583634377, -0.019248001277446747, -0.017961611971259117, -0.016675222665071487, -0.015388833358883858, -0.014102444052696228, -0.012816054746508598, -0.011529665440320969, -0.010243277996778488, -0.008956888690590858, -0.007670499384403229, -0.006384110078215599, -0.005097720772027969, -0.003811333328485489, -0.00252494215965271, -0.0012385547161102295, 4.783645272254944e-05, 0.00133422389626503, 0.002620615065097809, 0.003907002508640289, 0.00519338995218277, 0.006479781121015549, 0.007766168564558029, 0.009052559733390808, 0.010338947176933289, 0.011625338345766068, 0.012911725789308548, 0.014198116958141329, 0.015484504401683807, 0.016770891845226288, 0.018057283014059067, 0.019343670457601547, 0.02063006162643433, 0.021916449069976807, 0.023202840238809586, 0.024489227682352063, 0.025775618851184845, 0.027062006294727325, 0.02834839373826981, 0.029634781181812286, 0.030921176075935364, 0.032207563519477844, 0.033493950963020325, 0.034780338406562805, 0.036066725850105286, 0.03735312074422836, 0.03863950818777085, 0.03992589563131333, 0.04121228307485581, 0.04249867796897888, 0.04378506541252136, 0.04507145285606384], "_type": "histogram", "values": [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]}, "val_acc": 0.262789598108747, "_runtime": 1448.6882483959198, "_timestamp": 1579509859.2070794}
-diff --git a/wandb/settings b/wandb/settings
-new file mode 100644
-index 0000000..24e2065
---- /dev/null
-+++ b/wandb/settings
-@@ -0,0 +1,4 @@
-+[default]
-+entity = ubamba98
-+project = droughtwatch
-+
diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
deleted file mode 100644
index 97ebdd9..0000000
--- a/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
+++ /dev/null
@@ -1,36 +0,0 @@
-{"system.network.sent":10977141,"system.gpu.0.powerPercent":96.79,"system.network.recv":7409894,"system.disk":22.4,"system.gpu.0.powerWatts":67.75,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":65.33,"system.gpu.0.gpu":85.6,"_runtime":1008,"system.proc.memory.rssMB":2966.29,"system.proc.memory.availableMB":11506.94,"system.cpu":98.25,"system.proc.cpu.threads":28,"system.memory":23.5,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509601}
-{"system.network.sent":11502749,"system.gpu.0.powerPercent":97.46,"system.network.recv":7764756,"system.disk":22.4,"system.gpu.0.powerWatts":68.23,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":60.73,"system.gpu.0.gpu":85.87,"_runtime":1039,"system.proc.memory.rssMB":2962.16,"system.proc.memory.availableMB":11528.19,"system.cpu":97.55,"system.proc.cpu.threads":27.47,"system.memory":23.37,"system.proc.memory.percent":19.69,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509631}
-{"system.network.sent":11508976,"system.gpu.0.powerPercent":102.06,"system.network.recv":7771440,"system.disk":22.4,"system.gpu.0.powerWatts":71.44,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.53,"system.gpu.0.gpu":85.6,"_runtime":1069,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11533.16,"system.cpu":99.91,"system.proc.cpu.threads":27,"system.memory":23.34,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509662}
-{"system.network.sent":11522899,"system.gpu.0.powerPercent":93.89,"system.network.recv":7774171,"system.disk":22.4,"system.gpu.0.powerWatts":65.73,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.8,"_runtime":1099,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11449.37,"system.cpu":99.9,"system.proc.cpu.threads":27,"system.memory":23.89,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509692}
-{"system.network.sent":12355982,"system.gpu.0.powerPercent":99.47,"system.network.recv":8325343,"system.disk":22.4,"system.gpu.0.powerWatts":69.63,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":53.6,"system.gpu.0.gpu":80.47,"_runtime":1129,"system.proc.memory.rssMB":2962.93,"system.proc.memory.availableMB":11549.31,"system.cpu":91.64,"system.proc.cpu.threads":27.73,"system.memory":23.23,"system.proc.memory.percent":19.7,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509722}
-{"system.network.sent":13392411,"system.gpu.0.powerPercent":96.5,"system.network.recv":9022410,"system.disk":22.4,"system.gpu.0.powerWatts":67.55,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":66.2,"system.gpu.0.gpu":86.73,"_runtime":1160,"system.proc.memory.rssMB":2966.31,"system.proc.memory.availableMB":11507.02,"system.cpu":96.58,"system.proc.cpu.threads":28,"system.memory":23.51,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509752}
-{"system.network.sent":14052060,"system.gpu.0.powerPercent":93.62,"system.network.recv":9455229,"system.disk":22.4,"system.gpu.0.powerWatts":65.53,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":62.4,"system.gpu.0.gpu":86.33,"_runtime":1190,"system.proc.memory.rssMB":2964.4,"system.proc.memory.availableMB":11520.81,"system.cpu":96.15,"system.proc.cpu.threads":27.67,"system.memory":23.41,"system.proc.memory.percent":19.71,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509783}
-{"system.network.sent":14116134,"system.gpu.0.powerPercent":97.24,"system.network.recv":9471018,"system.disk":22.4,"system.gpu.0.powerWatts":68.07,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.13,"_runtime":1220,"system.proc.memory.rssMB":2959.24,"system.proc.memory.availableMB":11527.75,"system.cpu":99.85,"system.proc.cpu.threads":27,"system.memory":23.39,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509813}
-{"system.network.sent":14129520,"system.gpu.0.powerPercent":102.88,"system.network.recv":9474423,"system.disk":22.4,"system.gpu.0.powerWatts":72.02,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":56.33,"system.gpu.0.gpu":86.27,"_runtime":1250,"system.proc.memory.rssMB":2958.7,"system.proc.memory.availableMB":11472.54,"system.cpu":99.87,"system.proc.cpu.threads":27,"system.memory":23.75,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509843}
-{"system.network.sent":14134644,"system.gpu.0.powerPercent":87.89,"system.network.recv":9477692,"system.disk":22.4,"system.gpu.0.powerWatts":61.52,"_wandb":true,"system.gpu.0.temp":76.75,"system.gpu.0.memory":39.12,"system.gpu.0.gpu":73.5,"_runtime":1267,"system.proc.memory.rssMB":2956.05,"system.proc.memory.availableMB":11567.16,"system.cpu":86.28,"system.proc.cpu.threads":26.38,"system.memory":23.1,"system.proc.memory.percent":19.65,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509859}
-{"system.gpu.0.gpu": 81.67, "system.gpu.0.memory": 48.93, "system.gpu.0.memoryAllocated": 37.81, "system.gpu.0.temp": 76.87, "system.gpu.0.powerWatts": 64.4, "system.gpu.0.powerPercent": 92.01, "system.cpu": 37.97, "system.memory": 23.73, "system.disk": 22.4, "system.proc.memory.availableMB": 11472.72, "system.proc.memory.rssMB": 2972.11, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 27.93, "system.network.sent": 758361, "system.network.recv": 563087, "_wandb": true, "_timestamp": 1579509890, "_runtime": 1296}
-{"system.gpu.0.gpu": 89.2, "system.gpu.0.memory": 54.2, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 71.05, "system.gpu.0.powerPercent": 101.51, "system.cpu": 38.42, "system.memory": 23.79, "system.disk": 22.4, "system.proc.memory.availableMB": 11462.96, "system.proc.memory.rssMB": 2972.18, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 1227510, "system.network.recv": 875686, "_wandb": true, "_timestamp": 1579509920, "_runtime": 1326}
-{"system.gpu.0.gpu": 89.33, "system.gpu.0.memory": 53.87, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.2, "system.gpu.0.powerWatts": 68.12, "system.gpu.0.powerPercent": 97.31, "system.cpu": 38.65, "system.memory": 23.81, "system.disk": 22.4, "system.proc.memory.availableMB": 11461.55, "system.proc.memory.rssMB": 2972.18, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 1666981, "system.network.recv": 1169241, "_wandb": true, "_timestamp": 1579509950, "_runtime": 1356}
-{"system.gpu.0.gpu": 89.6, "system.gpu.0.memory": 54.4, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 76.8, "system.gpu.0.powerWatts": 65.93, "system.gpu.0.powerPercent": 94.19, "system.cpu": 38.85, "system.memory": 23.85, "system.disk": 22.4, "system.proc.memory.availableMB": 11460.04, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 2085510, "system.network.recv": 1447740, "_wandb": true, "_timestamp": 1579509980, "_runtime": 1386}
-{"system.gpu.0.gpu": 89.53, "system.gpu.0.memory": 54.2, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 61.94, "system.gpu.0.powerPercent": 88.48, "system.cpu": 38.46, "system.memory": 23.84, "system.disk": 22.4, "system.proc.memory.availableMB": 11461.03, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 2506923, "system.network.recv": 1726051, "_wandb": true, "_timestamp": 1579510011, "_runtime": 1416}
-{"system.gpu.0.gpu": 89.6, "system.gpu.0.memory": 54.4, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.07, "system.gpu.0.powerWatts": 70.87, "system.gpu.0.powerPercent": 101.25, "system.cpu": 38.67, "system.memory": 23.83, "system.disk": 22.4, "system.proc.memory.availableMB": 11460.28, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 2927846, "system.network.recv": 2010982, "_wandb": true, "_timestamp": 1579510041, "_runtime": 1446}
-{"system.gpu.0.gpu": 90.2, "system.gpu.0.memory": 54.4, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 73.43, "system.gpu.0.powerPercent": 104.9, "system.cpu": 38.77, "system.memory": 23.89, "system.disk": 22.4, "system.proc.memory.availableMB": 11452.43, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 3356480, "system.network.recv": 2290911, "_wandb": true, "_timestamp": 1579510071, "_runtime": 1477}
-{"system.gpu.0.gpu": 89.67, "system.gpu.0.memory": 54.13, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 75.49, "system.gpu.0.powerPercent": 107.84, "system.cpu": 38.83, "system.memory": 24.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11301.4, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 3779986, "system.network.recv": 2571164, "_wandb": true, "_timestamp": 1579510101, "_runtime": 1507}
-{"system.gpu.0.gpu": 89.8, "system.gpu.0.memory": 54.4, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 61.33, "system.gpu.0.powerPercent": 87.61, "system.cpu": 38.63, "system.memory": 24.85, "system.disk": 22.4, "system.proc.memory.availableMB": 11302.55, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 4195859, "system.network.recv": 2844061, "_wandb": true, "_timestamp": 1579510131, "_runtime": 1537}
-{"system.gpu.0.gpu": 85.8, "system.gpu.0.memory": 53.33, "system.gpu.0.memoryAllocated": 37.95, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 62.38, "system.gpu.0.powerPercent": 89.12, "system.cpu": 56.72, "system.memory": 24.3, "system.disk": 22.4, "system.proc.memory.availableMB": 11387.01, "system.proc.memory.rssMB": 2969.03, "system.proc.memory.percent": 19.74, "system.proc.cpu.threads": 27.67, "system.network.sent": 4493831, "system.network.recv": 3041280, "_wandb": true, "_timestamp": 1579510161, "_runtime": 1567}
-{"system.gpu.0.gpu": 86.2, "system.gpu.0.memory": 56.4, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 71.41, "system.gpu.0.powerPercent": 102.01, "system.cpu": 99.85, "system.memory": 23.4, "system.disk": 22.4, "system.proc.memory.availableMB": 11522.27, "system.proc.memory.rssMB": 2964.5, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 27.0, "system.network.sent": 4498491, "system.network.recv": 3091323, "_wandb": true, "_timestamp": 1579510192, "_runtime": 1597}
-{"system.gpu.0.gpu": 85.87, "system.gpu.0.memory": 55.8, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 76.67, "system.gpu.0.powerWatts": 71.14, "system.gpu.0.powerPercent": 101.63, "system.cpu": 99.9, "system.memory": 23.45, "system.disk": 22.4, "system.proc.memory.availableMB": 11515.83, "system.proc.memory.rssMB": 2965.05, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 27.0, "system.network.sent": 4501885, "system.network.recv": 3092980, "_wandb": true, "_timestamp": 1579510222, "_runtime": 1628}
-{"system.gpu.0.gpu": 81.0, "system.gpu.0.memory": 45.8, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 76.8, "system.gpu.0.powerWatts": 69.12, "system.gpu.0.powerPercent": 98.74, "system.cpu": 66.55, "system.memory": 23.26, "system.disk": 22.4, "system.proc.memory.availableMB": 11546.79, "system.proc.memory.rssMB": 2967.48, "system.proc.memory.percent": 19.73, "system.proc.cpu.threads": 27.2, "system.network.sent": 4796843, "system.network.recv": 3293537, "_wandb": true, "_timestamp": 1579510252, "_runtime": 1658}
-{"system.gpu.0.gpu": 89.4, "system.gpu.0.memory": 54.07, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 66.42, "system.gpu.0.powerPercent": 94.89, "system.cpu": 38.99, "system.memory": 23.73, "system.disk": 22.4, "system.proc.memory.availableMB": 11475.88, "system.proc.memory.rssMB": 2973.86, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 5353158, "system.network.recv": 3638383, "_wandb": true, "_timestamp": 1579510282, "_runtime": 1688}
-{"system.gpu.0.gpu": 89.47, "system.gpu.0.memory": 54.2, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 72.24, "system.gpu.0.powerPercent": 103.2, "system.cpu": 38.73, "system.memory": 23.75, "system.disk": 22.4, "system.proc.memory.availableMB": 11472.79, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 5835668, "system.network.recv": 4000743, "_wandb": true, "_timestamp": 1579510312, "_runtime": 1718}
-{"system.gpu.0.gpu": 89.53, "system.gpu.0.memory": 54.13, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.07, "system.gpu.0.powerWatts": 64.27, "system.gpu.0.powerPercent": 91.82, "system.cpu": 38.81, "system.memory": 23.75, "system.disk": 22.4, "system.proc.memory.availableMB": 11471.81, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 6261668, "system.network.recv": 4287637, "_wandb": true, "_timestamp": 1579510343, "_runtime": 1748}
-{"system.gpu.0.gpu": 89.6, "system.gpu.0.memory": 54.27, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 69.51, "system.gpu.0.powerPercent": 99.3, "system.cpu": 38.54, "system.memory": 23.75, "system.disk": 22.4, "system.proc.memory.availableMB": 11472.59, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 6700788, "system.network.recv": 4577856, "_wandb": true, "_timestamp": 1579510373, "_runtime": 1778}
-{"system.gpu.0.gpu": 89.8, "system.gpu.0.memory": 54.47, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 71.42, "system.gpu.0.powerPercent": 102.02, "system.cpu": 39.33, "system.memory": 24.39, "system.disk": 22.4, "system.proc.memory.availableMB": 11375.64, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 7142196, "system.network.recv": 4871182, "_wandb": true, "_timestamp": 1579510403, "_runtime": 1809}
-{"system.gpu.0.gpu": 90.13, "system.gpu.0.memory": 54.6, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 59.28, "system.gpu.0.powerPercent": 84.68, "system.cpu": 38.85, "system.memory": 24.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11302.76, "system.proc.memory.rssMB": 2973.88, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 7583889, "system.network.recv": 5160633, "_wandb": true, "_timestamp": 1579510433, "_runtime": 1839}
-{"system.gpu.0.gpu": 90.2, "system.gpu.0.memory": 54.53, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 64.21, "system.gpu.0.powerPercent": 91.73, "system.cpu": 38.73, "system.memory": 24.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11302.88, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 8007990, "system.network.recv": 5441264, "_wandb": true, "_timestamp": 1579510463, "_runtime": 1869}
-{"system.gpu.0.gpu": 90.0, "system.gpu.0.memory": 54.53, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 66.28, "system.gpu.0.powerPercent": 94.68, "system.cpu": 38.74, "system.memory": 24.85, "system.disk": 22.4, "system.proc.memory.availableMB": 11303.79, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 8435309, "system.network.recv": 5727107, "_wandb": true, "_timestamp": 1579510493, "_runtime": 1899}
-{"system.gpu.0.gpu": 89.6, "system.gpu.0.memory": 54.13, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 72.25, "system.gpu.0.powerPercent": 103.21, "system.cpu": 38.62, "system.memory": 24.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11303.35, "system.proc.memory.rssMB": 2973.88, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 8858885, "system.network.recv": 6006566, "_wandb": true, "_timestamp": 1579510523, "_runtime": 1929}
-{"system.gpu.0.gpu": 86.67, "system.gpu.0.memory": 55.73, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 63.91, "system.gpu.0.powerPercent": 91.29, "system.cpu": 90.41, "system.memory": 23.54, "system.disk": 22.4, "system.proc.memory.availableMB": 11503.78, "system.proc.memory.rssMB": 2965.76, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 26.8, "system.network.sent": 8947611, "system.network.recv": 6062379, "_wandb": true, "_timestamp": 1579510554, "_runtime": 1959}
-{"system.gpu.0.gpu": 86.07, "system.gpu.0.memory": 56.47, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 69.9, "system.gpu.0.powerPercent": 99.85, "system.cpu": 99.89, "system.memory": 23.77, "system.disk": 22.4, "system.proc.memory.availableMB": 11469.72, "system.proc.memory.rssMB": 2965.75, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 27.0, "system.network.sent": 8953536, "system.network.recv": 6079245, "_wandb": true, "_timestamp": 1579510584, "_runtime": 1990}
-{"system.gpu.0.gpu": 78.33, "system.gpu.0.memory": 46.93, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.07, "system.gpu.0.powerWatts": 68.12, "system.gpu.0.powerPercent": 97.31, "system.cpu": 93.19, "system.memory": 24.17, "system.disk": 22.4, "system.proc.memory.availableMB": 11408.62, "system.proc.memory.rssMB": 2965.56, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 27.07, "system.network.sent": 9026902, "system.network.recv": 6145986, "_wandb": true, "_timestamp": 1579510614, "_runtime": 2020}
-{"system.gpu.0.gpu": 89.53, "system.gpu.0.memory": 54.13, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 66.09, "system.gpu.0.powerPercent": 94.42, "system.cpu": 38.67, "system.memory": 23.71, "system.disk": 22.4, "system.proc.memory.availableMB": 11476.13, "system.proc.memory.rssMB": 2973.94, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 9596877, "system.network.recv": 6501867, "_wandb": true, "_timestamp": 1579510644, "_runtime": 2050}
diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
deleted file mode 100644
index f338a22..0000000
--- a/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
+++ /dev/null
@@ -1,7 +0,0 @@
-{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.0654682070016861,-0.06339701265096664,-0.06132581830024719,-0.05925462394952774,-0.05718342587351799,-0.05511223152279854,-0.053041037172079086,-0.050969842821359634,-0.048898644745349884,-0.04682745039463043,-0.04475625604391098,-0.04268506169319153,-0.040613867342472076,-0.038542672991752625,-0.03647147864103317,-0.03440028056502342,-0.03232908621430397,-0.03025789186358452,-0.028186697512865067,-0.026115499436855316,-0.024044305086135864,-0.021973110735416412,-0.01990191638469696,-0.01783072203397751,-0.015759527683258057,-0.013688329607248306,-0.011617135256528854,-0.009545940905809402,-0.0074747465550899506,-0.005403552204370499,-0.0033323541283607483,-0.0012611597776412964,0.0008100345730781555,0.0028812289237976074,0.004952423274517059,0.007023617625236511,0.009094811975955963,0.011166006326675415,0.013237208127975464,0.015308402478694916,0.017379596829414368,0.01945079118013382,0.02152198553085327,0.023593179881572723,0.025664374232292175,0.027735568583011627,0.02980676293373108,0.03187795728445053,0.03394915163516998,0.03602035343647003,0.038091547787189484,0.040162742137908936,0.04223393648862839,0.04430513083934784,0.04637632519006729,0.04844751954078674,0.050518713891506195,0.05258990824222565,0.0546611025929451,0.05673230439424515,0.0588034987449646,0.060874685645103455,0.0629458874464035,0.06501707434654236,0.06708827614784241]},"gradients/classifier.weight":{"bins":[-0.09012244641780853,-0.08724749088287354,-0.08437253534793854,-0.08149757981300354,-0.07862262427806854,-0.07574766874313354,-0.07287271320819855,-0.06999775767326355,-0.06712280213832855,-0.06424784660339355,-0.06137289106845856,-0.05849793553352356,-0.05562297999858856,-0.052748024463653564,-0.04987306892871857,-0.04699811339378357,-0.04412315785884857,-0.041248202323913574,-0.03837324678897858,-0.03549829125404358,-0.03262333571910858,-0.029748380184173584,-0.026873424649238586,-0.02399846911430359,-0.02112351357936859,-0.018248558044433594,-0.015373602509498596,-0.012498646974563599,-0.009623691439628601,-0.0067487359046936035,-0.003873780369758606,-0.0009988248348236084,0.0018761307001113892,0.004751086235046387,0.007626041769981384,0.010500997304916382,0.01337595283985138,0.016250908374786377,0.019125863909721375,0.022000819444656372,0.02487577497959137,0.027750730514526367,0.030625686049461365,0.03350064158439636,0.03637559711933136,0.03925055265426636,0.042125508189201355,0.04500046372413635,0.04787541925907135,0.05075037479400635,0.053625330328941345,0.05650028586387634,0.05937524139881134,0.06225019693374634,0.06512515246868134,0.06800010800361633,0.07087506353855133,0.07375001907348633,0.07662497460842133,0.07949993014335632,0.08237488567829132,0.08524984121322632,0.08812479674816132,0.09099975228309631,0.09387470781803131],"_type":"histogram","values":[1,1,1,0,3,1,5,2,4,10,9,17,15,21,30,49,53,61,86,96,118,155,170,210,214,249,229,254,272,299,314,295,344,291,277,262,259,239,186,184,169,136,111,97,83,60,47,38,19,23,20,13,17,7,8,4,1,2,2,0,0,0,0,1]},"_step":0,"val_acc":0.23687943262411348,"train_acc":0.25812953441384673,"_runtime":814.0969541072845,"_timestamp":1.5795092246157851e+09}
-{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1],"bins":[-0.07717597484588623,-0.07544030994176865,-0.07370464503765106,-0.07196898013353348,-0.0702333152294159,-0.06849765032529831,-0.06676198542118073,-0.06502632051706314,-0.06329065561294556,-0.06155499070882797,-0.05981932580471039,-0.058083660900592804,-0.05634799599647522,-0.054612331092357635,-0.05287666618824005,-0.05114100128412247,-0.04940533638000488,-0.0476696714758873,-0.045934006571769714,-0.04419834539294243,-0.042462680488824844,-0.04072701558470726,-0.038991350680589676,-0.03725568577647209,-0.03552002087235451,-0.03378435596823692,-0.03204869106411934,-0.030313026160001755,-0.02857736125588417,-0.026841696351766586,-0.025106031447649002,-0.023370366543531418,-0.021634701639413834,-0.01989903673529625,-0.018163371831178665,-0.01642770692706108,-0.014692042022943497,-0.012956380844116211,-0.011220715939998627,-0.009485051035881042,-0.007749386131763458,-0.006013721227645874,-0.00427805632352829,-0.0025423914194107056,-0.0008067265152931213,0.0009289383888244629,0.002664603292942047,0.004400268197059631,0.006135933101177216,0.0078715980052948,0.009607262909412384,0.011342927813529968,0.013078592717647552,0.014814257621765137,0.01654992252588272,0.018285587430000305,0.02002125233411789,0.021756917238235474,0.023492582142353058,0.025228247046470642,0.026963911950588226,0.02869957685470581,0.030435241758823395,0.03217090666294098,0.03390657156705856]},"gradients/classifier.weight":{"_type":"histogram","values":[1,0,1,0,1,1,3,1,1,2,4,9,11,17,27,29,40,36,67,86,99,128,150,186,242,222,248,298,311,327,349,317,357,337,321,308,284,232,208,178,153,140,97,76,67,43,32,35,19,16,10,6,2,2,3,3,0,0,0,0,0,0,0,1],"bins":[-0.10413810610771179,-0.10082836449146271,-0.09751862287521362,-0.09420888125896454,-0.09089913964271545,-0.08758939802646637,-0.08427965641021729,-0.0809699147939682,-0.07766017317771912,-0.07435043156147003,-0.07104068994522095,-0.06773094832897186,-0.06442121416330338,-0.06111147254705429,-0.057801730930805206,-0.05449198931455612,-0.05118224769830704,-0.04787250608205795,-0.04456276446580887,-0.041253022849559784,-0.0379432812333107,-0.034633539617061615,-0.03132379800081253,-0.028014056384563446,-0.02470432221889496,-0.021394580602645874,-0.01808483898639679,-0.014775097370147705,-0.01146535575389862,-0.008155614137649536,-0.004845872521400452,-0.0015361309051513672,0.0017736107110977173,0.005083352327346802,0.008393093943595886,0.01170283555984497,0.015012577176094055,0.01832231879234314,0.021632060408592224,0.02494180202484131,0.028251543641090393,0.03156128525733948,0.03487102687358856,0.038180768489837646,0.04149051010608673,0.044800251722335815,0.0481099933385849,0.051419734954833984,0.054729461669921875,0.05803920328617096,0.061348944902420044,0.06465868651866913,0.06796842813491821,0.0712781697511673,0.07458791136741638,0.07789765298366547,0.08120739459991455,0.08451713621616364,0.08782687783241272,0.0911366194486618,0.09444636106491089,0.09775610268115997,0.10106584429740906,0.10437558591365814,0.10768532752990723]},"_step":1,"val_acc":0.25011820330969264,"train_acc":0.258383926343752,"_runtime":974.3342196941376,"_timestamp":1.5795093848530507e+09}
-{"gradients/classifier.bias":{"values":[1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.006489427760243416,-0.006147412117570639,-0.005805396940559149,-0.005463381297886372,-0.0051213656552135944,-0.004779350012540817,-0.004437334835529327,-0.00409531919285655,-0.0037533037830144167,-0.003411288373172283,-0.003069272730499506,-0.0027272573206573725,-0.002385241910815239,-0.0020432262681424618,-0.0017012106254696846,-0.0013591954484581947,-0.0010171798057854176,-0.0006751641631126404,-0.0003331489861011505,8.866656571626663e-06,0.00035088229924440384,0.0006928974762558937,0.0010349131189286709,0.001376928761601448,0.001718943938612938,0.0020609600469470024,0.0024029752239584923,0.002744990400969982,0.0030870065093040466,0.0034290216863155365,0.0037710368633270264,0.004113052971661091,0.004455068148672581,0.004797083325684071,0.005139099434018135,0.005481114611029625,0.005823129788041115,0.006165145896375179,0.006507161073386669,0.006849176250398159,0.0071911923587322235,0.007533207535743713,0.007875222712755203,0.008217238821089268,0.008559253998100758,0.008901269175112247,0.009243285283446312,0.009585300460457802,0.009927315637469292,0.010269330814480782,0.01061134785413742,0.01095336303114891,0.0112953782081604,0.01163739338517189,0.01197940856218338,0.01232142373919487,0.012663440778851509,0.013005455955862999,0.013347471132874489,0.013689486309885979,0.014031501486897469,0.014373516663908958,0.014715533703565598,0.015057548880577087,0.015399564057588577],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.07622425258159637,-0.07385586947202682,-0.07148748636245728,-0.06911909580230713,-0.06675071269273758,-0.06438232958316803,-0.06201394647359848,-0.05964556336402893,-0.05727717652916908,-0.054908789694309235,-0.052540406584739685,-0.050172023475170135,-0.047803640365600586,-0.04543525353074074,-0.04306687042117119,-0.04069848358631134,-0.03833010047674179,-0.03596171736717224,-0.03359333053231239,-0.031224947422742844,-0.028856560587882996,-0.026488177478313446,-0.024119794368743896,-0.02175140753388405,-0.0193830244243145,-0.01701464131474495,-0.014646254479885101,-0.012277871370315552,-0.009909488260746002,-0.007541105151176453,-0.005172714591026306,-0.0028043314814567566,-0.00043594837188720703,0.0019324347376823425,0.004300817847251892,0.006669208407402039,0.009037591516971588,0.011405974626541138,0.013774357736110687,0.016142740845680237,0.018511131405830383,0.020879514515399933,0.023247897624969482,0.025616280734539032,0.02798466384410858,0.03035304695367813,0.03272143751382828,0.03508982062339783,0.03745820373296738,0.039826586842536926,0.042194969952106476,0.04456336051225662,0.04693174362182617,0.049300119280815125,0.05166850984096527,0.05403690040111542,0.05640527606010437,0.05877366662025452,0.06114204227924347,0.06351043283939362,0.06587882339954376,0.06824719905853271,0.07061558961868286,0.07298396527767181,0.07535235583782196],"_type":"histogram","values":[1,2,2,4,0,3,3,1,11,7,15,14,23,25,27,43,59,66,75,106,101,128,148,168,174,206,231,240,275,266,300,299,271,298,285,266,270,214,209,214,192,142,152,94,103,94,63,48,43,36,29,22,19,17,12,8,5,3,1,6,3,1,0,1]},"_step":2,"val_acc":0.24964539007092199,"train_acc":0.2603407873430231,"_runtime":1133.4028816223145,"_timestamp":1.5795095439217126e+09}
-{"gradients/classifier.bias":{"values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.06606416404247284,-0.06390783190727234,-0.06175149977207184,-0.05959516763687134,-0.05743883550167084,-0.05528250336647034,-0.053126171231269836,-0.050969839096069336,-0.048813506960868835,-0.046657174825668335,-0.044500842690467834,-0.042344510555267334,-0.040188178420066833,-0.03803184628486633,-0.03587551414966583,-0.03371918201446533,-0.03156284987926483,-0.02940651774406433,-0.02725018560886383,-0.02509385347366333,-0.02293752133846283,-0.02078118920326233,-0.01862485706806183,-0.016468524932861328,-0.014312192797660828,-0.012155860662460327,-0.009999528527259827,-0.007843196392059326,-0.005686864256858826,-0.003530532121658325,-0.0013741999864578247,0.0007821321487426758,0.0029384642839431763,0.005094796419143677,0.007251128554344177,0.009407460689544678,0.011563792824745178,0.013720124959945679,0.01587645709514618,0.01803278923034668,0.02018912136554718,0.02234545350074768,0.02450178563594818,0.02665811777114868,0.028814449906349182,0.030970782041549683,0.03312711417675018,0.035283446311950684,0.037439778447151184,0.039596110582351685,0.041752442717552185,0.043908774852752686,0.046065106987953186,0.048221439123153687,0.05037777125835419,0.05253410339355469,0.05469043552875519,0.05684676766395569,0.05900309979915619,0.06115943193435669,0.06331576406955719,0.06547209620475769,0.06762842833995819,0.06978476047515869,0.07194109261035919],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.09906706213951111,-0.09581608325242996,-0.09256510436534882,-0.08931412547826767,-0.08606314659118652,-0.08281217515468597,-0.07956118881702423,-0.07631021738052368,-0.07305923849344254,-0.06980825960636139,-0.06655728071928024,-0.0633063018321991,-0.06005532294511795,-0.056804344058036804,-0.053553368896245956,-0.05030239000916481,-0.047051411122083664,-0.04380043223500252,-0.04054945334792137,-0.037298478186130524,-0.03404749929904938,-0.03079652041196823,-0.027545541524887085,-0.02429456263780594,-0.021043583750724792,-0.017792604863643646,-0.0145416259765625,-0.01129065454006195,-0.008039675652980804,-0.004788696765899658,-0.001537717878818512,0.0017132610082626343,0.0049642398953437805,0.008215218782424927,0.011466197669506073,0.01471717655658722,0.017968155443668365,0.02121913433074951,0.02447010576725006,0.027721092104911804,0.030972063541412354,0.0342230498790741,0.037474021315574646,0.040724992752075195,0.04397597908973694,0.04722695052623749,0.05047793686389923,0.05372890830039978,0.05697989463806152,0.06023086607456207,0.06348185241222382,0.06673282384872437,0.06998381018638611,0.07323478162288666,0.07648575305938721,0.07973673939704895,0.0829877108335495,0.08623869717121124,0.08948966860771179,0.09274065494537354,0.09599162638187408,0.09924261271953583,0.10249358415603638,0.10574457049369812,0.10899554193019867],"_type":"histogram","values":[1,0,0,0,2,2,0,4,3,6,10,11,14,22,31,43,53,58,86,101,112,160,183,225,221,275,317,314,310,329,323,356,343,312,332,263,237,192,175,162,123,83,77,78,50,43,29,27,12,11,6,5,4,3,0,0,1,0,0,1,1,0,1,1]},"_step":3,"val_acc":0.26222222222222225,"train_acc":0.2627868635921119,"_runtime":1291.7072627544403,"_timestamp":1.5795097022260938e+09}
-{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.037257447838783264,-0.035971060395240784,-0.034684669226408005,-0.033398281782865524,-0.032111890614032745,-0.030825503170490265,-0.029539113864302635,-0.028252724558115005,-0.026966335251927376,-0.025679945945739746,-0.024393556639552116,-0.023107167333364487,-0.021820779889822006,-0.020534390583634377,-0.019248001277446747,-0.017961611971259117,-0.016675222665071487,-0.015388833358883858,-0.014102444052696228,-0.012816054746508598,-0.011529665440320969,-0.010243277996778488,-0.008956888690590858,-0.007670499384403229,-0.006384110078215599,-0.005097720772027969,-0.003811333328485489,-0.00252494215965271,-0.0012385547161102295,4.783645272254944e-05,0.00133422389626503,0.002620615065097809,0.003907002508640289,0.00519338995218277,0.006479781121015549,0.007766168564558029,0.009052559733390808,0.010338947176933289,0.011625338345766068,0.012911725789308548,0.014198116958141327,0.015484504401683807,0.016770891845226288,0.018057283014059067,0.019343670457601547,0.020630061626434326,0.021916449069976807,0.023202840238809586,0.024489227682352066,0.025775618851184845,0.027062006294727325,0.028348393738269806,0.029634781181812286,0.030921176075935364,0.032207563519477844,0.033493950963020325,0.034780338406562805,0.036066725850105286,0.03735312074422836,0.038639508187770844,0.039925895631313324,0.041212283074855804,0.04249867796897888,0.04378506541252136,0.04507145285606384]},"gradients/classifier.weight":{"bins":[-0.0888357013463974,-0.08612215518951416,-0.08340860903263092,-0.08069506287574768,-0.07798151671886444,-0.0752679631114006,-0.07255441695451736,-0.06984087079763412,-0.06712732464075089,-0.06441377848386765,-0.061700232326984406,-0.05898668244481087,-0.05627313628792763,-0.05355959013104439,-0.05084604024887085,-0.04813249409198761,-0.04541894793510437,-0.04270540177822113,-0.03999185562133789,-0.03727830573916435,-0.03456475958228111,-0.03185121342539787,-0.029137663543224335,-0.026424117386341095,-0.023710571229457855,-0.020997025072574615,-0.018283478915691376,-0.015569932758808136,-0.0128563791513443,-0.01014283299446106,-0.00742928683757782,-0.00471574068069458,-0.0020021945238113403,0.0007113516330718994,0.003424897789955139,0.006138443946838379,0.008851990103721619,0.011565543711185455,0.014279089868068695,0.016992636024951935,0.019706182181835175,0.022419728338718414,0.025133274495601654,0.027846820652484894,0.03056037425994873,0.03327392041683197,0.03598746657371521,0.03870101273059845,0.04141455888748169,0.04412810504436493,0.04684165120124817,0.04955519735813141,0.05226874351501465,0.05498228967189789,0.05769583582878113,0.06040938198566437,0.0631229430437088,0.06583648920059204,0.06855003535747528,0.07126358151435852,0.07397712767124176,0.076690673828125,0.07940421998500824,0.08211776614189148,0.08483131229877472],"_type":"histogram","values":[1,0,0,0,2,0,1,0,10,6,9,13,11,18,18,29,47,58,58,70,96,103,104,181,183,180,232,264,280,262,304,320,289,307,281,323,255,289,218,224,185,155,132,132,118,76,65,59,48,22,30,26,17,9,5,3,4,2,3,3,1,2,0,1]},"_step":4,"val_acc":0.262789598108747,"train_acc":0.2653650279586515,"_runtime":1448.6882483959198,"_timestamp":1.5795098592070794e+09}
-{"val_acc": 0.6363120567375886, "train_acc": 0.5801701490638866, "_runtime": 1825.7496349811554, "_timestamp": 1579510238.3097415, "_step": 5}
-{"val_acc": 0.6672340425531915, "train_acc": 0.6266651664065672, "_runtime": 2201.1860706806183, "_timestamp": 1579510613.7461772, "_step": 6}
diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json b/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
deleted file mode 100644
index 351938b..0000000
--- a/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
+++ /dev/null
@@ -1,29 +0,0 @@
-{
-    "root": "/home/ubamba98/droughtwatch",
-    "program": "<python with no main file>",
-    "git": {
-        "remote": "https://github.com/ubamba98/droughtwatch",
-        "commit": "4e7b9b38b8d5d3ec44d43373b8e263f50ead87a3"
-    },
-    "email": "ubamba98@gmail.com",
-    "startedAt": "2020-01-20T08:44:21.248355",
-    "host": "ccw-iclr",
-    "username": "ubamba98",
-    "executable": "/home/ubamba98/anaconda3/bin/python",
-    "os": "Linux-4.9.0-11-amd64-x86_64-with-debian-9.11",
-    "python": "3.7.3",
-    "gpu": "Tesla T4",
-    "gpu_count": 1,
-    "cpu_count": 4,
-    "cuda": "10.0.130",
-    "args": [
-        "-f",
-        "/home/ubamba98/.local/share/jupyter/runtime/kernel-f86872c7-f93b-4579-ae59-db40fc8ec9c5.json"
-    ],
-    "state": "running",
-    "jobType": null,
-    "mode": "run",
-    "name": "efficentnet-b3-765",
-    "project": "droughtwatch",
-    "heartbeatAt": "2020-01-20T08:57:27.146640"
-}
diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-summary.json b/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
deleted file mode 100644
index 8c87848..0000000
--- a/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
+++ /dev/null
@@ -1 +0,0 @@
-{"graph_0": {"_type": "graph", "format": "torch", "nodes": [{"name": "conv_stem", "id": 140438557381128, "class_name": "Conv2dSame(3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False)", "parameters": [["weight", [40, 3, 3, 3]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [1080]}, {"name": "bn1", "id": 140438557383704, "class_name": "BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [40]], ["bias", [40]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [40, 40]}, {"name": "blocks.0.0", "id": 140438557382920, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)\n  (bn1): BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [40, 1, 3, 3]], ["bn1.weight", [40]], ["bn1.bias", [40]], ["se.conv_reduce.weight", [10, 40, 1, 1]], ["se.conv_reduce.bias", [10]], ["se.conv_expand.weight", [40, 10, 1, 1]], ["se.conv_expand.bias", [40]], ["conv_pw.weight", [24, 40, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [360, 40, 40, 400, 10, 400, 40, 960, 24, 24]}, {"name": "blocks.0.1", "id": 140438680665224, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)\n  (bn1): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [24, 1, 3, 3]], ["bn1.weight", [24]], ["bn1.bias", [24]], ["se.conv_reduce.weight", [6, 24, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [24, 6, 1, 1]], ["se.conv_expand.bias", [24]], ["conv_pw.weight", [24, 24, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [216, 24, 24, 144, 6, 144, 24, 576, 24, 24]}, {"name": "blocks.1.0", "id": 140438676598736, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(144, 144, kernel_size=(3, 3), stride=(2, 2), groups=144, bias=False)\n  (bn2): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [144, 24, 1, 1]], ["bn1.weight", [144]], ["bn1.bias", [144]], ["conv_dw.weight", [144, 1, 3, 3]], ["bn2.weight", [144]], ["bn2.bias", [144]], ["se.conv_reduce.weight", [6, 144, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [144, 6, 1, 1]], ["se.conv_expand.bias", [144]], ["conv_pwl.weight", [32, 144, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 4608, 32, 32]}, {"name": "blocks.1.1", "id": 140438557424160, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.1.2", "id": 140438679559640, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.2.0", "id": 140438679470320, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(192, 192, kernel_size=(5, 5), stride=(2, 2), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 5, 5]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [48, 192, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [6144, 192, 192, 4800, 192, 192, 1536, 8, 1536, 192, 9216, 48, 48]}, {"name": "blocks.2.1", "id": 140438557424384, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.2.2", "id": 140438557422704, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.3.0", "id": 140438557421920, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(288, 288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 3, 3]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [96, 288, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [13824, 288, 288, 2592, 288, 288, 3456, 12, 3456, 288, 27648, 96, 96]}, {"name": "blocks.3.1", "id": 140438557422816, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.2", "id": 140438557824392, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.3", "id": 140438557825232, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.4", "id": 140438557825176, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.4.0", "id": 140438557824672, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 5, 5]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [136, 576, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [55296, 576, 576, 14400, 576, 576, 13824, 24, 13824, 576, 78336, 136, 136]}, {"name": "blocks.4.1", "id": 140438557823496, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.2", "id": 140438679158968, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.3", "id": 140438679496744, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.4", "id": 140438679422456, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.5.0", "id": 140438679421448, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(816, 816, kernel_size=(5, 5), stride=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [232, 816, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 189312, 232, 232]}, {"name": "blocks.5.1", "id": 140438679580400, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.2", "id": 140438679115088, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.3", "id": 140438676984832, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.4", "id": 140440670709296, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.5", "id": 140440670710192, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.6.0", "id": 140440670709464, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 3, 3]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [384, 1392, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [322944, 1392, 1392, 12528, 1392, 1392, 80736, 58, 80736, 1392, 534528, 384, 384]}, {"name": "blocks.6.1", "id": 140438679947864, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(384, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)\n  (bn2): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(2304, 96, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(96, 2304, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(2304, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [2304, 384, 1, 1]], ["bn1.weight", [2304]], ["bn1.bias", [2304]], ["conv_dw.weight", [2304, 1, 3, 3]], ["bn2.weight", [2304]], ["bn2.bias", [2304]], ["se.conv_reduce.weight", [96, 2304, 1, 1]], ["se.conv_reduce.bias", [96]], ["se.conv_expand.weight", [2304, 96, 1, 1]], ["se.conv_expand.bias", [2304]], ["conv_pwl.weight", [384, 2304, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [884736, 2304, 2304, 20736, 2304, 2304, 221184, 96, 221184, 2304, 884736, 384, 384]}, {"name": "conv_head", "id": 140438557382584, "class_name": "Conv2d(384, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)", "parameters": [["weight", [1536, 384, 1, 1]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [589824]}, {"name": "bn2", "id": 140438703610848, "class_name": "BatchNorm2d(1536, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [1536]], ["bias", [1536]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [1536, 1536]}, {"name": "global_pool", "id": 140438703610792, "class_name": "SelectAdaptivePool2d (output_size=1, pool_type=avg)", "parameters": [], "output_shape": [[256, 1536, 1, 1]], "num_parameters": []}, {"name": "classifier", "id": 140438679885696, "class_name": "Linear(in_features=1536, out_features=4, bias=True)", "parameters": [["weight", [4, 1536]], ["bias", [4]]], "output_shape": [[256, 4]], "num_parameters": [6144, 4]}], "edges": []}, "train_acc": 0.2653650279586515, "_step": 4, "gradients/classifier.weight": {"bins": [-0.0888357013463974, -0.08612215518951416, -0.08340860903263092, -0.08069506287574768, -0.07798151671886444, -0.0752679631114006, -0.07255441695451736, -0.06984087079763412, -0.06712732464075089, -0.06441377848386765, -0.061700232326984406, -0.05898668244481087, -0.05627313628792763, -0.05355959013104439, -0.05084604024887085, -0.04813249409198761, -0.04541894793510437, -0.04270540177822113, -0.03999185562133789, -0.03727830573916435, -0.03456475958228111, -0.03185121342539787, -0.029137663543224335, -0.026424117386341095, -0.023710571229457855, -0.020997025072574615, -0.018283478915691376, -0.015569932758808136, -0.0128563791513443, -0.01014283299446106, -0.00742928683757782, -0.00471574068069458, -0.0020021945238113403, 0.0007113516330718994, 0.003424897789955139, 0.006138443946838379, 0.008851990103721619, 0.011565543711185455, 0.014279089868068697, 0.016992636024951935, 0.019706182181835175, 0.022419728338718414, 0.025133274495601658, 0.027846820652484897, 0.03056037425994873, 0.03327392041683197, 0.03598746657371521, 0.03870101273059845, 0.04141455888748169, 0.04412810504436493, 0.04684165120124817, 0.04955519735813141, 0.05226874351501465, 0.05498228967189789, 0.05769583582878113, 0.06040938198566437, 0.0631229430437088, 0.06583648920059204, 0.06855003535747528, 0.07126358151435852, 0.07397712767124176, 0.076690673828125, 0.07940421998500824, 0.08211776614189148, 0.08483131229877472], "_type": "histogram", "values": [1, 0, 0, 0, 2, 0, 1, 0, 10, 6, 9, 13, 11, 18, 18, 29, 47, 58, 58, 70, 96, 103, 104, 181, 183, 180, 232, 264, 280, 262, 304, 320, 289, 307, 281, 323, 255, 289, 218, 224, 185, 155, 132, 132, 118, 76, 65, 59, 48, 22, 30, 26, 17, 9, 5, 3, 4, 2, 3, 3, 1, 2, 0, 1]}, "gradients/classifier.bias": {"bins": [-0.037257447838783264, -0.035971060395240784, -0.034684669226408005, -0.033398281782865524, -0.032111890614032745, -0.030825503170490265, -0.029539113864302635, -0.028252724558115005, -0.026966335251927376, -0.025679945945739743, -0.024393556639552116, -0.023107167333364487, -0.02182077988982201, -0.020534390583634377, -0.019248001277446747, -0.017961611971259117, -0.016675222665071487, -0.015388833358883858, -0.014102444052696228, -0.012816054746508598, -0.011529665440320969, -0.010243277996778488, -0.008956888690590858, -0.007670499384403229, -0.006384110078215599, -0.005097720772027969, -0.003811333328485489, -0.00252494215965271, -0.0012385547161102295, 4.783645272254944e-05, 0.00133422389626503, 0.002620615065097809, 0.003907002508640289, 0.00519338995218277, 0.006479781121015549, 0.007766168564558029, 0.009052559733390808, 0.010338947176933289, 0.011625338345766068, 0.012911725789308548, 0.014198116958141329, 0.015484504401683807, 0.016770891845226288, 0.018057283014059067, 0.019343670457601547, 0.02063006162643433, 0.021916449069976807, 0.023202840238809586, 0.024489227682352063, 0.025775618851184845, 0.027062006294727325, 0.02834839373826981, 0.029634781181812286, 0.030921176075935364, 0.032207563519477844, 0.033493950963020325, 0.034780338406562805, 0.036066725850105286, 0.03735312074422836, 0.03863950818777085, 0.03992589563131333, 0.04121228307485581, 0.04249867796897888, 0.04378506541252136, 0.04507145285606384], "_type": "histogram", "values": [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]}, "val_acc": 0.262789598108747, "_runtime": 1448.6882483959198, "_timestamp": 1579509859.2070794}
diff --git a/wandb/run-20200120_085802-wm904utc/config.yaml b/wandb/run-20200120_085802-wm904utc/config.yaml
deleted file mode 100644
index 1189525..0000000
--- a/wandb/run-20200120_085802-wm904utc/config.yaml
+++ /dev/null
@@ -1,8 +0,0 @@
-wandb_version: 1
-
-_wandb:
-  desc: null
-  value:
-    cli_version: 0.8.21
-    is_jupyter_run: true
-    python_version: 3.7.3
diff --git a/wandb/run-20200120_085802-wm904utc/diff.patch b/wandb/run-20200120_085802-wm904utc/diff.patch
deleted file mode 100644
index 63e4de6..0000000
--- a/wandb/run-20200120_085802-wm904utc/diff.patch
+++ /dev/null
@@ -1,853 +0,0 @@
-diff --git a/Efficientnet-b3-765.ipynb b/Efficientnet-b3-765.ipynb
-index e21879d..c4a9a21 100644
---- a/Efficientnet-b3-765.ipynb
-+++ b/Efficientnet-b3-765.ipynb
-@@ -786,7 +786,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": null,
-+   "execution_count": 22,
-    "metadata": {
-     "scrolled": false
-    },
-@@ -842,7 +842,84 @@
-      "output_type": "stream",
-      "text": [
-       "\n",
--      "Calculating accuracies\n"
-+      "Calculating accuracies\n",
-+      "Train accuracy:  0.258383926343752 ;    Val accuracy:  0.25011820330969264 \n",
-+      "\n",
-+      "Starting epoch 3 / 5\n"
-+     ]
-+    },
-+    {
-+     "data": {
-+      "application/vnd.jupyter.widget-view+json": {
-+       "model_id": "ee8db6d9d3e645098855574b993436d3",
-+       "version_major": 2,
-+       "version_minor": 0
-+      },
-+      "text/plain": [
-+       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-+      ]
-+     },
-+     "metadata": {},
-+     "output_type": "display_data"
-+    },
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "\n",
-+      "Calculating accuracies\n",
-+      "Train accuracy:  0.2603407873430231 ;    Val accuracy:  0.24964539007092199 \n",
-+      "\n",
-+      "Starting epoch 4 / 5\n"
-+     ]
-+    },
-+    {
-+     "data": {
-+      "application/vnd.jupyter.widget-view+json": {
-+       "model_id": "5ba7659d72cc455e9e844b732455ff47",
-+       "version_major": 2,
-+       "version_minor": 0
-+      },
-+      "text/plain": [
-+       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-+      ]
-+     },
-+     "metadata": {},
-+     "output_type": "display_data"
-+    },
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "\n",
-+      "Calculating accuracies\n",
-+      "Train accuracy:  0.2627868635921119 ;    Val accuracy:  0.26222222222222225 \n",
-+      "\n",
-+      "Starting epoch 5 / 5\n"
-+     ]
-+    },
-+    {
-+     "data": {
-+      "application/vnd.jupyter.widget-view+json": {
-+       "model_id": "f1e1f2aec05f43f6b6fbcbb5851eaa0f",
-+       "version_major": 2,
-+       "version_minor": 0
-+      },
-+      "text/plain": [
-+       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-+      ]
-+     },
-+     "metadata": {},
-+     "output_type": "display_data"
-+    },
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "\n",
-+      "Calculating accuracies\n",
-+      "Train accuracy:  0.2653650279586515 ;    Val accuracy:  0.262789598108747 \n",
-+      "\n"
-      ]
-     }
-    ],
-@@ -881,7 +958,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": null,
-+   "execution_count": 23,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -894,7 +971,62 @@
-    "metadata": {
-     "scrolled": false
-    },
--   "outputs": [],
-+   "outputs": [
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "Starting epoch 1 / 10\n"
-+     ]
-+    },
-+    {
-+     "data": {
-+      "application/vnd.jupyter.widget-view+json": {
-+       "model_id": "41471032ce8d492088fa3f082c8f4a78",
-+       "version_major": 2,
-+       "version_minor": 0
-+      },
-+      "text/plain": [
-+       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-+      ]
-+     },
-+     "metadata": {},
-+     "output_type": "display_data"
-+    },
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "\n",
-+      "Calculating accuracies\n",
-+      "Train accuracy:  0.5801701490638866 ;    Val accuracy:  0.6363120567375886\n",
-+      "*** New optimal found, saving state ***\n",
-+      "Starting epoch 2 / 10\n"
-+     ]
-+    },
-+    {
-+     "data": {
-+      "application/vnd.jupyter.widget-view+json": {
-+       "model_id": "8f09c911a2724da1b33add2597dadf3c",
-+       "version_major": 2,
-+       "version_minor": 0
-+      },
-+      "text/plain": [
-+       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-+      ]
-+     },
-+     "metadata": {},
-+     "output_type": "display_data"
-+    },
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "\n",
-+      "Calculating accuracies\n"
-+     ]
-+    }
-+   ],
-    "source": [
-     "# # Now we want to finetune the entire model for a few epochs. To do thise we\n",
-     "# # will need to compute gradients with respect to all model parameters, so\n",
-diff --git a/wandb/run-20200120_081855-gzutdaae/diff.patch b/wandb/run-20200120_081855-gzutdaae/diff.patch
-index c6015c1..1aee41d 100644
---- a/wandb/run-20200120_081855-gzutdaae/diff.patch
-+++ b/wandb/run-20200120_081855-gzutdaae/diff.patch
-@@ -1,201 +1,370 @@
- diff --git a/Efficientnet-b3-765.ipynb b/Efficientnet-b3-765.ipynb
--index 691c745..9cf4f55 100644
-+index e21879d..451f688 100644
- --- a/Efficientnet-b3-765.ipynb
- +++ b/Efficientnet-b3-765.ipynb
--@@ -47,7 +47,7 @@
--        "\n",
--        "                Logging results to <a href=\"https://wandb.com\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
--        "                Project page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch</a><br/>\n",
---       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm</a><br/>\n",
--+       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae</a><br/>\n",
--        "            "
--       ],
--       "text/plain": [
--@@ -67,7 +67,7 @@
--     {
--      "data": {
--       "text/plain": [
---       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm"
--+       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae"
--       ]
--      },
--      "execution_count": 2,
--@@ -77,7 +77,16 @@
--    ],
--    "source": [
--     "import wandb\n",
---    "wandb.init(project=\"droughtwatch\")"
--+    "wandb.init(project='droughtwatch', name='efficentnet-b3-765')"
--+   ]
--+  },
--+  {
--+   "cell_type": "code",
--+   "execution_count": 3,
--+   "metadata": {},
--+   "outputs": [],
--+   "source": [
--+    "os.environ['WANDB_NOTEBOOK_NAME'] = \"efficentnet-b3-765\""
--    ]
--   },
--   {
--@@ -89,7 +98,7 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 3,
--+   "execution_count": 4,
--    "metadata": {},
--    "outputs": [],
--    "source": [
--@@ -112,7 +121,7 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 4,
--+   "execution_count": 5,
--    "metadata": {},
--    "outputs": [],
--    "source": [
--@@ -147,7 +156,7 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 5,
--+   "execution_count": 6,
--    "metadata": {},
--    "outputs": [],
--    "source": [
--@@ -188,7 +197,7 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 6,
--+   "execution_count": 7,
--    "metadata": {},
--    "outputs": [],
--    "source": [
--@@ -226,7 +235,7 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 7,
--+   "execution_count": 8,
--    "metadata": {},
--    "outputs": [],
--    "source": [
--@@ -244,7 +253,7 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 8,
--+   "execution_count": 9,
--    "metadata": {},
--    "outputs": [
--     {
--@@ -584,7 +593,7 @@
--        ")"
--       ]
--      },
---     "execution_count": 8,
--+     "execution_count": 9,
--      "metadata": {},
--      "output_type": "execute_result"
--     }
--@@ -597,16 +606,16 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 9,
--+   "execution_count": 10,
--    "metadata": {},
--    "outputs": [
--     {
--      "data": {
--       "text/plain": [
---       "[<wandb.wandb_torch.TorchGraph at 0x7f4ae970e6d8>]"
--+       "[<wandb.wandb_torch.TorchGraph at 0x7fba6796b390>]"
--       ]
--      },
---     "execution_count": 9,
--+     "execution_count": 10,
--      "metadata": {},
--      "output_type": "execute_result"
--     }
--@@ -624,7 +633,7 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 10,
--+   "execution_count": 11,
--    "metadata": {},
--    "outputs": [],
--    "source": [
--@@ -651,57 +660,20 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 11,
---   "metadata": {},
---   "outputs": [],
---   "source": [
---    "class ImageDataset(Dataset):\n",
---    "        \n",
---    "    def __init__(self, transform=None, limit=None, mode = \"train\", train_dir=\"train\", val_dir=\"val\", weights = [1, 1, 1, 1]):\n",
---    "        \n",
---    "        self.transform = transform\n",
---    "        self.limit = limit\n",
---    "        self.mode = mode\n",
---    "        self.train_dir = train_dir\n",
---    "        self.val_dir = val_dir\n",
---    "        self.train_files=[]\n",
---    "        for i in range(4):\n",
---    "            self.train_files += glob.glob(self.train_dir+\"/*\"+str(i)+\"/*\") * weights[i]\n",
---    "        self.val_files=glob.glob(self.val_dir+\"/*/*\")\n",
---    "        self.train_sample_count = len(self.train_files)\n",
---    "        self.val_sample_count = len(self.val_files)\n",
---    "        \n",
---    "    def __len__(self):\n",
---    "        if self.mode == \"train\":\n",
---    "            return (self.train_sample_count)\n",
---    "        else:\n",
---    "            return(self.val_sample_count)\n",
---    "\n",
---    "    def __getitem__(self, idx): \n",
---    "        if self.mode == \"train\":\n",
---    "            return (self.get_img(self.train_files[idx]), int(self.train_files[idx].split('/')[-2].split(\"_\")[-1]))\n",
---    "        if self.mode == \"val\":\n",
---    "            return (self.get_img(self.val_files[idx]), int(self.val_files[idx].split('/')[-2].split(\"_\")[-1]))\n",
---    "        \n",
---    "    def get_img(self, img_dir):\n",
---    "        img = np.load(img_dir)\n",
---    "        #img = img.transpose((1, 2, 0))\n",
---    "        img = img[:, :, [6, 5, 4]] ## Select for channels to run\n",
---    "        img = self.transform(img)\n",
---    "        img = torch.from_numpy(np.moveaxis(img, -1, 0)).float()  \n",
---    "        return img"
---   ]
---  },
---  {
---   "cell_type": "code",
---   "execution_count": 12,
--+   "execution_count": 14,
--    "metadata": {},
--    "outputs": [
--     {
---     "name": "stdout",
---     "output_type": "stream",
---     "text": [
---      "{'train': 799, 'val': 331}\n"
--+     "ename": "ValueError",
--+     "evalue": "num_samples should be a positive integer value, but got num_samples=0",
--+     "output_type": "error",
--+     "traceback": [
--+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
--+      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
--+      "\u001b[0;32m<ipython-input-14-06a69a7d0d7b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      5\u001b[0m                 \u001b[0mshuffle\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m                 \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m256\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m                 \u001b[0mnum_workers\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m             )\n\u001b[1;32m      9\u001b[0m valid_loader = DataLoader(\n",
--+      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/torch/utils/data/dataloader.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, dataset, batch_size, shuffle, sampler, batch_sampler, num_workers, collate_fn, pin_memory, drop_last, timeout, worker_init_fn, multiprocessing_context)\u001b[0m\n\u001b[1;32m    211\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# map-style\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    212\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mshuffle\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 213\u001b[0;31m                     \u001b[0msampler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mRandomSampler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    214\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    215\u001b[0m                     \u001b[0msampler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSequentialSampler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
--+      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/torch/utils/data/sampler.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data_source, replacement, num_samples)\u001b[0m\n\u001b[1;32m     92\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnum_samples\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnum_samples\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     93\u001b[0m             raise ValueError(\"num_samples should be a positive integer \"\n\u001b[0;32m---> 94\u001b[0;31m                              \"value, but got num_samples={}\".format(self.num_samples))\n\u001b[0m\u001b[1;32m     95\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     96\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
--+      "\u001b[0;31mValueError\u001b[0m: num_samples should be a positive integer value, but got num_samples=0"
-+@@ -842,8 +842,75 @@
-+      "output_type": "stream",
-+      "text": [
-+       "\n",
-+-      "Calculating accuracies\n"
-++      "Calculating accuracies\n",
-++      "Train accuracy:  0.258383926343752 ;    Val accuracy:  0.25011820330969264 \n",
-++      "\n",
-++      "Starting epoch 3 / 5\n"
-++     ]
-++    },
-++    {
-++     "data": {
-++      "application/vnd.jupyter.widget-view+json": {
-++       "model_id": "ee8db6d9d3e645098855574b993436d3",
-++       "version_major": 2,
-++       "version_minor": 0
-++      },
-++      "text/plain": [
-++       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-++      ]
-++     },
-++     "metadata": {},
-++     "output_type": "display_data"
-++    },
-++    {
-++     "name": "stdout",
-++     "output_type": "stream",
-++     "text": [
-++      "\n",
-++      "Calculating accuracies\n",
-++      "Train accuracy:  0.2603407873430231 ;    Val accuracy:  0.24964539007092199 \n",
-++      "\n",
-++      "Starting epoch 4 / 5\n"
-       ]
-++    },
-++    {
-++     "data": {
-++      "application/vnd.jupyter.widget-view+json": {
-++       "model_id": "5ba7659d72cc455e9e844b732455ff47",
-++       "version_major": 2,
-++       "version_minor": 0
-++      },
-++      "text/plain": [
-++       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-++      ]
-++     },
-++     "metadata": {},
-++     "output_type": "display_data"
-++    },
-++    {
-++     "name": "stdout",
-++     "output_type": "stream",
-++     "text": [
-++      "\n",
-++      "Calculating accuracies\n",
-++      "Train accuracy:  0.2627868635921119 ;    Val accuracy:  0.26222222222222225 \n",
-++      "\n",
-++      "Starting epoch 5 / 5\n"
-++     ]
-++    },
-++    {
-++     "data": {
-++      "application/vnd.jupyter.widget-view+json": {
-++       "model_id": "f1e1f2aec05f43f6b6fbcbb5851eaa0f",
-++       "version_major": 2,
-++       "version_minor": 0
-++      },
-++      "text/plain": [
-++       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-++      ]
-++     },
-++     "metadata": {},
-++     "output_type": "display_data"
-      }
-     ],
-+    "source": [
-+diff --git a/wandb/run-20200120_081855-gzutdaae/diff.patch b/wandb/run-20200120_081855-gzutdaae/diff.patch
-+index c6015c1..e69de29 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/diff.patch
-++++ b/wandb/run-20200120_081855-gzutdaae/diff.patch
-+@@ -1,201 +0,0 @@
-+-diff --git a/Efficientnet-b3-765.ipynb b/Efficientnet-b3-765.ipynb
-+-index 691c745..9cf4f55 100644
-+---- a/Efficientnet-b3-765.ipynb
-+-+++ b/Efficientnet-b3-765.ipynb
-+-@@ -47,7 +47,7 @@
-+-        "\n",
-+-        "                Logging results to <a href=\"https://wandb.com\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-+-        "                Project page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch</a><br/>\n",
-+--       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm</a><br/>\n",
-+-+       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae</a><br/>\n",
-+-        "            "
-+-       ],
-+-       "text/plain": [
-+-@@ -67,7 +67,7 @@
-+-     {
-+-      "data": {
-+-       "text/plain": [
-+--       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm"
-+-+       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae"
-+-       ]
-+-      },
-+-      "execution_count": 2,
-+-@@ -77,7 +77,16 @@
-+-    ],
-+-    "source": [
-+-     "import wandb\n",
-+--    "wandb.init(project=\"droughtwatch\")"
-+-+    "wandb.init(project='droughtwatch', name='efficentnet-b3-765')"
-+-+   ]
-+-+  },
-+-+  {
-+-+   "cell_type": "code",
-+-+   "execution_count": 3,
-+-+   "metadata": {},
-+-+   "outputs": [],
-+-+   "source": [
-+-+    "os.environ['WANDB_NOTEBOOK_NAME'] = \"efficentnet-b3-765\""
-+-    ]
-+-   },
-+-   {
-+-@@ -89,7 +98,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 3,
-+-+   "execution_count": 4,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -112,7 +121,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 4,
-+-+   "execution_count": 5,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -147,7 +156,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 5,
-+-+   "execution_count": 6,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -188,7 +197,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 6,
-+-+   "execution_count": 7,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -226,7 +235,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 7,
-+-+   "execution_count": 8,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -244,7 +253,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 8,
-+-+   "execution_count": 9,
-+-    "metadata": {},
-+-    "outputs": [
-+-     {
-+-@@ -584,7 +593,7 @@
-+-        ")"
-+-       ]
-+-      },
-+--     "execution_count": 8,
-+-+     "execution_count": 9,
-+-      "metadata": {},
-+-      "output_type": "execute_result"
-+-     }
-+-@@ -597,16 +606,16 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 9,
-+-+   "execution_count": 10,
-+-    "metadata": {},
-+-    "outputs": [
-+-     {
-+-      "data": {
-+-       "text/plain": [
-+--       "[<wandb.wandb_torch.TorchGraph at 0x7f4ae970e6d8>]"
-+-+       "[<wandb.wandb_torch.TorchGraph at 0x7fba6796b390>]"
-+-       ]
-+-      },
-+--     "execution_count": 9,
-+-+     "execution_count": 10,
-+-      "metadata": {},
-+-      "output_type": "execute_result"
-+-     }
-+-@@ -624,7 +633,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 10,
-+-+   "execution_count": 11,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -651,57 +660,20 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 11,
-+--   "metadata": {},
-+--   "outputs": [],
-+--   "source": [
-+--    "class ImageDataset(Dataset):\n",
-+--    "        \n",
-+--    "    def __init__(self, transform=None, limit=None, mode = \"train\", train_dir=\"train\", val_dir=\"val\", weights = [1, 1, 1, 1]):\n",
-+--    "        \n",
-+--    "        self.transform = transform\n",
-+--    "        self.limit = limit\n",
-+--    "        self.mode = mode\n",
-+--    "        self.train_dir = train_dir\n",
-+--    "        self.val_dir = val_dir\n",
-+--    "        self.train_files=[]\n",
-+--    "        for i in range(4):\n",
-+--    "            self.train_files += glob.glob(self.train_dir+\"/*\"+str(i)+\"/*\") * weights[i]\n",
-+--    "        self.val_files=glob.glob(self.val_dir+\"/*/*\")\n",
-+--    "        self.train_sample_count = len(self.train_files)\n",
-+--    "        self.val_sample_count = len(self.val_files)\n",
-+--    "        \n",
-+--    "    def __len__(self):\n",
-+--    "        if self.mode == \"train\":\n",
-+--    "            return (self.train_sample_count)\n",
-+--    "        else:\n",
-+--    "            return(self.val_sample_count)\n",
-+--    "\n",
-+--    "    def __getitem__(self, idx): \n",
-+--    "        if self.mode == \"train\":\n",
-+--    "            return (self.get_img(self.train_files[idx]), int(self.train_files[idx].split('/')[-2].split(\"_\")[-1]))\n",
-+--    "        if self.mode == \"val\":\n",
-+--    "            return (self.get_img(self.val_files[idx]), int(self.val_files[idx].split('/')[-2].split(\"_\")[-1]))\n",
-+--    "        \n",
-+--    "    def get_img(self, img_dir):\n",
-+--    "        img = np.load(img_dir)\n",
-+--    "        #img = img.transpose((1, 2, 0))\n",
-+--    "        img = img[:, :, [6, 5, 4]] ## Select for channels to run\n",
-+--    "        img = self.transform(img)\n",
-+--    "        img = torch.from_numpy(np.moveaxis(img, -1, 0)).float()  \n",
-+--    "        return img"
-+--   ]
-+--  },
-+--  {
-+--   "cell_type": "code",
-+--   "execution_count": 12,
-+-+   "execution_count": 14,
-+-    "metadata": {},
-+-    "outputs": [
-+-     {
-+--     "name": "stdout",
-+--     "output_type": "stream",
-+--     "text": [
-+--      "{'train': 799, 'val': 331}\n"
-+-+     "ename": "ValueError",
-+-+     "evalue": "num_samples should be a positive integer value, but got num_samples=0",
-+-+     "output_type": "error",
-+-+     "traceback": [
-+-+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
-+-+      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
-+-+      "\u001b[0;32m<ipython-input-14-06a69a7d0d7b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      5\u001b[0m                 \u001b[0mshuffle\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m                 \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m256\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m                 \u001b[0mnum_workers\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m             )\n\u001b[1;32m      9\u001b[0m valid_loader = DataLoader(\n",
-+-+      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/torch/utils/data/dataloader.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, dataset, batch_size, shuffle, sampler, batch_sampler, num_workers, collate_fn, pin_memory, drop_last, timeout, worker_init_fn, multiprocessing_context)\u001b[0m\n\u001b[1;32m    211\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# map-style\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    212\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mshuffle\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 213\u001b[0;31m                     \u001b[0msampler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mRandomSampler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    214\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    215\u001b[0m                     \u001b[0msampler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSequentialSampler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
-+-+      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/torch/utils/data/sampler.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data_source, replacement, num_samples)\u001b[0m\n\u001b[1;32m     92\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnum_samples\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnum_samples\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     93\u001b[0m             raise ValueError(\"num_samples should be a positive integer \"\n\u001b[0;32m---> 94\u001b[0;31m                              \"value, but got num_samples={}\".format(self.num_samples))\n\u001b[0m\u001b[1;32m     95\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     96\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
-+-+      "\u001b[0;31mValueError\u001b[0m: num_samples should be a positive integer value, but got num_samples=0"
-+-      ]
-+-     }
-+-    ],
-+diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-+index bebeecd..fbd17e8 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-++++ b/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-+@@ -1,26 +1,10 @@
-+-{"system.network.sent":15797,"system.gpu.0.powerPercent":41.9,"system.network.recv":65303,"system.disk":22.4,"system.gpu.0.powerWatts":29.33,"_wandb":true,"system.gpu.0.temp":61,"system.gpu.0.memory":0,"system.gpu.0.gpu":0,"_runtime":1,"system.proc.memory.rssMB":262.66,"system.proc.memory.availableMB":14300.84,"system.cpu":13.75,"system.proc.cpu.threads":17,"system.memory":4.9,"system.proc.memory.percent":1.75,"system.gpu.0.memoryAllocated":0,"_timestamp":1579508336}
-+-{"system.gpu.0.gpu": 10.2, "system.gpu.0.memory": 7.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 68.0, "system.gpu.0.powerWatts": 37.18, "system.gpu.0.powerPercent": 53.11, "system.cpu": 6.9, "system.memory": 22.68, "system.disk": 22.4, "system.proc.memory.availableMB": 11632.24, "system.proc.memory.rssMB": 2960.92, "system.proc.memory.percent": 19.68, "system.proc.cpu.threads": 27.87, "system.network.sent": 244468, "system.network.recv": 251940, "_wandb": true, "_timestamp": 1579508635, "_runtime": 42}
-+-{"system.gpu.0.gpu": 5.47, "system.gpu.0.memory": 4.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 69.93, "system.gpu.0.powerWatts": 38.27, "system.gpu.0.powerPercent": 54.67, "system.cpu": 6.63, "system.memory": 22.78, "system.disk": 22.4, "system.proc.memory.availableMB": 11615.58, "system.proc.memory.rssMB": 2961.46, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 339293, "system.network.recv": 337753, "_wandb": true, "_timestamp": 1579508665, "_runtime": 73}
-+-{"system.gpu.0.gpu": 8.87, "system.gpu.0.memory": 6.47, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 72.07, "system.gpu.0.powerWatts": 40.58, "system.gpu.0.powerPercent": 57.97, "system.cpu": 7.19, "system.memory": 22.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11605.85, "system.proc.memory.rssMB": 2961.46, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 431682, "system.network.recv": 429114, "_wandb": true, "_timestamp": 1579508695, "_runtime": 103}
-+-{"system.gpu.0.gpu": 8.67, "system.gpu.0.memory": 5.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 73.27, "system.gpu.0.powerWatts": 36.56, "system.gpu.0.powerPercent": 52.23, "system.cpu": 7.94, "system.memory": 22.88, "system.disk": 22.4, "system.proc.memory.availableMB": 11602.32, "system.proc.memory.rssMB": 2961.81, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 534529, "system.network.recv": 530758, "_wandb": true, "_timestamp": 1579508725, "_runtime": 133}
-+-{"system.gpu.0.gpu": 8.87, "system.gpu.0.memory": 5.8, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 74.93, "system.gpu.0.powerWatts": 43.21, "system.gpu.0.powerPercent": 61.73, "system.cpu": 8.45, "system.memory": 22.98, "system.disk": 22.4, "system.proc.memory.availableMB": 11587.51, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 635626, "system.network.recv": 634655, "_wandb": true, "_timestamp": 1579508756, "_runtime": 163}
-+-{"system.gpu.0.gpu": 9.87, "system.gpu.0.memory": 7.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 42.67, "system.gpu.0.powerPercent": 60.96, "system.cpu": 8.79, "system.memory": 23.02, "system.disk": 22.4, "system.proc.memory.availableMB": 11581.47, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 748987, "system.network.recv": 747904, "_wandb": true, "_timestamp": 1579508786, "_runtime": 193}
-+-{"system.gpu.0.gpu": 11.87, "system.gpu.0.memory": 8.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.67, "system.gpu.0.powerWatts": 44.82, "system.gpu.0.powerPercent": 64.03, "system.cpu": 9.73, "system.memory": 23.07, "system.disk": 22.4, "system.proc.memory.availableMB": 11575.17, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 873256, "system.network.recv": 874007, "_wandb": true, "_timestamp": 1579508816, "_runtime": 223}
-+-{"system.gpu.0.gpu": 11.0, "system.gpu.0.memory": 8.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.27, "system.gpu.0.powerWatts": 38.19, "system.gpu.0.powerPercent": 54.55, "system.cpu": 10.57, "system.memory": 23.05, "system.disk": 22.4, "system.proc.memory.availableMB": 11572.48, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1023164, "system.network.recv": 1026940, "_wandb": true, "_timestamp": 1579508846, "_runtime": 253}
-+-{"system.gpu.0.gpu": 14.2, "system.gpu.0.memory": 10.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.27, "system.gpu.0.powerWatts": 42.89, "system.gpu.0.powerPercent": 61.28, "system.cpu": 11.98, "system.memory": 23.15, "system.disk": 22.4, "system.proc.memory.availableMB": 11561.87, "system.proc.memory.rssMB": 2962.21, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1178866, "system.network.recv": 1181511, "_wandb": true, "_timestamp": 1579508876, "_runtime": 283}
-+-{"system.gpu.0.gpu": 13.0, "system.gpu.0.memory": 10.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 78.0, "system.gpu.0.powerWatts": 50.01, "system.gpu.0.powerPercent": 71.45, "system.cpu": 13.59, "system.memory": 23.22, "system.disk": 22.4, "system.proc.memory.availableMB": 11553.44, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1331123, "system.network.recv": 1336366, "_wandb": true, "_timestamp": 1579508906, "_runtime": 314}
-+-{"system.gpu.0.gpu": 25.13, "system.gpu.0.memory": 21.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.33, "system.gpu.0.powerWatts": 45.73, "system.gpu.0.powerPercent": 65.33, "system.cpu": 15.11, "system.memory": 23.2, "system.disk": 22.4, "system.proc.memory.availableMB": 11550.57, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1518597, "system.network.recv": 1523627, "_wandb": true, "_timestamp": 1579508936, "_runtime": 344}
-+-{"system.gpu.0.gpu": 19.67, "system.gpu.0.memory": 16.87, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.53, "system.gpu.0.powerWatts": 49.57, "system.gpu.0.powerPercent": 70.82, "system.cpu": 17.23, "system.memory": 23.21, "system.disk": 22.4, "system.proc.memory.availableMB": 11547.93, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1702121, "system.network.recv": 1710364, "_wandb": true, "_timestamp": 1579508966, "_runtime": 374}
-+-{"system.gpu.0.gpu": 18.4, "system.gpu.0.memory": 15.73, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.2, "system.gpu.0.powerWatts": 51.24, "system.gpu.0.powerPercent": 73.2, "system.cpu": 18.21, "system.memory": 23.35, "system.disk": 22.4, "system.proc.memory.availableMB": 11531.67, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1856007, "system.network.recv": 1863572, "_wandb": true, "_timestamp": 1579508997, "_runtime": 404}
-+-{"system.gpu.0.gpu": 18.8, "system.gpu.0.memory": 16.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.47, "system.gpu.0.powerWatts": 49.62, "system.gpu.0.powerPercent": 70.89, "system.cpu": 19.99, "system.memory": 23.32, "system.disk": 22.4, "system.proc.memory.availableMB": 11535.11, "system.proc.memory.rssMB": 2962.48, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2016161, "system.network.recv": 2023461, "_wandb": true, "_timestamp": 1579509027, "_runtime": 434}
-+-{"system.gpu.0.gpu": 21.0, "system.gpu.0.memory": 18.07, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.13, "system.gpu.0.powerWatts": 50.49, "system.gpu.0.powerPercent": 72.13, "system.cpu": 20.69, "system.memory": 23.18, "system.disk": 22.4, "system.proc.memory.availableMB": 11552.24, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2245090, "system.network.recv": 2255638, "_wandb": true, "_timestamp": 1579509057, "_runtime": 464}
-+-{"system.gpu.0.gpu": 17.07, "system.gpu.0.memory": 14.13, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.13, "system.gpu.0.powerWatts": 51.83, "system.gpu.0.powerPercent": 74.04, "system.cpu": 21.11, "system.memory": 23.25, "system.disk": 22.4, "system.proc.memory.availableMB": 11542.37, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2746309, "system.network.recv": 2487509, "_wandb": true, "_timestamp": 1579509087, "_runtime": 494}
-+-{"system.gpu.0.gpu": 66.47, "system.gpu.0.memory": 44.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 78.4, "system.gpu.0.powerWatts": 64.54, "system.gpu.0.powerPercent": 92.21, "system.cpu": 78.97, "system.memory": 23.2, "system.disk": 22.4, "system.proc.memory.availableMB": 11552.42, "system.proc.memory.rssMB": 2957.19, "system.proc.memory.percent": 19.66, "system.proc.cpu.threads": 27.2, "system.network.sent": 3696180, "system.network.recv": 2568386, "_wandb": true, "_timestamp": 1579509117, "_runtime": 525}
-+-{"system.gpu.0.gpu": 82.13, "system.gpu.0.memory": 53.73, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.33, "system.gpu.0.powerWatts": 67.07, "system.gpu.0.powerPercent": 95.82, "system.cpu": 99.89, "system.memory": 23.25, "system.disk": 22.4, "system.proc.memory.availableMB": 11541.6, "system.proc.memory.rssMB": 2956.42, "system.proc.memory.percent": 19.65, "system.proc.cpu.threads": 27.0, "system.network.sent": 3700982, "system.network.recv": 2571448, "_wandb": true, "_timestamp": 1579509147, "_runtime": 555}
-+-{"system.gpu.0.gpu": 78.07, "system.gpu.0.memory": 50.87, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.0, "system.gpu.0.powerWatts": 62.66, "system.gpu.0.powerPercent": 89.52, "system.cpu": 93.01, "system.memory": 23.62, "system.disk": 22.4, "system.proc.memory.availableMB": 11490.1, "system.proc.memory.rssMB": 2955.65, "system.proc.memory.percent": 19.65, "system.proc.cpu.threads": 27.0, "system.network.sent": 3709404, "system.network.recv": 2574045, "_wandb": true, "_timestamp": 1579509178, "_runtime": 585}
-+-{"system.gpu.0.gpu": 15.07, "system.gpu.0.memory": 3.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 71.73, "system.gpu.0.powerWatts": 34.48, "system.gpu.0.powerPercent": 49.26, "system.cpu": 25.27, "system.memory": 22.4, "system.disk": 22.4, "system.proc.memory.availableMB": 11676.86, "system.proc.memory.rssMB": 2950.69, "system.proc.memory.percent": 19.61, "system.proc.cpu.threads": 27.0, "system.network.sent": 3721790, "system.network.recv": 2631378, "_wandb": true, "_timestamp": 1579509208, "_runtime": 615}
-+-{"system.gpu.0.gpu": 45.27, "system.gpu.0.memory": 29.07, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 74.07, "system.gpu.0.powerWatts": 48.68, "system.gpu.0.powerPercent": 69.55, "system.cpu": 61.3, "system.memory": 22.83, "system.disk": 22.4, "system.proc.memory.availableMB": 11611.68, "system.proc.memory.rssMB": 2958.09, "system.proc.memory.percent": 19.66, "system.proc.cpu.threads": 27.47, "system.network.sent": 4312731, "system.network.recv": 3024984, "_wandb": true, "_timestamp": 1579509238, "_runtime": 645}
-+-{"system.gpu.0.gpu": 85.27, "system.gpu.0.memory": 64.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 80.4, "system.gpu.0.powerWatts": 69.5, "system.gpu.0.powerPercent": 99.29, "system.cpu": 98.87, "system.memory": 23.4, "system.disk": 22.4, "system.proc.memory.availableMB": 11523.09, "system.proc.memory.rssMB": 2965.59, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 28.0, "system.network.sent": 5355584, "system.network.recv": 3684826, "_wandb": true, "_timestamp": 1579509268, "_runtime": 675}
-+-{"system.gpu.0.gpu": 82.67, "system.gpu.0.memory": 63.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.13, "system.gpu.0.powerWatts": 68.41, "system.gpu.0.powerPercent": 97.73, "system.cpu": 97.43, "system.memory": 23.36, "system.disk": 22.4, "system.proc.memory.availableMB": 11527.65, "system.proc.memory.rssMB": 2966.13, "system.proc.memory.percent": 19.72, "system.proc.cpu.threads": 27.93, "system.network.sent": 6262772, "system.network.recv": 4284351, "_wandb": true, "_timestamp": 1579509298, "_runtime": 706}
-+-{"system.gpu.0.gpu": 84.6, "system.gpu.0.memory": 55.33, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.4, "system.gpu.0.powerWatts": 66.84, "system.gpu.0.powerPercent": 95.48, "system.cpu": 99.88, "system.memory": 23.27, "system.disk": 22.4, "system.proc.memory.availableMB": 11542.26, "system.proc.memory.rssMB": 2958.56, "system.proc.memory.percent": 19.67, "system.proc.cpu.threads": 27.0, "system.network.sent": 6275456, "system.network.recv": 4336424, "_wandb": true, "_timestamp": 1579509329, "_runtime": 736}
-+-{"system.gpu.0.gpu": 84.4, "system.gpu.0.memory": 55.13, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.73, "system.gpu.0.powerWatts": 73.68, "system.gpu.0.powerPercent": 105.26, "system.cpu": 99.89, "system.memory": 23.29, "system.disk": 22.4, "system.proc.memory.availableMB": 11538.26, "system.proc.memory.rssMB": 2958.56, "system.proc.memory.percent": 19.67, "system.proc.cpu.threads": 27.0, "system.network.sent": 6279094, "system.network.recv": 4342260, "_wandb": true, "_timestamp": 1579509359, "_runtime": 766}
-++{"system.network.sent":10977141,"system.gpu.0.powerPercent":96.79,"system.network.recv":7409894,"system.disk":22.4,"system.gpu.0.powerWatts":67.75,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":65.33,"system.gpu.0.gpu":85.6,"_runtime":1008,"system.proc.memory.rssMB":2966.29,"system.proc.memory.availableMB":11506.94,"system.cpu":98.25,"system.proc.cpu.threads":28,"system.memory":23.5,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509601}
-++{"system.network.sent":11502749,"system.gpu.0.powerPercent":97.46,"system.network.recv":7764756,"system.disk":22.4,"system.gpu.0.powerWatts":68.23,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":60.73,"system.gpu.0.gpu":85.87,"_runtime":1039,"system.proc.memory.rssMB":2962.16,"system.proc.memory.availableMB":11528.19,"system.cpu":97.55,"system.proc.cpu.threads":27.47,"system.memory":23.37,"system.proc.memory.percent":19.69,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509631}
-++{"system.network.sent":11508976,"system.gpu.0.powerPercent":102.06,"system.network.recv":7771440,"system.disk":22.4,"system.gpu.0.powerWatts":71.44,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.53,"system.gpu.0.gpu":85.6,"_runtime":1069,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11533.16,"system.cpu":99.91,"system.proc.cpu.threads":27,"system.memory":23.34,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509662}
-++{"system.network.sent":11522899,"system.gpu.0.powerPercent":93.89,"system.network.recv":7774171,"system.disk":22.4,"system.gpu.0.powerWatts":65.73,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.8,"_runtime":1099,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11449.37,"system.cpu":99.9,"system.proc.cpu.threads":27,"system.memory":23.89,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509692}
-++{"system.network.sent":12355982,"system.gpu.0.powerPercent":99.47,"system.network.recv":8325343,"system.disk":22.4,"system.gpu.0.powerWatts":69.63,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":53.6,"system.gpu.0.gpu":80.47,"_runtime":1129,"system.proc.memory.rssMB":2962.93,"system.proc.memory.availableMB":11549.31,"system.cpu":91.64,"system.proc.cpu.threads":27.73,"system.memory":23.23,"system.proc.memory.percent":19.7,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509722}
-++{"system.network.sent":13392411,"system.gpu.0.powerPercent":96.5,"system.network.recv":9022410,"system.disk":22.4,"system.gpu.0.powerWatts":67.55,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":66.2,"system.gpu.0.gpu":86.73,"_runtime":1160,"system.proc.memory.rssMB":2966.31,"system.proc.memory.availableMB":11507.02,"system.cpu":96.58,"system.proc.cpu.threads":28,"system.memory":23.51,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509752}
-++{"system.network.sent":14052060,"system.gpu.0.powerPercent":93.62,"system.network.recv":9455229,"system.disk":22.4,"system.gpu.0.powerWatts":65.53,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":62.4,"system.gpu.0.gpu":86.33,"_runtime":1190,"system.proc.memory.rssMB":2964.4,"system.proc.memory.availableMB":11520.81,"system.cpu":96.15,"system.proc.cpu.threads":27.67,"system.memory":23.41,"system.proc.memory.percent":19.71,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509783}
-++{"system.network.sent":14116134,"system.gpu.0.powerPercent":97.24,"system.network.recv":9471018,"system.disk":22.4,"system.gpu.0.powerWatts":68.07,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.13,"_runtime":1220,"system.proc.memory.rssMB":2959.24,"system.proc.memory.availableMB":11527.75,"system.cpu":99.85,"system.proc.cpu.threads":27,"system.memory":23.39,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509813}
-++{"system.network.sent":14129520,"system.gpu.0.powerPercent":102.88,"system.network.recv":9474423,"system.disk":22.4,"system.gpu.0.powerWatts":72.02,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":56.33,"system.gpu.0.gpu":86.27,"_runtime":1250,"system.proc.memory.rssMB":2958.7,"system.proc.memory.availableMB":11472.54,"system.cpu":99.87,"system.proc.cpu.threads":27,"system.memory":23.75,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509843}
-++{"system.network.sent":14134644,"system.gpu.0.powerPercent":87.89,"system.network.recv":9477692,"system.disk":22.4,"system.gpu.0.powerWatts":61.52,"_wandb":true,"system.gpu.0.temp":76.75,"system.gpu.0.memory":39.12,"system.gpu.0.gpu":73.5,"_runtime":1267,"system.proc.memory.rssMB":2956.05,"system.proc.memory.availableMB":11567.16,"system.cpu":86.28,"system.proc.cpu.threads":26.38,"system.memory":23.1,"system.proc.memory.percent":19.65,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509859}
-+diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-+index 6941a0a..e946e56 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-++++ b/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-+@@ -1 +1,5 @@
-+-{"gradients/classifier.bias": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.0654682070016861, -0.06339701265096664, -0.06132581830024719, -0.05925462394952774, -0.05718342587351799, -0.05511223152279854, -0.053041037172079086, -0.050969842821359634, -0.048898644745349884, -0.04682745039463043, -0.04475625604391098, -0.04268506169319153, -0.040613867342472076, -0.038542672991752625, -0.03647147864103317, -0.03440028056502342, -0.03232908621430397, -0.03025789186358452, -0.028186697512865067, -0.026115499436855316, -0.024044305086135864, -0.021973110735416412, -0.01990191638469696, -0.01783072203397751, -0.015759527683258057, -0.013688329607248306, -0.011617135256528854, -0.009545940905809402, -0.0074747465550899506, -0.005403552204370499, -0.0033323541283607483, -0.0012611597776412964, 0.0008100345730781555, 0.0028812289237976074, 0.004952423274517059, 0.007023617625236511, 0.009094811975955963, 0.011166006326675415, 0.013237208127975464, 0.015308402478694916, 0.017379596829414368, 0.01945079118013382, 0.02152198553085327, 0.023593179881572723, 0.025664374232292175, 0.027735568583011627, 0.02980676293373108, 0.03187795728445053, 0.03394915163516998, 0.03602035343647003, 0.038091547787189484, 0.040162742137908936, 0.04223393648862839, 0.04430513083934784, 0.04637632519006729, 0.04844751954078674, 0.050518713891506195, 0.05258990824222565, 0.0546611025929451, 0.05673230439424515, 0.0588034987449646, 0.060874685645103455, 0.0629458874464035, 0.06501707434654236, 0.06708827614784241]}, "gradients/classifier.weight": {"_type": "histogram", "values": [1.0, 1.0, 1.0, 0.0, 3.0, 1.0, 5.0, 2.0, 4.0, 10.0, 9.0, 17.0, 15.0, 21.0, 30.0, 49.0, 53.0, 61.0, 86.0, 96.0, 118.0, 155.0, 170.0, 210.0, 214.0, 249.0, 229.0, 254.0, 272.0, 299.0, 314.0, 295.0, 344.0, 291.0, 277.0, 262.0, 259.0, 239.0, 186.0, 184.0, 169.0, 136.0, 111.0, 97.0, 83.0, 60.0, 47.0, 38.0, 19.0, 23.0, 20.0, 13.0, 17.0, 7.0, 8.0, 4.0, 1.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.09012244641780853, -0.08724749088287354, -0.08437253534793854, -0.08149757981300354, -0.07862262427806854, -0.07574766874313354, -0.07287271320819855, -0.06999775767326355, -0.06712280213832855, -0.06424784660339355, -0.06137289106845856, -0.05849793553352356, -0.05562297999858856, -0.052748024463653564, -0.04987306892871857, -0.04699811339378357, -0.04412315785884857, -0.041248202323913574, -0.03837324678897858, -0.03549829125404358, -0.03262333571910858, -0.029748380184173584, -0.026873424649238586, -0.02399846911430359, -0.02112351357936859, -0.018248558044433594, -0.015373602509498596, -0.012498646974563599, -0.009623691439628601, -0.0067487359046936035, -0.003873780369758606, -0.0009988248348236084, 0.0018761307001113892, 0.004751086235046387, 0.007626041769981384, 0.010500997304916382, 0.01337595283985138, 0.016250908374786377, 0.019125863909721375, 0.022000819444656372, 0.02487577497959137, 0.027750730514526367, 0.030625686049461365, 0.03350064158439636, 0.03637559711933136, 0.03925055265426636, 0.042125508189201355, 0.04500046372413635, 0.04787541925907135, 0.05075037479400635, 0.053625330328941345, 0.05650028586387634, 0.05937524139881134, 0.06225019693374634, 0.06512515246868134, 0.06800010800361633, 0.07087506353855133, 0.07375001907348633, 0.07662497460842133, 0.07949993014335632, 0.08237488567829132, 0.08524984121322632, 0.08812479674816132, 0.09099975228309631, 0.09387470781803131]}, "val_acc": 0.23687943262411348, "train_acc": 0.25812953441384673, "_runtime": 814.0969541072845, "_timestamp": 1579509224.6157851, "_step": 0}
-++{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.0654682070016861,-0.06339701265096664,-0.06132581830024719,-0.05925462394952774,-0.05718342587351799,-0.05511223152279854,-0.053041037172079086,-0.050969842821359634,-0.048898644745349884,-0.04682745039463043,-0.04475625604391098,-0.04268506169319153,-0.040613867342472076,-0.038542672991752625,-0.03647147864103317,-0.03440028056502342,-0.03232908621430397,-0.03025789186358452,-0.028186697512865067,-0.026115499436855316,-0.024044305086135864,-0.021973110735416412,-0.01990191638469696,-0.01783072203397751,-0.015759527683258057,-0.013688329607248306,-0.011617135256528854,-0.009545940905809402,-0.0074747465550899506,-0.005403552204370499,-0.0033323541283607483,-0.0012611597776412964,0.0008100345730781555,0.0028812289237976074,0.004952423274517059,0.007023617625236511,0.009094811975955963,0.011166006326675415,0.013237208127975464,0.015308402478694916,0.017379596829414368,0.01945079118013382,0.02152198553085327,0.023593179881572723,0.025664374232292175,0.027735568583011627,0.02980676293373108,0.03187795728445053,0.03394915163516998,0.03602035343647003,0.038091547787189484,0.040162742137908936,0.04223393648862839,0.04430513083934784,0.04637632519006729,0.04844751954078674,0.050518713891506195,0.05258990824222565,0.0546611025929451,0.05673230439424515,0.0588034987449646,0.060874685645103455,0.0629458874464035,0.06501707434654236,0.06708827614784241]},"gradients/classifier.weight":{"bins":[-0.09012244641780853,-0.08724749088287354,-0.08437253534793854,-0.08149757981300354,-0.07862262427806854,-0.07574766874313354,-0.07287271320819855,-0.06999775767326355,-0.06712280213832855,-0.06424784660339355,-0.06137289106845856,-0.05849793553352356,-0.05562297999858856,-0.052748024463653564,-0.04987306892871857,-0.04699811339378357,-0.04412315785884857,-0.041248202323913574,-0.03837324678897858,-0.03549829125404358,-0.03262333571910858,-0.029748380184173584,-0.026873424649238586,-0.02399846911430359,-0.02112351357936859,-0.018248558044433594,-0.015373602509498596,-0.012498646974563599,-0.009623691439628601,-0.0067487359046936035,-0.003873780369758606,-0.0009988248348236084,0.0018761307001113892,0.004751086235046387,0.007626041769981384,0.010500997304916382,0.01337595283985138,0.016250908374786377,0.019125863909721375,0.022000819444656372,0.02487577497959137,0.027750730514526367,0.030625686049461365,0.03350064158439636,0.03637559711933136,0.03925055265426636,0.042125508189201355,0.04500046372413635,0.04787541925907135,0.05075037479400635,0.053625330328941345,0.05650028586387634,0.05937524139881134,0.06225019693374634,0.06512515246868134,0.06800010800361633,0.07087506353855133,0.07375001907348633,0.07662497460842133,0.07949993014335632,0.08237488567829132,0.08524984121322632,0.08812479674816132,0.09099975228309631,0.09387470781803131],"_type":"histogram","values":[1,1,1,0,3,1,5,2,4,10,9,17,15,21,30,49,53,61,86,96,118,155,170,210,214,249,229,254,272,299,314,295,344,291,277,262,259,239,186,184,169,136,111,97,83,60,47,38,19,23,20,13,17,7,8,4,1,2,2,0,0,0,0,1]},"_step":0,"val_acc":0.23687943262411348,"train_acc":0.25812953441384673,"_runtime":814.0969541072845,"_timestamp":1.5795092246157851e+09}
-++{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1],"bins":[-0.07717597484588623,-0.07544030994176865,-0.07370464503765106,-0.07196898013353348,-0.0702333152294159,-0.06849765032529831,-0.06676198542118073,-0.06502632051706314,-0.06329065561294556,-0.06155499070882797,-0.05981932580471039,-0.058083660900592804,-0.05634799599647522,-0.054612331092357635,-0.05287666618824005,-0.05114100128412247,-0.04940533638000488,-0.0476696714758873,-0.045934006571769714,-0.04419834539294243,-0.042462680488824844,-0.04072701558470726,-0.038991350680589676,-0.03725568577647209,-0.03552002087235451,-0.03378435596823692,-0.03204869106411934,-0.030313026160001755,-0.02857736125588417,-0.026841696351766586,-0.025106031447649002,-0.023370366543531418,-0.021634701639413834,-0.01989903673529625,-0.018163371831178665,-0.01642770692706108,-0.014692042022943497,-0.012956380844116211,-0.011220715939998627,-0.009485051035881042,-0.007749386131763458,-0.006013721227645874,-0.00427805632352829,-0.0025423914194107056,-0.0008067265152931213,0.0009289383888244629,0.002664603292942047,0.004400268197059631,0.006135933101177216,0.0078715980052948,0.009607262909412384,0.011342927813529968,0.013078592717647552,0.014814257621765137,0.01654992252588272,0.018285587430000305,0.02002125233411789,0.021756917238235474,0.023492582142353058,0.025228247046470642,0.026963911950588226,0.02869957685470581,0.030435241758823395,0.03217090666294098,0.03390657156705856]},"gradients/classifier.weight":{"_type":"histogram","values":[1,0,1,0,1,1,3,1,1,2,4,9,11,17,27,29,40,36,67,86,99,128,150,186,242,222,248,298,311,327,349,317,357,337,321,308,284,232,208,178,153,140,97,76,67,43,32,35,19,16,10,6,2,2,3,3,0,0,0,0,0,0,0,1],"bins":[-0.10413810610771179,-0.10082836449146271,-0.09751862287521362,-0.09420888125896454,-0.09089913964271545,-0.08758939802646637,-0.08427965641021729,-0.0809699147939682,-0.07766017317771912,-0.07435043156147003,-0.07104068994522095,-0.06773094832897186,-0.06442121416330338,-0.06111147254705429,-0.057801730930805206,-0.05449198931455612,-0.05118224769830704,-0.04787250608205795,-0.04456276446580887,-0.041253022849559784,-0.0379432812333107,-0.034633539617061615,-0.03132379800081253,-0.028014056384563446,-0.02470432221889496,-0.021394580602645874,-0.01808483898639679,-0.014775097370147705,-0.01146535575389862,-0.008155614137649536,-0.004845872521400452,-0.0015361309051513672,0.0017736107110977173,0.005083352327346802,0.008393093943595886,0.01170283555984497,0.015012577176094055,0.01832231879234314,0.021632060408592224,0.02494180202484131,0.028251543641090393,0.03156128525733948,0.03487102687358856,0.038180768489837646,0.04149051010608673,0.044800251722335815,0.0481099933385849,0.051419734954833984,0.054729461669921875,0.05803920328617096,0.061348944902420044,0.06465868651866913,0.06796842813491821,0.0712781697511673,0.07458791136741638,0.07789765298366547,0.08120739459991455,0.08451713621616364,0.08782687783241272,0.0911366194486618,0.09444636106491089,0.09775610268115997,0.10106584429740906,0.10437558591365814,0.10768532752990723]},"_step":1,"val_acc":0.25011820330969264,"train_acc":0.258383926343752,"_runtime":974.3342196941376,"_timestamp":1.5795093848530507e+09}
-++{"gradients/classifier.bias":{"values":[1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.006489427760243416,-0.006147412117570639,-0.005805396940559149,-0.005463381297886372,-0.0051213656552135944,-0.004779350012540817,-0.004437334835529327,-0.00409531919285655,-0.0037533037830144167,-0.003411288373172283,-0.003069272730499506,-0.0027272573206573725,-0.002385241910815239,-0.0020432262681424618,-0.0017012106254696846,-0.0013591954484581947,-0.0010171798057854176,-0.0006751641631126404,-0.0003331489861011505,8.866656571626663e-06,0.00035088229924440384,0.0006928974762558937,0.0010349131189286709,0.001376928761601448,0.001718943938612938,0.0020609600469470024,0.0024029752239584923,0.002744990400969982,0.0030870065093040466,0.0034290216863155365,0.0037710368633270264,0.004113052971661091,0.004455068148672581,0.004797083325684071,0.005139099434018135,0.005481114611029625,0.005823129788041115,0.006165145896375179,0.006507161073386669,0.006849176250398159,0.0071911923587322235,0.007533207535743713,0.007875222712755203,0.008217238821089268,0.008559253998100758,0.008901269175112247,0.009243285283446312,0.009585300460457802,0.009927315637469292,0.010269330814480782,0.01061134785413742,0.01095336303114891,0.0112953782081604,0.01163739338517189,0.01197940856218338,0.01232142373919487,0.012663440778851509,0.013005455955862999,0.013347471132874489,0.013689486309885979,0.014031501486897469,0.014373516663908958,0.014715533703565598,0.015057548880577087,0.015399564057588577],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.07622425258159637,-0.07385586947202682,-0.07148748636245728,-0.06911909580230713,-0.06675071269273758,-0.06438232958316803,-0.06201394647359848,-0.05964556336402893,-0.05727717652916908,-0.054908789694309235,-0.052540406584739685,-0.050172023475170135,-0.047803640365600586,-0.04543525353074074,-0.04306687042117119,-0.04069848358631134,-0.03833010047674179,-0.03596171736717224,-0.03359333053231239,-0.031224947422742844,-0.028856560587882996,-0.026488177478313446,-0.024119794368743896,-0.02175140753388405,-0.0193830244243145,-0.01701464131474495,-0.014646254479885101,-0.012277871370315552,-0.009909488260746002,-0.007541105151176453,-0.005172714591026306,-0.0028043314814567566,-0.00043594837188720703,0.0019324347376823425,0.004300817847251892,0.006669208407402039,0.009037591516971588,0.011405974626541138,0.013774357736110687,0.016142740845680237,0.018511131405830383,0.020879514515399933,0.023247897624969482,0.025616280734539032,0.02798466384410858,0.03035304695367813,0.03272143751382828,0.03508982062339783,0.03745820373296738,0.039826586842536926,0.042194969952106476,0.04456336051225662,0.04693174362182617,0.049300119280815125,0.05166850984096527,0.05403690040111542,0.05640527606010437,0.05877366662025452,0.06114204227924347,0.06351043283939362,0.06587882339954376,0.06824719905853271,0.07061558961868286,0.07298396527767181,0.07535235583782196],"_type":"histogram","values":[1,2,2,4,0,3,3,1,11,7,15,14,23,25,27,43,59,66,75,106,101,128,148,168,174,206,231,240,275,266,300,299,271,298,285,266,270,214,209,214,192,142,152,94,103,94,63,48,43,36,29,22,19,17,12,8,5,3,1,6,3,1,0,1]},"_step":2,"val_acc":0.24964539007092199,"train_acc":0.2603407873430231,"_runtime":1133.4028816223145,"_timestamp":1.5795095439217126e+09}
-++{"gradients/classifier.bias":{"values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.06606416404247284,-0.06390783190727234,-0.06175149977207184,-0.05959516763687134,-0.05743883550167084,-0.05528250336647034,-0.053126171231269836,-0.050969839096069336,-0.048813506960868835,-0.046657174825668335,-0.044500842690467834,-0.042344510555267334,-0.040188178420066833,-0.03803184628486633,-0.03587551414966583,-0.03371918201446533,-0.03156284987926483,-0.02940651774406433,-0.02725018560886383,-0.02509385347366333,-0.02293752133846283,-0.02078118920326233,-0.01862485706806183,-0.016468524932861328,-0.014312192797660828,-0.012155860662460327,-0.009999528527259827,-0.007843196392059326,-0.005686864256858826,-0.003530532121658325,-0.0013741999864578247,0.0007821321487426758,0.0029384642839431763,0.005094796419143677,0.007251128554344177,0.009407460689544678,0.011563792824745178,0.013720124959945679,0.01587645709514618,0.01803278923034668,0.02018912136554718,0.02234545350074768,0.02450178563594818,0.02665811777114868,0.028814449906349182,0.030970782041549683,0.03312711417675018,0.035283446311950684,0.037439778447151184,0.039596110582351685,0.041752442717552185,0.043908774852752686,0.046065106987953186,0.048221439123153687,0.05037777125835419,0.05253410339355469,0.05469043552875519,0.05684676766395569,0.05900309979915619,0.06115943193435669,0.06331576406955719,0.06547209620475769,0.06762842833995819,0.06978476047515869,0.07194109261035919],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.09906706213951111,-0.09581608325242996,-0.09256510436534882,-0.08931412547826767,-0.08606314659118652,-0.08281217515468597,-0.07956118881702423,-0.07631021738052368,-0.07305923849344254,-0.06980825960636139,-0.06655728071928024,-0.0633063018321991,-0.06005532294511795,-0.056804344058036804,-0.053553368896245956,-0.05030239000916481,-0.047051411122083664,-0.04380043223500252,-0.04054945334792137,-0.037298478186130524,-0.03404749929904938,-0.03079652041196823,-0.027545541524887085,-0.02429456263780594,-0.021043583750724792,-0.017792604863643646,-0.0145416259765625,-0.01129065454006195,-0.008039675652980804,-0.004788696765899658,-0.001537717878818512,0.0017132610082626343,0.0049642398953437805,0.008215218782424927,0.011466197669506073,0.01471717655658722,0.017968155443668365,0.02121913433074951,0.02447010576725006,0.027721092104911804,0.030972063541412354,0.0342230498790741,0.037474021315574646,0.040724992752075195,0.04397597908973694,0.04722695052623749,0.05047793686389923,0.05372890830039978,0.05697989463806152,0.06023086607456207,0.06348185241222382,0.06673282384872437,0.06998381018638611,0.07323478162288666,0.07648575305938721,0.07973673939704895,0.0829877108335495,0.08623869717121124,0.08948966860771179,0.09274065494537354,0.09599162638187408,0.09924261271953583,0.10249358415603638,0.10574457049369812,0.10899554193019867],"_type":"histogram","values":[1,0,0,0,2,2,0,4,3,6,10,11,14,22,31,43,53,58,86,101,112,160,183,225,221,275,317,314,310,329,323,356,343,312,332,263,237,192,175,162,123,83,77,78,50,43,29,27,12,11,6,5,4,3,0,0,1,0,0,1,1,0,1,1]},"_step":3,"val_acc":0.26222222222222225,"train_acc":0.2627868635921119,"_runtime":1291.7072627544403,"_timestamp":1.5795097022260938e+09}
-++{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.037257447838783264,-0.035971060395240784,-0.034684669226408005,-0.033398281782865524,-0.032111890614032745,-0.030825503170490265,-0.029539113864302635,-0.028252724558115005,-0.026966335251927376,-0.025679945945739746,-0.024393556639552116,-0.023107167333364487,-0.021820779889822006,-0.020534390583634377,-0.019248001277446747,-0.017961611971259117,-0.016675222665071487,-0.015388833358883858,-0.014102444052696228,-0.012816054746508598,-0.011529665440320969,-0.010243277996778488,-0.008956888690590858,-0.007670499384403229,-0.006384110078215599,-0.005097720772027969,-0.003811333328485489,-0.00252494215965271,-0.0012385547161102295,4.783645272254944e-05,0.00133422389626503,0.002620615065097809,0.003907002508640289,0.00519338995218277,0.006479781121015549,0.007766168564558029,0.009052559733390808,0.010338947176933289,0.011625338345766068,0.012911725789308548,0.014198116958141327,0.015484504401683807,0.016770891845226288,0.018057283014059067,0.019343670457601547,0.020630061626434326,0.021916449069976807,0.023202840238809586,0.024489227682352066,0.025775618851184845,0.027062006294727325,0.028348393738269806,0.029634781181812286,0.030921176075935364,0.032207563519477844,0.033493950963020325,0.034780338406562805,0.036066725850105286,0.03735312074422836,0.038639508187770844,0.039925895631313324,0.041212283074855804,0.04249867796897888,0.04378506541252136,0.04507145285606384]},"gradients/classifier.weight":{"bins":[-0.0888357013463974,-0.08612215518951416,-0.08340860903263092,-0.08069506287574768,-0.07798151671886444,-0.0752679631114006,-0.07255441695451736,-0.06984087079763412,-0.06712732464075089,-0.06441377848386765,-0.061700232326984406,-0.05898668244481087,-0.05627313628792763,-0.05355959013104439,-0.05084604024887085,-0.04813249409198761,-0.04541894793510437,-0.04270540177822113,-0.03999185562133789,-0.03727830573916435,-0.03456475958228111,-0.03185121342539787,-0.029137663543224335,-0.026424117386341095,-0.023710571229457855,-0.020997025072574615,-0.018283478915691376,-0.015569932758808136,-0.0128563791513443,-0.01014283299446106,-0.00742928683757782,-0.00471574068069458,-0.0020021945238113403,0.0007113516330718994,0.003424897789955139,0.006138443946838379,0.008851990103721619,0.011565543711185455,0.014279089868068695,0.016992636024951935,0.019706182181835175,0.022419728338718414,0.025133274495601654,0.027846820652484894,0.03056037425994873,0.03327392041683197,0.03598746657371521,0.03870101273059845,0.04141455888748169,0.04412810504436493,0.04684165120124817,0.04955519735813141,0.05226874351501465,0.05498228967189789,0.05769583582878113,0.06040938198566437,0.0631229430437088,0.06583648920059204,0.06855003535747528,0.07126358151435852,0.07397712767124176,0.076690673828125,0.07940421998500824,0.08211776614189148,0.08483131229877472],"_type":"histogram","values":[1,0,0,0,2,0,1,0,10,6,9,13,11,18,18,29,47,58,58,70,96,103,104,181,183,180,232,264,280,262,304,320,289,307,281,323,255,289,218,224,185,155,132,132,118,76,65,59,48,22,30,26,17,9,5,3,4,2,3,3,1,2,0,1]},"_step":4,"val_acc":0.262789598108747,"train_acc":0.2653650279586515,"_runtime":1448.6882483959198,"_timestamp":1.5795098592070794e+09}
-+diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json b/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-+index 3724adb..0ce5b0d 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-++++ b/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-+@@ -3,10 +3,10 @@
-+     "program": "<python with no main file>",
-+     "git": {
-+         "remote": "https://github.com/ubamba98/droughtwatch",
-+-        "commit": "fea1daedb6b14125e1dec2c49a5e3b211d016f90"
-++        "commit": "4e7b9b38b8d5d3ec44d43373b8e263f50ead87a3"
-+     },
-+     "email": "ubamba98@gmail.com",
-+-    "startedAt": "2020-01-20T08:23:13.672686",
-++    "startedAt": "2020-01-20T08:44:21.248355",
-+     "host": "ccw-iclr",
-+     "username": "ubamba98",
-+     "executable": "/home/ubamba98/anaconda3/bin/python",
-+@@ -25,5 +25,5 @@
-+     "mode": "run",
-+     "name": "efficentnet-b3-765",
-+     "project": "droughtwatch",
-+-    "heartbeatAt": "2020-01-20T08:36:16.324952"
-++    "heartbeatAt": "2020-01-20T08:44:22.172990"
-+ }
-+diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-summary.json b/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-+index 05e4af4..27d2e55 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-++++ b/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-+@@ -1 +1 @@
-+-{"graph_0": {"_type": "graph", "format": "torch", "nodes": [{"name": "conv_stem", "id": 140438557381128, "class_name": "Conv2dSame(3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False)", "parameters": [["weight", [40, 3, 3, 3]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [1080]}, {"name": "bn1", "id": 140438557383704, "class_name": "BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [40]], ["bias", [40]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [40, 40]}, {"name": "blocks.0.0", "id": 140438557382920, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)\n  (bn1): BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [40, 1, 3, 3]], ["bn1.weight", [40]], ["bn1.bias", [40]], ["se.conv_reduce.weight", [10, 40, 1, 1]], ["se.conv_reduce.bias", [10]], ["se.conv_expand.weight", [40, 10, 1, 1]], ["se.conv_expand.bias", [40]], ["conv_pw.weight", [24, 40, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [360, 40, 40, 400, 10, 400, 40, 960, 24, 24]}, {"name": "blocks.0.1", "id": 140438680665224, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)\n  (bn1): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [24, 1, 3, 3]], ["bn1.weight", [24]], ["bn1.bias", [24]], ["se.conv_reduce.weight", [6, 24, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [24, 6, 1, 1]], ["se.conv_expand.bias", [24]], ["conv_pw.weight", [24, 24, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [216, 24, 24, 144, 6, 144, 24, 576, 24, 24]}, {"name": "blocks.1.0", "id": 140438676598736, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(144, 144, kernel_size=(3, 3), stride=(2, 2), groups=144, bias=False)\n  (bn2): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [144, 24, 1, 1]], ["bn1.weight", [144]], ["bn1.bias", [144]], ["conv_dw.weight", [144, 1, 3, 3]], ["bn2.weight", [144]], ["bn2.bias", [144]], ["se.conv_reduce.weight", [6, 144, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [144, 6, 1, 1]], ["se.conv_expand.bias", [144]], ["conv_pwl.weight", [32, 144, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 4608, 32, 32]}, {"name": "blocks.1.1", "id": 140438557424160, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.1.2", "id": 140438679559640, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.2.0", "id": 140438679470320, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(192, 192, kernel_size=(5, 5), stride=(2, 2), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 5, 5]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [48, 192, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [6144, 192, 192, 4800, 192, 192, 1536, 8, 1536, 192, 9216, 48, 48]}, {"name": "blocks.2.1", "id": 140438557424384, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.2.2", "id": 140438557422704, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.3.0", "id": 140438557421920, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(288, 288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 3, 3]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [96, 288, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [13824, 288, 288, 2592, 288, 288, 3456, 12, 3456, 288, 27648, 96, 96]}, {"name": "blocks.3.1", "id": 140438557422816, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.2", "id": 140438557824392, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.3", "id": 140438557825232, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.4", "id": 140438557825176, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.4.0", "id": 140438557824672, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 5, 5]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [136, 576, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [55296, 576, 576, 14400, 576, 576, 13824, 24, 13824, 576, 78336, 136, 136]}, {"name": "blocks.4.1", "id": 140438557823496, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.2", "id": 140438679158968, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.3", "id": 140438679496744, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.4", "id": 140438679422456, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.5.0", "id": 140438679421448, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(816, 816, kernel_size=(5, 5), stride=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [232, 816, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 189312, 232, 232]}, {"name": "blocks.5.1", "id": 140438679580400, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.2", "id": 140438679115088, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.3", "id": 140438676984832, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.4", "id": 140440670709296, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.5", "id": 140440670710192, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.6.0", "id": 140440670709464, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 3, 3]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [384, 1392, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [322944, 1392, 1392, 12528, 1392, 1392, 80736, 58, 80736, 1392, 534528, 384, 384]}, {"name": "blocks.6.1", "id": 140438679947864, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(384, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)\n  (bn2): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(2304, 96, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(96, 2304, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(2304, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [2304, 384, 1, 1]], ["bn1.weight", [2304]], ["bn1.bias", [2304]], ["conv_dw.weight", [2304, 1, 3, 3]], ["bn2.weight", [2304]], ["bn2.bias", [2304]], ["se.conv_reduce.weight", [96, 2304, 1, 1]], ["se.conv_reduce.bias", [96]], ["se.conv_expand.weight", [2304, 96, 1, 1]], ["se.conv_expand.bias", [2304]], ["conv_pwl.weight", [384, 2304, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [884736, 2304, 2304, 20736, 2304, 2304, 221184, 96, 221184, 2304, 884736, 384, 384]}, {"name": "conv_head", "id": 140438557382584, "class_name": "Conv2d(384, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)", "parameters": [["weight", [1536, 384, 1, 1]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [589824]}, {"name": "bn2", "id": 140438703610848, "class_name": "BatchNorm2d(1536, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [1536]], ["bias", [1536]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [1536, 1536]}, {"name": "global_pool", "id": 140438703610792, "class_name": "SelectAdaptivePool2d (output_size=1, pool_type=avg)", "parameters": [], "output_shape": [[256, 1536, 1, 1]], "num_parameters": []}, {"name": "classifier", "id": 140438679885696, "class_name": "Linear(in_features=1536, out_features=4, bias=True)", "parameters": [["weight", [4, 1536]], ["bias", [4]]], "output_shape": [[256, 4]], "num_parameters": [6144, 4]}], "edges": []}, "train_acc": 0.25812953441384673, "_step": 0, "gradients/classifier.weight": {"_type": "histogram", "values": [1.0, 1.0, 1.0, 0.0, 3.0, 1.0, 5.0, 2.0, 4.0, 10.0, 9.0, 17.0, 15.0, 21.0, 30.0, 49.0, 53.0, 61.0, 86.0, 96.0, 118.0, 155.0, 170.0, 210.0, 214.0, 249.0, 229.0, 254.0, 272.0, 299.0, 314.0, 295.0, 344.0, 291.0, 277.0, 262.0, 259.0, 239.0, 186.0, 184.0, 169.0, 136.0, 111.0, 97.0, 83.0, 60.0, 47.0, 38.0, 19.0, 23.0, 20.0, 13.0, 17.0, 7.0, 8.0, 4.0, 1.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.09012244641780853, -0.08724749088287354, -0.08437253534793854, -0.08149757981300354, -0.07862262427806854, -0.07574766874313354, -0.07287271320819855, -0.06999775767326355, -0.06712280213832855, -0.06424784660339355, -0.06137289106845856, -0.05849793553352356, -0.05562297999858856, -0.052748024463653564, -0.04987306892871857, -0.04699811339378357, -0.04412315785884857, -0.041248202323913574, -0.03837324678897858, -0.03549829125404358, -0.03262333571910858, -0.029748380184173584, -0.026873424649238586, -0.02399846911430359, -0.02112351357936859, -0.018248558044433594, -0.015373602509498596, -0.012498646974563599, -0.009623691439628601, -0.0067487359046936035, -0.003873780369758606, -0.0009988248348236084, 0.0018761307001113892, 0.004751086235046387, 0.007626041769981384, 0.010500997304916382, 0.01337595283985138, 0.016250908374786377, 0.019125863909721375, 0.022000819444656372, 0.02487577497959137, 0.027750730514526367, 0.030625686049461365, 0.03350064158439636, 0.03637559711933136, 0.03925055265426636, 0.042125508189201355, 0.04500046372413635, 0.04787541925907135, 0.05075037479400635, 0.053625330328941345, 0.05650028586387634, 0.05937524139881134, 0.06225019693374634, 0.06512515246868134, 0.06800010800361633, 0.07087506353855133, 0.07375001907348633, 0.07662497460842133, 0.07949993014335632, 0.08237488567829132, 0.08524984121322632, 0.08812479674816132, 0.09099975228309631, 0.09387470781803131]}, "gradients/classifier.bias": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.0654682070016861, -0.06339701265096664, -0.06132581830024719, -0.05925462394952774, -0.05718342587351799, -0.05511223152279854, -0.053041037172079086, -0.050969842821359634, -0.048898644745349884, -0.04682745039463043, -0.04475625604391098, -0.04268506169319153, -0.040613867342472076, -0.038542672991752625, -0.03647147864103317, -0.03440028056502342, -0.03232908621430397, -0.03025789186358452, -0.028186697512865067, -0.026115499436855316, -0.024044305086135864, -0.021973110735416412, -0.01990191638469696, -0.01783072203397751, -0.015759527683258057, -0.013688329607248306, -0.011617135256528854, -0.009545940905809402, -0.0074747465550899506, -0.005403552204370499, -0.0033323541283607483, -0.0012611597776412964, 0.0008100345730781555, 0.0028812289237976074, 0.004952423274517059, 0.007023617625236511, 0.009094811975955963, 0.011166006326675415, 0.013237208127975464, 0.015308402478694916, 0.017379596829414368, 0.01945079118013382, 0.02152198553085327, 0.023593179881572723, 0.025664374232292175, 0.027735568583011627, 0.02980676293373108, 0.03187795728445053, 0.03394915163516998, 0.03602035343647003, 0.038091547787189484, 0.040162742137908936, 0.04223393648862839, 0.04430513083934784, 0.04637632519006729, 0.04844751954078674, 0.050518713891506195, 0.05258990824222565, 0.0546611025929451, 0.05673230439424515, 0.0588034987449646, 0.060874685645103455, 0.0629458874464035, 0.06501707434654236, 0.06708827614784241]}, "val_acc": 0.23687943262411348, "_runtime": 814.0969541072845, "_timestamp": 1579509224.6157851}
-++{"graph_0": {"_type": "graph", "edges": [], "nodes": [{"id": 140438557381128, "name": "conv_stem", "class_name": "Conv2dSame(3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False)", "parameters": [["weight", [40, 3, 3, 3]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [1080]}, {"id": 140438557383704, "name": "bn1", "class_name": "BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [40]], ["bias", [40]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [40, 40]}, {"id": 140438557382920, "name": "blocks.0.0", "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)\n  (bn1): BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [40, 1, 3, 3]], ["bn1.weight", [40]], ["bn1.bias", [40]], ["se.conv_reduce.weight", [10, 40, 1, 1]], ["se.conv_reduce.bias", [10]], ["se.conv_expand.weight", [40, 10, 1, 1]], ["se.conv_expand.bias", [40]], ["conv_pw.weight", [24, 40, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [360, 40, 40, 400, 10, 400, 40, 960, 24, 24]}, {"id": 140438680665224, "name": "blocks.0.1", "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)\n  (bn1): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [24, 1, 3, 3]], ["bn1.weight", [24]], ["bn1.bias", [24]], ["se.conv_reduce.weight", [6, 24, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [24, 6, 1, 1]], ["se.conv_expand.bias", [24]], ["conv_pw.weight", [24, 24, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [216, 24, 24, 144, 6, 144, 24, 576, 24, 24]}, {"id": 140438676598736, "name": "blocks.1.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(144, 144, kernel_size=(3, 3), stride=(2, 2), groups=144, bias=False)\n  (bn2): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [144, 24, 1, 1]], ["bn1.weight", [144]], ["bn1.bias", [144]], ["conv_dw.weight", [144, 1, 3, 3]], ["bn2.weight", [144]], ["bn2.bias", [144]], ["se.conv_reduce.weight", [6, 144, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [144, 6, 1, 1]], ["se.conv_expand.bias", [144]], ["conv_pwl.weight", [32, 144, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 4608, 32, 32]}, {"id": 140438557424160, "name": "blocks.1.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"id": 140438679559640, "name": "blocks.1.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"id": 140438679470320, "name": "blocks.2.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(192, 192, kernel_size=(5, 5), stride=(2, 2), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 5, 5]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [48, 192, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [6144, 192, 192, 4800, 192, 192, 1536, 8, 1536, 192, 9216, 48, 48]}, {"id": 140438557424384, "name": "blocks.2.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"id": 140438557422704, "name": "blocks.2.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"id": 140438557421920, "name": "blocks.3.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(288, 288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 3, 3]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [96, 288, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [13824, 288, 288, 2592, 288, 288, 3456, 12, 3456, 288, 27648, 96, 96]}, {"id": 140438557422816, "name": "blocks.3.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557824392, "name": "blocks.3.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557825232, "name": "blocks.3.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557825176, "name": "blocks.3.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557824672, "name": "blocks.4.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 5, 5]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [136, 576, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [55296, 576, 576, 14400, 576, 576, 13824, 24, 13824, 576, 78336, 136, 136]}, {"id": 140438557823496, "name": "blocks.4.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679158968, "name": "blocks.4.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679496744, "name": "blocks.4.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679422456, "name": "blocks.4.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679421448, "name": "blocks.5.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(816, 816, kernel_size=(5, 5), stride=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [232, 816, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 189312, 232, 232]}, {"id": 140438679580400, "name": "blocks.5.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140438679115088, "name": "blocks.5.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140438676984832, "name": "blocks.5.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140440670709296, "name": "blocks.5.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140440670710192, "name": "blocks.5.5", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140440670709464, "name": "blocks.6.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 3, 3]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [384, 1392, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [322944, 1392, 1392, 12528, 1392, 1392, 80736, 58, 80736, 1392, 534528, 384, 384]}, {"id": 140438679947864, "name": "blocks.6.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(384, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)\n  (bn2): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(2304, 96, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(96, 2304, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(2304, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [2304, 384, 1, 1]], ["bn1.weight", [2304]], ["bn1.bias", [2304]], ["conv_dw.weight", [2304, 1, 3, 3]], ["bn2.weight", [2304]], ["bn2.bias", [2304]], ["se.conv_reduce.weight", [96, 2304, 1, 1]], ["se.conv_reduce.bias", [96]], ["se.conv_expand.weight", [2304, 96, 1, 1]], ["se.conv_expand.bias", [2304]], ["conv_pwl.weight", [384, 2304, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [884736, 2304, 2304, 20736, 2304, 2304, 221184, 96, 221184, 2304, 884736, 384, 384]}, {"id": 140438557382584, "name": "conv_head", "class_name": "Conv2d(384, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)", "parameters": [["weight", [1536, 384, 1, 1]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [589824]}, {"id": 140438703610848, "name": "bn2", "class_name": "BatchNorm2d(1536, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [1536]], ["bias", [1536]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [1536, 1536]}, {"id": 140438703610792, "name": "global_pool", "class_name": "SelectAdaptivePool2d (output_size=1, pool_type=avg)", "parameters": [], "output_shape": [[256, 1536, 1, 1]], "num_parameters": []}, {"id": 140438679885696, "name": "classifier", "class_name": "Linear(in_features=1536, out_features=4, bias=True)", "parameters": [["weight", [4, 1536]], ["bias", [4]]], "output_shape": [[256, 4]], "num_parameters": [6144, 4]}], "format": "torch"}, "train_acc": 0.2653650279586515, "_step": 4, "gradients/classifier.weight": {"bins": [-0.0888357013463974, -0.08612215518951416, -0.08340860903263092, -0.08069506287574768, -0.07798151671886444, -0.0752679631114006, -0.07255441695451736, -0.06984087079763412, -0.06712732464075089, -0.06441377848386765, -0.061700232326984406, -0.05898668244481087, -0.05627313628792763, -0.05355959013104439, -0.05084604024887085, -0.04813249409198761, -0.04541894793510437, -0.04270540177822113, -0.03999185562133789, -0.03727830573916435, -0.03456475958228111, -0.03185121342539787, -0.029137663543224335, -0.026424117386341095, -0.023710571229457855, -0.020997025072574615, -0.018283478915691376, -0.015569932758808136, -0.0128563791513443, -0.01014283299446106, -0.00742928683757782, -0.00471574068069458, -0.0020021945238113403, 0.0007113516330718994, 0.003424897789955139, 0.006138443946838379, 0.008851990103721619, 0.011565543711185455, 0.014279089868068697, 0.016992636024951935, 0.019706182181835175, 0.022419728338718414, 0.025133274495601658, 0.027846820652484897, 0.03056037425994873, 0.03327392041683197, 0.03598746657371521, 0.03870101273059845, 0.04141455888748169, 0.04412810504436493, 0.04684165120124817, 0.04955519735813141, 0.05226874351501465, 0.05498228967189789, 0.05769583582878113, 0.06040938198566437, 0.0631229430437088, 0.06583648920059204, 0.06855003535747528, 0.07126358151435852, 0.07397712767124176, 0.076690673828125, 0.07940421998500824, 0.08211776614189148, 0.08483131229877472], "_type": "histogram", "values": [1, 0, 0, 0, 2, 0, 1, 0, 10, 6, 9, 13, 11, 18, 18, 29, 47, 58, 58, 70, 96, 103, 104, 181, 183, 180, 232, 264, 280, 262, 304, 320, 289, 307, 281, 323, 255, 289, 218, 224, 185, 155, 132, 132, 118, 76, 65, 59, 48, 22, 30, 26, 17, 9, 5, 3, 4, 2, 3, 3, 1, 2, 0, 1]}, "gradients/classifier.bias": {"bins": [-0.037257447838783264, -0.035971060395240784, -0.034684669226408005, -0.033398281782865524, -0.032111890614032745, -0.030825503170490265, -0.029539113864302635, -0.028252724558115005, -0.026966335251927376, -0.025679945945739743, -0.024393556639552116, -0.023107167333364487, -0.02182077988982201, -0.020534390583634377, -0.019248001277446747, -0.017961611971259117, -0.016675222665071487, -0.015388833358883858, -0.014102444052696228, -0.012816054746508598, -0.011529665440320969, -0.010243277996778488, -0.008956888690590858, -0.007670499384403229, -0.006384110078215599, -0.005097720772027969, -0.003811333328485489, -0.00252494215965271, -0.0012385547161102295, 4.783645272254944e-05, 0.00133422389626503, 0.002620615065097809, 0.003907002508640289, 0.00519338995218277, 0.006479781121015549, 0.007766168564558029, 0.009052559733390808, 0.010338947176933289, 0.011625338345766068, 0.012911725789308548, 0.014198116958141329, 0.015484504401683807, 0.016770891845226288, 0.018057283014059067, 0.019343670457601547, 0.02063006162643433, 0.021916449069976807, 0.023202840238809586, 0.024489227682352063, 0.025775618851184845, 0.027062006294727325, 0.02834839373826981, 0.029634781181812286, 0.030921176075935364, 0.032207563519477844, 0.033493950963020325, 0.034780338406562805, 0.036066725850105286, 0.03735312074422836, 0.03863950818777085, 0.03992589563131333, 0.04121228307485581, 0.04249867796897888, 0.04378506541252136, 0.04507145285606384], "_type": "histogram", "values": [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]}, "val_acc": 0.262789598108747, "_runtime": 1448.6882483959198, "_timestamp": 1579509859.2070794}
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-index bebeecd..97ebdd9 100644
---- a/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-@@ -1,26 +1,36 @@
--{"system.network.sent":15797,"system.gpu.0.powerPercent":41.9,"system.network.recv":65303,"system.disk":22.4,"system.gpu.0.powerWatts":29.33,"_wandb":true,"system.gpu.0.temp":61,"system.gpu.0.memory":0,"system.gpu.0.gpu":0,"_runtime":1,"system.proc.memory.rssMB":262.66,"system.proc.memory.availableMB":14300.84,"system.cpu":13.75,"system.proc.cpu.threads":17,"system.memory":4.9,"system.proc.memory.percent":1.75,"system.gpu.0.memoryAllocated":0,"_timestamp":1579508336}
--{"system.gpu.0.gpu": 10.2, "system.gpu.0.memory": 7.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 68.0, "system.gpu.0.powerWatts": 37.18, "system.gpu.0.powerPercent": 53.11, "system.cpu": 6.9, "system.memory": 22.68, "system.disk": 22.4, "system.proc.memory.availableMB": 11632.24, "system.proc.memory.rssMB": 2960.92, "system.proc.memory.percent": 19.68, "system.proc.cpu.threads": 27.87, "system.network.sent": 244468, "system.network.recv": 251940, "_wandb": true, "_timestamp": 1579508635, "_runtime": 42}
--{"system.gpu.0.gpu": 5.47, "system.gpu.0.memory": 4.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 69.93, "system.gpu.0.powerWatts": 38.27, "system.gpu.0.powerPercent": 54.67, "system.cpu": 6.63, "system.memory": 22.78, "system.disk": 22.4, "system.proc.memory.availableMB": 11615.58, "system.proc.memory.rssMB": 2961.46, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 339293, "system.network.recv": 337753, "_wandb": true, "_timestamp": 1579508665, "_runtime": 73}
--{"system.gpu.0.gpu": 8.87, "system.gpu.0.memory": 6.47, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 72.07, "system.gpu.0.powerWatts": 40.58, "system.gpu.0.powerPercent": 57.97, "system.cpu": 7.19, "system.memory": 22.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11605.85, "system.proc.memory.rssMB": 2961.46, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 431682, "system.network.recv": 429114, "_wandb": true, "_timestamp": 1579508695, "_runtime": 103}
--{"system.gpu.0.gpu": 8.67, "system.gpu.0.memory": 5.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 73.27, "system.gpu.0.powerWatts": 36.56, "system.gpu.0.powerPercent": 52.23, "system.cpu": 7.94, "system.memory": 22.88, "system.disk": 22.4, "system.proc.memory.availableMB": 11602.32, "system.proc.memory.rssMB": 2961.81, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 534529, "system.network.recv": 530758, "_wandb": true, "_timestamp": 1579508725, "_runtime": 133}
--{"system.gpu.0.gpu": 8.87, "system.gpu.0.memory": 5.8, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 74.93, "system.gpu.0.powerWatts": 43.21, "system.gpu.0.powerPercent": 61.73, "system.cpu": 8.45, "system.memory": 22.98, "system.disk": 22.4, "system.proc.memory.availableMB": 11587.51, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 635626, "system.network.recv": 634655, "_wandb": true, "_timestamp": 1579508756, "_runtime": 163}
--{"system.gpu.0.gpu": 9.87, "system.gpu.0.memory": 7.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 42.67, "system.gpu.0.powerPercent": 60.96, "system.cpu": 8.79, "system.memory": 23.02, "system.disk": 22.4, "system.proc.memory.availableMB": 11581.47, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 748987, "system.network.recv": 747904, "_wandb": true, "_timestamp": 1579508786, "_runtime": 193}
--{"system.gpu.0.gpu": 11.87, "system.gpu.0.memory": 8.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.67, "system.gpu.0.powerWatts": 44.82, "system.gpu.0.powerPercent": 64.03, "system.cpu": 9.73, "system.memory": 23.07, "system.disk": 22.4, "system.proc.memory.availableMB": 11575.17, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 873256, "system.network.recv": 874007, "_wandb": true, "_timestamp": 1579508816, "_runtime": 223}
--{"system.gpu.0.gpu": 11.0, "system.gpu.0.memory": 8.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.27, "system.gpu.0.powerWatts": 38.19, "system.gpu.0.powerPercent": 54.55, "system.cpu": 10.57, "system.memory": 23.05, "system.disk": 22.4, "system.proc.memory.availableMB": 11572.48, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1023164, "system.network.recv": 1026940, "_wandb": true, "_timestamp": 1579508846, "_runtime": 253}
--{"system.gpu.0.gpu": 14.2, "system.gpu.0.memory": 10.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.27, "system.gpu.0.powerWatts": 42.89, "system.gpu.0.powerPercent": 61.28, "system.cpu": 11.98, "system.memory": 23.15, "system.disk": 22.4, "system.proc.memory.availableMB": 11561.87, "system.proc.memory.rssMB": 2962.21, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1178866, "system.network.recv": 1181511, "_wandb": true, "_timestamp": 1579508876, "_runtime": 283}
--{"system.gpu.0.gpu": 13.0, "system.gpu.0.memory": 10.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 78.0, "system.gpu.0.powerWatts": 50.01, "system.gpu.0.powerPercent": 71.45, "system.cpu": 13.59, "system.memory": 23.22, "system.disk": 22.4, "system.proc.memory.availableMB": 11553.44, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1331123, "system.network.recv": 1336366, "_wandb": true, "_timestamp": 1579508906, "_runtime": 314}
--{"system.gpu.0.gpu": 25.13, "system.gpu.0.memory": 21.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.33, "system.gpu.0.powerWatts": 45.73, "system.gpu.0.powerPercent": 65.33, "system.cpu": 15.11, "system.memory": 23.2, "system.disk": 22.4, "system.proc.memory.availableMB": 11550.57, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1518597, "system.network.recv": 1523627, "_wandb": true, "_timestamp": 1579508936, "_runtime": 344}
--{"system.gpu.0.gpu": 19.67, "system.gpu.0.memory": 16.87, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.53, "system.gpu.0.powerWatts": 49.57, "system.gpu.0.powerPercent": 70.82, "system.cpu": 17.23, "system.memory": 23.21, "system.disk": 22.4, "system.proc.memory.availableMB": 11547.93, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1702121, "system.network.recv": 1710364, "_wandb": true, "_timestamp": 1579508966, "_runtime": 374}
--{"system.gpu.0.gpu": 18.4, "system.gpu.0.memory": 15.73, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.2, "system.gpu.0.powerWatts": 51.24, "system.gpu.0.powerPercent": 73.2, "system.cpu": 18.21, "system.memory": 23.35, "system.disk": 22.4, "system.proc.memory.availableMB": 11531.67, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1856007, "system.network.recv": 1863572, "_wandb": true, "_timestamp": 1579508997, "_runtime": 404}
--{"system.gpu.0.gpu": 18.8, "system.gpu.0.memory": 16.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.47, "system.gpu.0.powerWatts": 49.62, "system.gpu.0.powerPercent": 70.89, "system.cpu": 19.99, "system.memory": 23.32, "system.disk": 22.4, "system.proc.memory.availableMB": 11535.11, "system.proc.memory.rssMB": 2962.48, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2016161, "system.network.recv": 2023461, "_wandb": true, "_timestamp": 1579509027, "_runtime": 434}
--{"system.gpu.0.gpu": 21.0, "system.gpu.0.memory": 18.07, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.13, "system.gpu.0.powerWatts": 50.49, "system.gpu.0.powerPercent": 72.13, "system.cpu": 20.69, "system.memory": 23.18, "system.disk": 22.4, "system.proc.memory.availableMB": 11552.24, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2245090, "system.network.recv": 2255638, "_wandb": true, "_timestamp": 1579509057, "_runtime": 464}
--{"system.gpu.0.gpu": 17.07, "system.gpu.0.memory": 14.13, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.13, "system.gpu.0.powerWatts": 51.83, "system.gpu.0.powerPercent": 74.04, "system.cpu": 21.11, "system.memory": 23.25, "system.disk": 22.4, "system.proc.memory.availableMB": 11542.37, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2746309, "system.network.recv": 2487509, "_wandb": true, "_timestamp": 1579509087, "_runtime": 494}
--{"system.gpu.0.gpu": 66.47, "system.gpu.0.memory": 44.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 78.4, "system.gpu.0.powerWatts": 64.54, "system.gpu.0.powerPercent": 92.21, "system.cpu": 78.97, "system.memory": 23.2, "system.disk": 22.4, "system.proc.memory.availableMB": 11552.42, "system.proc.memory.rssMB": 2957.19, "system.proc.memory.percent": 19.66, "system.proc.cpu.threads": 27.2, "system.network.sent": 3696180, "system.network.recv": 2568386, "_wandb": true, "_timestamp": 1579509117, "_runtime": 525}
--{"system.gpu.0.gpu": 82.13, "system.gpu.0.memory": 53.73, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.33, "system.gpu.0.powerWatts": 67.07, "system.gpu.0.powerPercent": 95.82, "system.cpu": 99.89, "system.memory": 23.25, "system.disk": 22.4, "system.proc.memory.availableMB": 11541.6, "system.proc.memory.rssMB": 2956.42, "system.proc.memory.percent": 19.65, "system.proc.cpu.threads": 27.0, "system.network.sent": 3700982, "system.network.recv": 2571448, "_wandb": true, "_timestamp": 1579509147, "_runtime": 555}
--{"system.gpu.0.gpu": 78.07, "system.gpu.0.memory": 50.87, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.0, "system.gpu.0.powerWatts": 62.66, "system.gpu.0.powerPercent": 89.52, "system.cpu": 93.01, "system.memory": 23.62, "system.disk": 22.4, "system.proc.memory.availableMB": 11490.1, "system.proc.memory.rssMB": 2955.65, "system.proc.memory.percent": 19.65, "system.proc.cpu.threads": 27.0, "system.network.sent": 3709404, "system.network.recv": 2574045, "_wandb": true, "_timestamp": 1579509178, "_runtime": 585}
--{"system.gpu.0.gpu": 15.07, "system.gpu.0.memory": 3.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 71.73, "system.gpu.0.powerWatts": 34.48, "system.gpu.0.powerPercent": 49.26, "system.cpu": 25.27, "system.memory": 22.4, "system.disk": 22.4, "system.proc.memory.availableMB": 11676.86, "system.proc.memory.rssMB": 2950.69, "system.proc.memory.percent": 19.61, "system.proc.cpu.threads": 27.0, "system.network.sent": 3721790, "system.network.recv": 2631378, "_wandb": true, "_timestamp": 1579509208, "_runtime": 615}
--{"system.gpu.0.gpu": 45.27, "system.gpu.0.memory": 29.07, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 74.07, "system.gpu.0.powerWatts": 48.68, "system.gpu.0.powerPercent": 69.55, "system.cpu": 61.3, "system.memory": 22.83, "system.disk": 22.4, "system.proc.memory.availableMB": 11611.68, "system.proc.memory.rssMB": 2958.09, "system.proc.memory.percent": 19.66, "system.proc.cpu.threads": 27.47, "system.network.sent": 4312731, "system.network.recv": 3024984, "_wandb": true, "_timestamp": 1579509238, "_runtime": 645}
--{"system.gpu.0.gpu": 85.27, "system.gpu.0.memory": 64.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 80.4, "system.gpu.0.powerWatts": 69.5, "system.gpu.0.powerPercent": 99.29, "system.cpu": 98.87, "system.memory": 23.4, "system.disk": 22.4, "system.proc.memory.availableMB": 11523.09, "system.proc.memory.rssMB": 2965.59, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 28.0, "system.network.sent": 5355584, "system.network.recv": 3684826, "_wandb": true, "_timestamp": 1579509268, "_runtime": 675}
--{"system.gpu.0.gpu": 82.67, "system.gpu.0.memory": 63.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.13, "system.gpu.0.powerWatts": 68.41, "system.gpu.0.powerPercent": 97.73, "system.cpu": 97.43, "system.memory": 23.36, "system.disk": 22.4, "system.proc.memory.availableMB": 11527.65, "system.proc.memory.rssMB": 2966.13, "system.proc.memory.percent": 19.72, "system.proc.cpu.threads": 27.93, "system.network.sent": 6262772, "system.network.recv": 4284351, "_wandb": true, "_timestamp": 1579509298, "_runtime": 706}
--{"system.gpu.0.gpu": 84.6, "system.gpu.0.memory": 55.33, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.4, "system.gpu.0.powerWatts": 66.84, "system.gpu.0.powerPercent": 95.48, "system.cpu": 99.88, "system.memory": 23.27, "system.disk": 22.4, "system.proc.memory.availableMB": 11542.26, "system.proc.memory.rssMB": 2958.56, "system.proc.memory.percent": 19.67, "system.proc.cpu.threads": 27.0, "system.network.sent": 6275456, "system.network.recv": 4336424, "_wandb": true, "_timestamp": 1579509329, "_runtime": 736}
--{"system.gpu.0.gpu": 84.4, "system.gpu.0.memory": 55.13, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.73, "system.gpu.0.powerWatts": 73.68, "system.gpu.0.powerPercent": 105.26, "system.cpu": 99.89, "system.memory": 23.29, "system.disk": 22.4, "system.proc.memory.availableMB": 11538.26, "system.proc.memory.rssMB": 2958.56, "system.proc.memory.percent": 19.67, "system.proc.cpu.threads": 27.0, "system.network.sent": 6279094, "system.network.recv": 4342260, "_wandb": true, "_timestamp": 1579509359, "_runtime": 766}
-+{"system.network.sent":10977141,"system.gpu.0.powerPercent":96.79,"system.network.recv":7409894,"system.disk":22.4,"system.gpu.0.powerWatts":67.75,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":65.33,"system.gpu.0.gpu":85.6,"_runtime":1008,"system.proc.memory.rssMB":2966.29,"system.proc.memory.availableMB":11506.94,"system.cpu":98.25,"system.proc.cpu.threads":28,"system.memory":23.5,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509601}
-+{"system.network.sent":11502749,"system.gpu.0.powerPercent":97.46,"system.network.recv":7764756,"system.disk":22.4,"system.gpu.0.powerWatts":68.23,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":60.73,"system.gpu.0.gpu":85.87,"_runtime":1039,"system.proc.memory.rssMB":2962.16,"system.proc.memory.availableMB":11528.19,"system.cpu":97.55,"system.proc.cpu.threads":27.47,"system.memory":23.37,"system.proc.memory.percent":19.69,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509631}
-+{"system.network.sent":11508976,"system.gpu.0.powerPercent":102.06,"system.network.recv":7771440,"system.disk":22.4,"system.gpu.0.powerWatts":71.44,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.53,"system.gpu.0.gpu":85.6,"_runtime":1069,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11533.16,"system.cpu":99.91,"system.proc.cpu.threads":27,"system.memory":23.34,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509662}
-+{"system.network.sent":11522899,"system.gpu.0.powerPercent":93.89,"system.network.recv":7774171,"system.disk":22.4,"system.gpu.0.powerWatts":65.73,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.8,"_runtime":1099,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11449.37,"system.cpu":99.9,"system.proc.cpu.threads":27,"system.memory":23.89,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509692}
-+{"system.network.sent":12355982,"system.gpu.0.powerPercent":99.47,"system.network.recv":8325343,"system.disk":22.4,"system.gpu.0.powerWatts":69.63,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":53.6,"system.gpu.0.gpu":80.47,"_runtime":1129,"system.proc.memory.rssMB":2962.93,"system.proc.memory.availableMB":11549.31,"system.cpu":91.64,"system.proc.cpu.threads":27.73,"system.memory":23.23,"system.proc.memory.percent":19.7,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509722}
-+{"system.network.sent":13392411,"system.gpu.0.powerPercent":96.5,"system.network.recv":9022410,"system.disk":22.4,"system.gpu.0.powerWatts":67.55,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":66.2,"system.gpu.0.gpu":86.73,"_runtime":1160,"system.proc.memory.rssMB":2966.31,"system.proc.memory.availableMB":11507.02,"system.cpu":96.58,"system.proc.cpu.threads":28,"system.memory":23.51,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509752}
-+{"system.network.sent":14052060,"system.gpu.0.powerPercent":93.62,"system.network.recv":9455229,"system.disk":22.4,"system.gpu.0.powerWatts":65.53,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":62.4,"system.gpu.0.gpu":86.33,"_runtime":1190,"system.proc.memory.rssMB":2964.4,"system.proc.memory.availableMB":11520.81,"system.cpu":96.15,"system.proc.cpu.threads":27.67,"system.memory":23.41,"system.proc.memory.percent":19.71,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509783}
-+{"system.network.sent":14116134,"system.gpu.0.powerPercent":97.24,"system.network.recv":9471018,"system.disk":22.4,"system.gpu.0.powerWatts":68.07,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.13,"_runtime":1220,"system.proc.memory.rssMB":2959.24,"system.proc.memory.availableMB":11527.75,"system.cpu":99.85,"system.proc.cpu.threads":27,"system.memory":23.39,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509813}
-+{"system.network.sent":14129520,"system.gpu.0.powerPercent":102.88,"system.network.recv":9474423,"system.disk":22.4,"system.gpu.0.powerWatts":72.02,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":56.33,"system.gpu.0.gpu":86.27,"_runtime":1250,"system.proc.memory.rssMB":2958.7,"system.proc.memory.availableMB":11472.54,"system.cpu":99.87,"system.proc.cpu.threads":27,"system.memory":23.75,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509843}
-+{"system.network.sent":14134644,"system.gpu.0.powerPercent":87.89,"system.network.recv":9477692,"system.disk":22.4,"system.gpu.0.powerWatts":61.52,"_wandb":true,"system.gpu.0.temp":76.75,"system.gpu.0.memory":39.12,"system.gpu.0.gpu":73.5,"_runtime":1267,"system.proc.memory.rssMB":2956.05,"system.proc.memory.availableMB":11567.16,"system.cpu":86.28,"system.proc.cpu.threads":26.38,"system.memory":23.1,"system.proc.memory.percent":19.65,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509859}
-+{"system.gpu.0.gpu": 81.67, "system.gpu.0.memory": 48.93, "system.gpu.0.memoryAllocated": 37.81, "system.gpu.0.temp": 76.87, "system.gpu.0.powerWatts": 64.4, "system.gpu.0.powerPercent": 92.01, "system.cpu": 37.97, "system.memory": 23.73, "system.disk": 22.4, "system.proc.memory.availableMB": 11472.72, "system.proc.memory.rssMB": 2972.11, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 27.93, "system.network.sent": 758361, "system.network.recv": 563087, "_wandb": true, "_timestamp": 1579509890, "_runtime": 1296}
-+{"system.gpu.0.gpu": 89.2, "system.gpu.0.memory": 54.2, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 71.05, "system.gpu.0.powerPercent": 101.51, "system.cpu": 38.42, "system.memory": 23.79, "system.disk": 22.4, "system.proc.memory.availableMB": 11462.96, "system.proc.memory.rssMB": 2972.18, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 1227510, "system.network.recv": 875686, "_wandb": true, "_timestamp": 1579509920, "_runtime": 1326}
-+{"system.gpu.0.gpu": 89.33, "system.gpu.0.memory": 53.87, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.2, "system.gpu.0.powerWatts": 68.12, "system.gpu.0.powerPercent": 97.31, "system.cpu": 38.65, "system.memory": 23.81, "system.disk": 22.4, "system.proc.memory.availableMB": 11461.55, "system.proc.memory.rssMB": 2972.18, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 1666981, "system.network.recv": 1169241, "_wandb": true, "_timestamp": 1579509950, "_runtime": 1356}
-+{"system.gpu.0.gpu": 89.6, "system.gpu.0.memory": 54.4, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 76.8, "system.gpu.0.powerWatts": 65.93, "system.gpu.0.powerPercent": 94.19, "system.cpu": 38.85, "system.memory": 23.85, "system.disk": 22.4, "system.proc.memory.availableMB": 11460.04, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 2085510, "system.network.recv": 1447740, "_wandb": true, "_timestamp": 1579509980, "_runtime": 1386}
-+{"system.gpu.0.gpu": 89.53, "system.gpu.0.memory": 54.2, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 61.94, "system.gpu.0.powerPercent": 88.48, "system.cpu": 38.46, "system.memory": 23.84, "system.disk": 22.4, "system.proc.memory.availableMB": 11461.03, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 2506923, "system.network.recv": 1726051, "_wandb": true, "_timestamp": 1579510011, "_runtime": 1416}
-+{"system.gpu.0.gpu": 89.6, "system.gpu.0.memory": 54.4, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.07, "system.gpu.0.powerWatts": 70.87, "system.gpu.0.powerPercent": 101.25, "system.cpu": 38.67, "system.memory": 23.83, "system.disk": 22.4, "system.proc.memory.availableMB": 11460.28, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 2927846, "system.network.recv": 2010982, "_wandb": true, "_timestamp": 1579510041, "_runtime": 1446}
-+{"system.gpu.0.gpu": 90.2, "system.gpu.0.memory": 54.4, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 73.43, "system.gpu.0.powerPercent": 104.9, "system.cpu": 38.77, "system.memory": 23.89, "system.disk": 22.4, "system.proc.memory.availableMB": 11452.43, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 3356480, "system.network.recv": 2290911, "_wandb": true, "_timestamp": 1579510071, "_runtime": 1477}
-+{"system.gpu.0.gpu": 89.67, "system.gpu.0.memory": 54.13, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 75.49, "system.gpu.0.powerPercent": 107.84, "system.cpu": 38.83, "system.memory": 24.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11301.4, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 3779986, "system.network.recv": 2571164, "_wandb": true, "_timestamp": 1579510101, "_runtime": 1507}
-+{"system.gpu.0.gpu": 89.8, "system.gpu.0.memory": 54.4, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 61.33, "system.gpu.0.powerPercent": 87.61, "system.cpu": 38.63, "system.memory": 24.85, "system.disk": 22.4, "system.proc.memory.availableMB": 11302.55, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 4195859, "system.network.recv": 2844061, "_wandb": true, "_timestamp": 1579510131, "_runtime": 1537}
-+{"system.gpu.0.gpu": 85.8, "system.gpu.0.memory": 53.33, "system.gpu.0.memoryAllocated": 37.95, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 62.38, "system.gpu.0.powerPercent": 89.12, "system.cpu": 56.72, "system.memory": 24.3, "system.disk": 22.4, "system.proc.memory.availableMB": 11387.01, "system.proc.memory.rssMB": 2969.03, "system.proc.memory.percent": 19.74, "system.proc.cpu.threads": 27.67, "system.network.sent": 4493831, "system.network.recv": 3041280, "_wandb": true, "_timestamp": 1579510161, "_runtime": 1567}
-+{"system.gpu.0.gpu": 86.2, "system.gpu.0.memory": 56.4, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 71.41, "system.gpu.0.powerPercent": 102.01, "system.cpu": 99.85, "system.memory": 23.4, "system.disk": 22.4, "system.proc.memory.availableMB": 11522.27, "system.proc.memory.rssMB": 2964.5, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 27.0, "system.network.sent": 4498491, "system.network.recv": 3091323, "_wandb": true, "_timestamp": 1579510192, "_runtime": 1597}
-+{"system.gpu.0.gpu": 85.87, "system.gpu.0.memory": 55.8, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 76.67, "system.gpu.0.powerWatts": 71.14, "system.gpu.0.powerPercent": 101.63, "system.cpu": 99.9, "system.memory": 23.45, "system.disk": 22.4, "system.proc.memory.availableMB": 11515.83, "system.proc.memory.rssMB": 2965.05, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 27.0, "system.network.sent": 4501885, "system.network.recv": 3092980, "_wandb": true, "_timestamp": 1579510222, "_runtime": 1628}
-+{"system.gpu.0.gpu": 81.0, "system.gpu.0.memory": 45.8, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 76.8, "system.gpu.0.powerWatts": 69.12, "system.gpu.0.powerPercent": 98.74, "system.cpu": 66.55, "system.memory": 23.26, "system.disk": 22.4, "system.proc.memory.availableMB": 11546.79, "system.proc.memory.rssMB": 2967.48, "system.proc.memory.percent": 19.73, "system.proc.cpu.threads": 27.2, "system.network.sent": 4796843, "system.network.recv": 3293537, "_wandb": true, "_timestamp": 1579510252, "_runtime": 1658}
-+{"system.gpu.0.gpu": 89.4, "system.gpu.0.memory": 54.07, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 66.42, "system.gpu.0.powerPercent": 94.89, "system.cpu": 38.99, "system.memory": 23.73, "system.disk": 22.4, "system.proc.memory.availableMB": 11475.88, "system.proc.memory.rssMB": 2973.86, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 5353158, "system.network.recv": 3638383, "_wandb": true, "_timestamp": 1579510282, "_runtime": 1688}
-+{"system.gpu.0.gpu": 89.47, "system.gpu.0.memory": 54.2, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 72.24, "system.gpu.0.powerPercent": 103.2, "system.cpu": 38.73, "system.memory": 23.75, "system.disk": 22.4, "system.proc.memory.availableMB": 11472.79, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 5835668, "system.network.recv": 4000743, "_wandb": true, "_timestamp": 1579510312, "_runtime": 1718}
-+{"system.gpu.0.gpu": 89.53, "system.gpu.0.memory": 54.13, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.07, "system.gpu.0.powerWatts": 64.27, "system.gpu.0.powerPercent": 91.82, "system.cpu": 38.81, "system.memory": 23.75, "system.disk": 22.4, "system.proc.memory.availableMB": 11471.81, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 6261668, "system.network.recv": 4287637, "_wandb": true, "_timestamp": 1579510343, "_runtime": 1748}
-+{"system.gpu.0.gpu": 89.6, "system.gpu.0.memory": 54.27, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 69.51, "system.gpu.0.powerPercent": 99.3, "system.cpu": 38.54, "system.memory": 23.75, "system.disk": 22.4, "system.proc.memory.availableMB": 11472.59, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 6700788, "system.network.recv": 4577856, "_wandb": true, "_timestamp": 1579510373, "_runtime": 1778}
-+{"system.gpu.0.gpu": 89.8, "system.gpu.0.memory": 54.47, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 71.42, "system.gpu.0.powerPercent": 102.02, "system.cpu": 39.33, "system.memory": 24.39, "system.disk": 22.4, "system.proc.memory.availableMB": 11375.64, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 7142196, "system.network.recv": 4871182, "_wandb": true, "_timestamp": 1579510403, "_runtime": 1809}
-+{"system.gpu.0.gpu": 90.13, "system.gpu.0.memory": 54.6, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 59.28, "system.gpu.0.powerPercent": 84.68, "system.cpu": 38.85, "system.memory": 24.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11302.76, "system.proc.memory.rssMB": 2973.88, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 7583889, "system.network.recv": 5160633, "_wandb": true, "_timestamp": 1579510433, "_runtime": 1839}
-+{"system.gpu.0.gpu": 90.2, "system.gpu.0.memory": 54.53, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 64.21, "system.gpu.0.powerPercent": 91.73, "system.cpu": 38.73, "system.memory": 24.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11302.88, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 8007990, "system.network.recv": 5441264, "_wandb": true, "_timestamp": 1579510463, "_runtime": 1869}
-+{"system.gpu.0.gpu": 90.0, "system.gpu.0.memory": 54.53, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 66.28, "system.gpu.0.powerPercent": 94.68, "system.cpu": 38.74, "system.memory": 24.85, "system.disk": 22.4, "system.proc.memory.availableMB": 11303.79, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 8435309, "system.network.recv": 5727107, "_wandb": true, "_timestamp": 1579510493, "_runtime": 1899}
-+{"system.gpu.0.gpu": 89.6, "system.gpu.0.memory": 54.13, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 72.25, "system.gpu.0.powerPercent": 103.21, "system.cpu": 38.62, "system.memory": 24.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11303.35, "system.proc.memory.rssMB": 2973.88, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 8858885, "system.network.recv": 6006566, "_wandb": true, "_timestamp": 1579510523, "_runtime": 1929}
-+{"system.gpu.0.gpu": 86.67, "system.gpu.0.memory": 55.73, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 63.91, "system.gpu.0.powerPercent": 91.29, "system.cpu": 90.41, "system.memory": 23.54, "system.disk": 22.4, "system.proc.memory.availableMB": 11503.78, "system.proc.memory.rssMB": 2965.76, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 26.8, "system.network.sent": 8947611, "system.network.recv": 6062379, "_wandb": true, "_timestamp": 1579510554, "_runtime": 1959}
-+{"system.gpu.0.gpu": 86.07, "system.gpu.0.memory": 56.47, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 69.9, "system.gpu.0.powerPercent": 99.85, "system.cpu": 99.89, "system.memory": 23.77, "system.disk": 22.4, "system.proc.memory.availableMB": 11469.72, "system.proc.memory.rssMB": 2965.75, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 27.0, "system.network.sent": 8953536, "system.network.recv": 6079245, "_wandb": true, "_timestamp": 1579510584, "_runtime": 1990}
-+{"system.gpu.0.gpu": 78.33, "system.gpu.0.memory": 46.93, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.07, "system.gpu.0.powerWatts": 68.12, "system.gpu.0.powerPercent": 97.31, "system.cpu": 93.19, "system.memory": 24.17, "system.disk": 22.4, "system.proc.memory.availableMB": 11408.62, "system.proc.memory.rssMB": 2965.56, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 27.07, "system.network.sent": 9026902, "system.network.recv": 6145986, "_wandb": true, "_timestamp": 1579510614, "_runtime": 2020}
-+{"system.gpu.0.gpu": 89.53, "system.gpu.0.memory": 54.13, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 66.09, "system.gpu.0.powerPercent": 94.42, "system.cpu": 38.67, "system.memory": 23.71, "system.disk": 22.4, "system.proc.memory.availableMB": 11476.13, "system.proc.memory.rssMB": 2973.94, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 9596877, "system.network.recv": 6501867, "_wandb": true, "_timestamp": 1579510644, "_runtime": 2050}
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-index 6941a0a..f338a22 100644
---- a/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-@@ -1 +1,7 @@
--{"gradients/classifier.bias": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.0654682070016861, -0.06339701265096664, -0.06132581830024719, -0.05925462394952774, -0.05718342587351799, -0.05511223152279854, -0.053041037172079086, -0.050969842821359634, -0.048898644745349884, -0.04682745039463043, -0.04475625604391098, -0.04268506169319153, -0.040613867342472076, -0.038542672991752625, -0.03647147864103317, -0.03440028056502342, -0.03232908621430397, -0.03025789186358452, -0.028186697512865067, -0.026115499436855316, -0.024044305086135864, -0.021973110735416412, -0.01990191638469696, -0.01783072203397751, -0.015759527683258057, -0.013688329607248306, -0.011617135256528854, -0.009545940905809402, -0.0074747465550899506, -0.005403552204370499, -0.0033323541283607483, -0.0012611597776412964, 0.0008100345730781555, 0.0028812289237976074, 0.004952423274517059, 0.007023617625236511, 0.009094811975955963, 0.011166006326675415, 0.013237208127975464, 0.015308402478694916, 0.017379596829414368, 0.01945079118013382, 0.02152198553085327, 0.023593179881572723, 0.025664374232292175, 0.027735568583011627, 0.02980676293373108, 0.03187795728445053, 0.03394915163516998, 0.03602035343647003, 0.038091547787189484, 0.040162742137908936, 0.04223393648862839, 0.04430513083934784, 0.04637632519006729, 0.04844751954078674, 0.050518713891506195, 0.05258990824222565, 0.0546611025929451, 0.05673230439424515, 0.0588034987449646, 0.060874685645103455, 0.0629458874464035, 0.06501707434654236, 0.06708827614784241]}, "gradients/classifier.weight": {"_type": "histogram", "values": [1.0, 1.0, 1.0, 0.0, 3.0, 1.0, 5.0, 2.0, 4.0, 10.0, 9.0, 17.0, 15.0, 21.0, 30.0, 49.0, 53.0, 61.0, 86.0, 96.0, 118.0, 155.0, 170.0, 210.0, 214.0, 249.0, 229.0, 254.0, 272.0, 299.0, 314.0, 295.0, 344.0, 291.0, 277.0, 262.0, 259.0, 239.0, 186.0, 184.0, 169.0, 136.0, 111.0, 97.0, 83.0, 60.0, 47.0, 38.0, 19.0, 23.0, 20.0, 13.0, 17.0, 7.0, 8.0, 4.0, 1.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.09012244641780853, -0.08724749088287354, -0.08437253534793854, -0.08149757981300354, -0.07862262427806854, -0.07574766874313354, -0.07287271320819855, -0.06999775767326355, -0.06712280213832855, -0.06424784660339355, -0.06137289106845856, -0.05849793553352356, -0.05562297999858856, -0.052748024463653564, -0.04987306892871857, -0.04699811339378357, -0.04412315785884857, -0.041248202323913574, -0.03837324678897858, -0.03549829125404358, -0.03262333571910858, -0.029748380184173584, -0.026873424649238586, -0.02399846911430359, -0.02112351357936859, -0.018248558044433594, -0.015373602509498596, -0.012498646974563599, -0.009623691439628601, -0.0067487359046936035, -0.003873780369758606, -0.0009988248348236084, 0.0018761307001113892, 0.004751086235046387, 0.007626041769981384, 0.010500997304916382, 0.01337595283985138, 0.016250908374786377, 0.019125863909721375, 0.022000819444656372, 0.02487577497959137, 0.027750730514526367, 0.030625686049461365, 0.03350064158439636, 0.03637559711933136, 0.03925055265426636, 0.042125508189201355, 0.04500046372413635, 0.04787541925907135, 0.05075037479400635, 0.053625330328941345, 0.05650028586387634, 0.05937524139881134, 0.06225019693374634, 0.06512515246868134, 0.06800010800361633, 0.07087506353855133, 0.07375001907348633, 0.07662497460842133, 0.07949993014335632, 0.08237488567829132, 0.08524984121322632, 0.08812479674816132, 0.09099975228309631, 0.09387470781803131]}, "val_acc": 0.23687943262411348, "train_acc": 0.25812953441384673, "_runtime": 814.0969541072845, "_timestamp": 1579509224.6157851, "_step": 0}
-+{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.0654682070016861,-0.06339701265096664,-0.06132581830024719,-0.05925462394952774,-0.05718342587351799,-0.05511223152279854,-0.053041037172079086,-0.050969842821359634,-0.048898644745349884,-0.04682745039463043,-0.04475625604391098,-0.04268506169319153,-0.040613867342472076,-0.038542672991752625,-0.03647147864103317,-0.03440028056502342,-0.03232908621430397,-0.03025789186358452,-0.028186697512865067,-0.026115499436855316,-0.024044305086135864,-0.021973110735416412,-0.01990191638469696,-0.01783072203397751,-0.015759527683258057,-0.013688329607248306,-0.011617135256528854,-0.009545940905809402,-0.0074747465550899506,-0.005403552204370499,-0.0033323541283607483,-0.0012611597776412964,0.0008100345730781555,0.0028812289237976074,0.004952423274517059,0.007023617625236511,0.009094811975955963,0.011166006326675415,0.013237208127975464,0.015308402478694916,0.017379596829414368,0.01945079118013382,0.02152198553085327,0.023593179881572723,0.025664374232292175,0.027735568583011627,0.02980676293373108,0.03187795728445053,0.03394915163516998,0.03602035343647003,0.038091547787189484,0.040162742137908936,0.04223393648862839,0.04430513083934784,0.04637632519006729,0.04844751954078674,0.050518713891506195,0.05258990824222565,0.0546611025929451,0.05673230439424515,0.0588034987449646,0.060874685645103455,0.0629458874464035,0.06501707434654236,0.06708827614784241]},"gradients/classifier.weight":{"bins":[-0.09012244641780853,-0.08724749088287354,-0.08437253534793854,-0.08149757981300354,-0.07862262427806854,-0.07574766874313354,-0.07287271320819855,-0.06999775767326355,-0.06712280213832855,-0.06424784660339355,-0.06137289106845856,-0.05849793553352356,-0.05562297999858856,-0.052748024463653564,-0.04987306892871857,-0.04699811339378357,-0.04412315785884857,-0.041248202323913574,-0.03837324678897858,-0.03549829125404358,-0.03262333571910858,-0.029748380184173584,-0.026873424649238586,-0.02399846911430359,-0.02112351357936859,-0.018248558044433594,-0.015373602509498596,-0.012498646974563599,-0.009623691439628601,-0.0067487359046936035,-0.003873780369758606,-0.0009988248348236084,0.0018761307001113892,0.004751086235046387,0.007626041769981384,0.010500997304916382,0.01337595283985138,0.016250908374786377,0.019125863909721375,0.022000819444656372,0.02487577497959137,0.027750730514526367,0.030625686049461365,0.03350064158439636,0.03637559711933136,0.03925055265426636,0.042125508189201355,0.04500046372413635,0.04787541925907135,0.05075037479400635,0.053625330328941345,0.05650028586387634,0.05937524139881134,0.06225019693374634,0.06512515246868134,0.06800010800361633,0.07087506353855133,0.07375001907348633,0.07662497460842133,0.07949993014335632,0.08237488567829132,0.08524984121322632,0.08812479674816132,0.09099975228309631,0.09387470781803131],"_type":"histogram","values":[1,1,1,0,3,1,5,2,4,10,9,17,15,21,30,49,53,61,86,96,118,155,170,210,214,249,229,254,272,299,314,295,344,291,277,262,259,239,186,184,169,136,111,97,83,60,47,38,19,23,20,13,17,7,8,4,1,2,2,0,0,0,0,1]},"_step":0,"val_acc":0.23687943262411348,"train_acc":0.25812953441384673,"_runtime":814.0969541072845,"_timestamp":1.5795092246157851e+09}
-+{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1],"bins":[-0.07717597484588623,-0.07544030994176865,-0.07370464503765106,-0.07196898013353348,-0.0702333152294159,-0.06849765032529831,-0.06676198542118073,-0.06502632051706314,-0.06329065561294556,-0.06155499070882797,-0.05981932580471039,-0.058083660900592804,-0.05634799599647522,-0.054612331092357635,-0.05287666618824005,-0.05114100128412247,-0.04940533638000488,-0.0476696714758873,-0.045934006571769714,-0.04419834539294243,-0.042462680488824844,-0.04072701558470726,-0.038991350680589676,-0.03725568577647209,-0.03552002087235451,-0.03378435596823692,-0.03204869106411934,-0.030313026160001755,-0.02857736125588417,-0.026841696351766586,-0.025106031447649002,-0.023370366543531418,-0.021634701639413834,-0.01989903673529625,-0.018163371831178665,-0.01642770692706108,-0.014692042022943497,-0.012956380844116211,-0.011220715939998627,-0.009485051035881042,-0.007749386131763458,-0.006013721227645874,-0.00427805632352829,-0.0025423914194107056,-0.0008067265152931213,0.0009289383888244629,0.002664603292942047,0.004400268197059631,0.006135933101177216,0.0078715980052948,0.009607262909412384,0.011342927813529968,0.013078592717647552,0.014814257621765137,0.01654992252588272,0.018285587430000305,0.02002125233411789,0.021756917238235474,0.023492582142353058,0.025228247046470642,0.026963911950588226,0.02869957685470581,0.030435241758823395,0.03217090666294098,0.03390657156705856]},"gradients/classifier.weight":{"_type":"histogram","values":[1,0,1,0,1,1,3,1,1,2,4,9,11,17,27,29,40,36,67,86,99,128,150,186,242,222,248,298,311,327,349,317,357,337,321,308,284,232,208,178,153,140,97,76,67,43,32,35,19,16,10,6,2,2,3,3,0,0,0,0,0,0,0,1],"bins":[-0.10413810610771179,-0.10082836449146271,-0.09751862287521362,-0.09420888125896454,-0.09089913964271545,-0.08758939802646637,-0.08427965641021729,-0.0809699147939682,-0.07766017317771912,-0.07435043156147003,-0.07104068994522095,-0.06773094832897186,-0.06442121416330338,-0.06111147254705429,-0.057801730930805206,-0.05449198931455612,-0.05118224769830704,-0.04787250608205795,-0.04456276446580887,-0.041253022849559784,-0.0379432812333107,-0.034633539617061615,-0.03132379800081253,-0.028014056384563446,-0.02470432221889496,-0.021394580602645874,-0.01808483898639679,-0.014775097370147705,-0.01146535575389862,-0.008155614137649536,-0.004845872521400452,-0.0015361309051513672,0.0017736107110977173,0.005083352327346802,0.008393093943595886,0.01170283555984497,0.015012577176094055,0.01832231879234314,0.021632060408592224,0.02494180202484131,0.028251543641090393,0.03156128525733948,0.03487102687358856,0.038180768489837646,0.04149051010608673,0.044800251722335815,0.0481099933385849,0.051419734954833984,0.054729461669921875,0.05803920328617096,0.061348944902420044,0.06465868651866913,0.06796842813491821,0.0712781697511673,0.07458791136741638,0.07789765298366547,0.08120739459991455,0.08451713621616364,0.08782687783241272,0.0911366194486618,0.09444636106491089,0.09775610268115997,0.10106584429740906,0.10437558591365814,0.10768532752990723]},"_step":1,"val_acc":0.25011820330969264,"train_acc":0.258383926343752,"_runtime":974.3342196941376,"_timestamp":1.5795093848530507e+09}
-+{"gradients/classifier.bias":{"values":[1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.006489427760243416,-0.006147412117570639,-0.005805396940559149,-0.005463381297886372,-0.0051213656552135944,-0.004779350012540817,-0.004437334835529327,-0.00409531919285655,-0.0037533037830144167,-0.003411288373172283,-0.003069272730499506,-0.0027272573206573725,-0.002385241910815239,-0.0020432262681424618,-0.0017012106254696846,-0.0013591954484581947,-0.0010171798057854176,-0.0006751641631126404,-0.0003331489861011505,8.866656571626663e-06,0.00035088229924440384,0.0006928974762558937,0.0010349131189286709,0.001376928761601448,0.001718943938612938,0.0020609600469470024,0.0024029752239584923,0.002744990400969982,0.0030870065093040466,0.0034290216863155365,0.0037710368633270264,0.004113052971661091,0.004455068148672581,0.004797083325684071,0.005139099434018135,0.005481114611029625,0.005823129788041115,0.006165145896375179,0.006507161073386669,0.006849176250398159,0.0071911923587322235,0.007533207535743713,0.007875222712755203,0.008217238821089268,0.008559253998100758,0.008901269175112247,0.009243285283446312,0.009585300460457802,0.009927315637469292,0.010269330814480782,0.01061134785413742,0.01095336303114891,0.0112953782081604,0.01163739338517189,0.01197940856218338,0.01232142373919487,0.012663440778851509,0.013005455955862999,0.013347471132874489,0.013689486309885979,0.014031501486897469,0.014373516663908958,0.014715533703565598,0.015057548880577087,0.015399564057588577],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.07622425258159637,-0.07385586947202682,-0.07148748636245728,-0.06911909580230713,-0.06675071269273758,-0.06438232958316803,-0.06201394647359848,-0.05964556336402893,-0.05727717652916908,-0.054908789694309235,-0.052540406584739685,-0.050172023475170135,-0.047803640365600586,-0.04543525353074074,-0.04306687042117119,-0.04069848358631134,-0.03833010047674179,-0.03596171736717224,-0.03359333053231239,-0.031224947422742844,-0.028856560587882996,-0.026488177478313446,-0.024119794368743896,-0.02175140753388405,-0.0193830244243145,-0.01701464131474495,-0.014646254479885101,-0.012277871370315552,-0.009909488260746002,-0.007541105151176453,-0.005172714591026306,-0.0028043314814567566,-0.00043594837188720703,0.0019324347376823425,0.004300817847251892,0.006669208407402039,0.009037591516971588,0.011405974626541138,0.013774357736110687,0.016142740845680237,0.018511131405830383,0.020879514515399933,0.023247897624969482,0.025616280734539032,0.02798466384410858,0.03035304695367813,0.03272143751382828,0.03508982062339783,0.03745820373296738,0.039826586842536926,0.042194969952106476,0.04456336051225662,0.04693174362182617,0.049300119280815125,0.05166850984096527,0.05403690040111542,0.05640527606010437,0.05877366662025452,0.06114204227924347,0.06351043283939362,0.06587882339954376,0.06824719905853271,0.07061558961868286,0.07298396527767181,0.07535235583782196],"_type":"histogram","values":[1,2,2,4,0,3,3,1,11,7,15,14,23,25,27,43,59,66,75,106,101,128,148,168,174,206,231,240,275,266,300,299,271,298,285,266,270,214,209,214,192,142,152,94,103,94,63,48,43,36,29,22,19,17,12,8,5,3,1,6,3,1,0,1]},"_step":2,"val_acc":0.24964539007092199,"train_acc":0.2603407873430231,"_runtime":1133.4028816223145,"_timestamp":1.5795095439217126e+09}
-+{"gradients/classifier.bias":{"values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.06606416404247284,-0.06390783190727234,-0.06175149977207184,-0.05959516763687134,-0.05743883550167084,-0.05528250336647034,-0.053126171231269836,-0.050969839096069336,-0.048813506960868835,-0.046657174825668335,-0.044500842690467834,-0.042344510555267334,-0.040188178420066833,-0.03803184628486633,-0.03587551414966583,-0.03371918201446533,-0.03156284987926483,-0.02940651774406433,-0.02725018560886383,-0.02509385347366333,-0.02293752133846283,-0.02078118920326233,-0.01862485706806183,-0.016468524932861328,-0.014312192797660828,-0.012155860662460327,-0.009999528527259827,-0.007843196392059326,-0.005686864256858826,-0.003530532121658325,-0.0013741999864578247,0.0007821321487426758,0.0029384642839431763,0.005094796419143677,0.007251128554344177,0.009407460689544678,0.011563792824745178,0.013720124959945679,0.01587645709514618,0.01803278923034668,0.02018912136554718,0.02234545350074768,0.02450178563594818,0.02665811777114868,0.028814449906349182,0.030970782041549683,0.03312711417675018,0.035283446311950684,0.037439778447151184,0.039596110582351685,0.041752442717552185,0.043908774852752686,0.046065106987953186,0.048221439123153687,0.05037777125835419,0.05253410339355469,0.05469043552875519,0.05684676766395569,0.05900309979915619,0.06115943193435669,0.06331576406955719,0.06547209620475769,0.06762842833995819,0.06978476047515869,0.07194109261035919],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.09906706213951111,-0.09581608325242996,-0.09256510436534882,-0.08931412547826767,-0.08606314659118652,-0.08281217515468597,-0.07956118881702423,-0.07631021738052368,-0.07305923849344254,-0.06980825960636139,-0.06655728071928024,-0.0633063018321991,-0.06005532294511795,-0.056804344058036804,-0.053553368896245956,-0.05030239000916481,-0.047051411122083664,-0.04380043223500252,-0.04054945334792137,-0.037298478186130524,-0.03404749929904938,-0.03079652041196823,-0.027545541524887085,-0.02429456263780594,-0.021043583750724792,-0.017792604863643646,-0.0145416259765625,-0.01129065454006195,-0.008039675652980804,-0.004788696765899658,-0.001537717878818512,0.0017132610082626343,0.0049642398953437805,0.008215218782424927,0.011466197669506073,0.01471717655658722,0.017968155443668365,0.02121913433074951,0.02447010576725006,0.027721092104911804,0.030972063541412354,0.0342230498790741,0.037474021315574646,0.040724992752075195,0.04397597908973694,0.04722695052623749,0.05047793686389923,0.05372890830039978,0.05697989463806152,0.06023086607456207,0.06348185241222382,0.06673282384872437,0.06998381018638611,0.07323478162288666,0.07648575305938721,0.07973673939704895,0.0829877108335495,0.08623869717121124,0.08948966860771179,0.09274065494537354,0.09599162638187408,0.09924261271953583,0.10249358415603638,0.10574457049369812,0.10899554193019867],"_type":"histogram","values":[1,0,0,0,2,2,0,4,3,6,10,11,14,22,31,43,53,58,86,101,112,160,183,225,221,275,317,314,310,329,323,356,343,312,332,263,237,192,175,162,123,83,77,78,50,43,29,27,12,11,6,5,4,3,0,0,1,0,0,1,1,0,1,1]},"_step":3,"val_acc":0.26222222222222225,"train_acc":0.2627868635921119,"_runtime":1291.7072627544403,"_timestamp":1.5795097022260938e+09}
-+{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.037257447838783264,-0.035971060395240784,-0.034684669226408005,-0.033398281782865524,-0.032111890614032745,-0.030825503170490265,-0.029539113864302635,-0.028252724558115005,-0.026966335251927376,-0.025679945945739746,-0.024393556639552116,-0.023107167333364487,-0.021820779889822006,-0.020534390583634377,-0.019248001277446747,-0.017961611971259117,-0.016675222665071487,-0.015388833358883858,-0.014102444052696228,-0.012816054746508598,-0.011529665440320969,-0.010243277996778488,-0.008956888690590858,-0.007670499384403229,-0.006384110078215599,-0.005097720772027969,-0.003811333328485489,-0.00252494215965271,-0.0012385547161102295,4.783645272254944e-05,0.00133422389626503,0.002620615065097809,0.003907002508640289,0.00519338995218277,0.006479781121015549,0.007766168564558029,0.009052559733390808,0.010338947176933289,0.011625338345766068,0.012911725789308548,0.014198116958141327,0.015484504401683807,0.016770891845226288,0.018057283014059067,0.019343670457601547,0.020630061626434326,0.021916449069976807,0.023202840238809586,0.024489227682352066,0.025775618851184845,0.027062006294727325,0.028348393738269806,0.029634781181812286,0.030921176075935364,0.032207563519477844,0.033493950963020325,0.034780338406562805,0.036066725850105286,0.03735312074422836,0.038639508187770844,0.039925895631313324,0.041212283074855804,0.04249867796897888,0.04378506541252136,0.04507145285606384]},"gradients/classifier.weight":{"bins":[-0.0888357013463974,-0.08612215518951416,-0.08340860903263092,-0.08069506287574768,-0.07798151671886444,-0.0752679631114006,-0.07255441695451736,-0.06984087079763412,-0.06712732464075089,-0.06441377848386765,-0.061700232326984406,-0.05898668244481087,-0.05627313628792763,-0.05355959013104439,-0.05084604024887085,-0.04813249409198761,-0.04541894793510437,-0.04270540177822113,-0.03999185562133789,-0.03727830573916435,-0.03456475958228111,-0.03185121342539787,-0.029137663543224335,-0.026424117386341095,-0.023710571229457855,-0.020997025072574615,-0.018283478915691376,-0.015569932758808136,-0.0128563791513443,-0.01014283299446106,-0.00742928683757782,-0.00471574068069458,-0.0020021945238113403,0.0007113516330718994,0.003424897789955139,0.006138443946838379,0.008851990103721619,0.011565543711185455,0.014279089868068695,0.016992636024951935,0.019706182181835175,0.022419728338718414,0.025133274495601654,0.027846820652484894,0.03056037425994873,0.03327392041683197,0.03598746657371521,0.03870101273059845,0.04141455888748169,0.04412810504436493,0.04684165120124817,0.04955519735813141,0.05226874351501465,0.05498228967189789,0.05769583582878113,0.06040938198566437,0.0631229430437088,0.06583648920059204,0.06855003535747528,0.07126358151435852,0.07397712767124176,0.076690673828125,0.07940421998500824,0.08211776614189148,0.08483131229877472],"_type":"histogram","values":[1,0,0,0,2,0,1,0,10,6,9,13,11,18,18,29,47,58,58,70,96,103,104,181,183,180,232,264,280,262,304,320,289,307,281,323,255,289,218,224,185,155,132,132,118,76,65,59,48,22,30,26,17,9,5,3,4,2,3,3,1,2,0,1]},"_step":4,"val_acc":0.262789598108747,"train_acc":0.2653650279586515,"_runtime":1448.6882483959198,"_timestamp":1.5795098592070794e+09}
-+{"val_acc": 0.6363120567375886, "train_acc": 0.5801701490638866, "_runtime": 1825.7496349811554, "_timestamp": 1579510238.3097415, "_step": 5}
-+{"val_acc": 0.6672340425531915, "train_acc": 0.6266651664065672, "_runtime": 2201.1860706806183, "_timestamp": 1579510613.7461772, "_step": 6}
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json b/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-index 3724adb..351938b 100644
---- a/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-@@ -3,10 +3,10 @@
-     "program": "<python with no main file>",
-     "git": {
-         "remote": "https://github.com/ubamba98/droughtwatch",
--        "commit": "fea1daedb6b14125e1dec2c49a5e3b211d016f90"
-+        "commit": "4e7b9b38b8d5d3ec44d43373b8e263f50ead87a3"
-     },
-     "email": "ubamba98@gmail.com",
--    "startedAt": "2020-01-20T08:23:13.672686",
-+    "startedAt": "2020-01-20T08:44:21.248355",
-     "host": "ccw-iclr",
-     "username": "ubamba98",
-     "executable": "/home/ubamba98/anaconda3/bin/python",
-@@ -25,5 +25,5 @@
-     "mode": "run",
-     "name": "efficentnet-b3-765",
-     "project": "droughtwatch",
--    "heartbeatAt": "2020-01-20T08:36:16.324952"
-+    "heartbeatAt": "2020-01-20T08:57:27.146640"
- }
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-summary.json b/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-index 05e4af4..8c87848 100644
---- a/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-@@ -1 +1 @@
--{"graph_0": {"_type": "graph", "format": "torch", "nodes": [{"name": "conv_stem", "id": 140438557381128, "class_name": "Conv2dSame(3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False)", "parameters": [["weight", [40, 3, 3, 3]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [1080]}, {"name": "bn1", "id": 140438557383704, "class_name": "BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [40]], ["bias", [40]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [40, 40]}, {"name": "blocks.0.0", "id": 140438557382920, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)\n  (bn1): BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [40, 1, 3, 3]], ["bn1.weight", [40]], ["bn1.bias", [40]], ["se.conv_reduce.weight", [10, 40, 1, 1]], ["se.conv_reduce.bias", [10]], ["se.conv_expand.weight", [40, 10, 1, 1]], ["se.conv_expand.bias", [40]], ["conv_pw.weight", [24, 40, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [360, 40, 40, 400, 10, 400, 40, 960, 24, 24]}, {"name": "blocks.0.1", "id": 140438680665224, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)\n  (bn1): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [24, 1, 3, 3]], ["bn1.weight", [24]], ["bn1.bias", [24]], ["se.conv_reduce.weight", [6, 24, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [24, 6, 1, 1]], ["se.conv_expand.bias", [24]], ["conv_pw.weight", [24, 24, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [216, 24, 24, 144, 6, 144, 24, 576, 24, 24]}, {"name": "blocks.1.0", "id": 140438676598736, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(144, 144, kernel_size=(3, 3), stride=(2, 2), groups=144, bias=False)\n  (bn2): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [144, 24, 1, 1]], ["bn1.weight", [144]], ["bn1.bias", [144]], ["conv_dw.weight", [144, 1, 3, 3]], ["bn2.weight", [144]], ["bn2.bias", [144]], ["se.conv_reduce.weight", [6, 144, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [144, 6, 1, 1]], ["se.conv_expand.bias", [144]], ["conv_pwl.weight", [32, 144, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 4608, 32, 32]}, {"name": "blocks.1.1", "id": 140438557424160, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.1.2", "id": 140438679559640, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.2.0", "id": 140438679470320, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(192, 192, kernel_size=(5, 5), stride=(2, 2), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 5, 5]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [48, 192, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [6144, 192, 192, 4800, 192, 192, 1536, 8, 1536, 192, 9216, 48, 48]}, {"name": "blocks.2.1", "id": 140438557424384, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.2.2", "id": 140438557422704, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.3.0", "id": 140438557421920, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(288, 288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 3, 3]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [96, 288, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [13824, 288, 288, 2592, 288, 288, 3456, 12, 3456, 288, 27648, 96, 96]}, {"name": "blocks.3.1", "id": 140438557422816, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.2", "id": 140438557824392, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.3", "id": 140438557825232, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.4", "id": 140438557825176, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.4.0", "id": 140438557824672, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 5, 5]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [136, 576, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [55296, 576, 576, 14400, 576, 576, 13824, 24, 13824, 576, 78336, 136, 136]}, {"name": "blocks.4.1", "id": 140438557823496, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.2", "id": 140438679158968, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.3", "id": 140438679496744, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.4", "id": 140438679422456, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.5.0", "id": 140438679421448, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(816, 816, kernel_size=(5, 5), stride=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [232, 816, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 189312, 232, 232]}, {"name": "blocks.5.1", "id": 140438679580400, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.2", "id": 140438679115088, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.3", "id": 140438676984832, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.4", "id": 140440670709296, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.5", "id": 140440670710192, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.6.0", "id": 140440670709464, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 3, 3]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [384, 1392, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [322944, 1392, 1392, 12528, 1392, 1392, 80736, 58, 80736, 1392, 534528, 384, 384]}, {"name": "blocks.6.1", "id": 140438679947864, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(384, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)\n  (bn2): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(2304, 96, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(96, 2304, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(2304, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [2304, 384, 1, 1]], ["bn1.weight", [2304]], ["bn1.bias", [2304]], ["conv_dw.weight", [2304, 1, 3, 3]], ["bn2.weight", [2304]], ["bn2.bias", [2304]], ["se.conv_reduce.weight", [96, 2304, 1, 1]], ["se.conv_reduce.bias", [96]], ["se.conv_expand.weight", [2304, 96, 1, 1]], ["se.conv_expand.bias", [2304]], ["conv_pwl.weight", [384, 2304, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [884736, 2304, 2304, 20736, 2304, 2304, 221184, 96, 221184, 2304, 884736, 384, 384]}, {"name": "conv_head", "id": 140438557382584, "class_name": "Conv2d(384, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)", "parameters": [["weight", [1536, 384, 1, 1]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [589824]}, {"name": "bn2", "id": 140438703610848, "class_name": "BatchNorm2d(1536, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [1536]], ["bias", [1536]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [1536, 1536]}, {"name": "global_pool", "id": 140438703610792, "class_name": "SelectAdaptivePool2d (output_size=1, pool_type=avg)", "parameters": [], "output_shape": [[256, 1536, 1, 1]], "num_parameters": []}, {"name": "classifier", "id": 140438679885696, "class_name": "Linear(in_features=1536, out_features=4, bias=True)", "parameters": [["weight", [4, 1536]], ["bias", [4]]], "output_shape": [[256, 4]], "num_parameters": [6144, 4]}], "edges": []}, "train_acc": 0.25812953441384673, "_step": 0, "gradients/classifier.weight": {"_type": "histogram", "values": [1.0, 1.0, 1.0, 0.0, 3.0, 1.0, 5.0, 2.0, 4.0, 10.0, 9.0, 17.0, 15.0, 21.0, 30.0, 49.0, 53.0, 61.0, 86.0, 96.0, 118.0, 155.0, 170.0, 210.0, 214.0, 249.0, 229.0, 254.0, 272.0, 299.0, 314.0, 295.0, 344.0, 291.0, 277.0, 262.0, 259.0, 239.0, 186.0, 184.0, 169.0, 136.0, 111.0, 97.0, 83.0, 60.0, 47.0, 38.0, 19.0, 23.0, 20.0, 13.0, 17.0, 7.0, 8.0, 4.0, 1.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.09012244641780853, -0.08724749088287354, -0.08437253534793854, -0.08149757981300354, -0.07862262427806854, -0.07574766874313354, -0.07287271320819855, -0.06999775767326355, -0.06712280213832855, -0.06424784660339355, -0.06137289106845856, -0.05849793553352356, -0.05562297999858856, -0.052748024463653564, -0.04987306892871857, -0.04699811339378357, -0.04412315785884857, -0.041248202323913574, -0.03837324678897858, -0.03549829125404358, -0.03262333571910858, -0.029748380184173584, -0.026873424649238586, -0.02399846911430359, -0.02112351357936859, -0.018248558044433594, -0.015373602509498596, -0.012498646974563599, -0.009623691439628601, -0.0067487359046936035, -0.003873780369758606, -0.0009988248348236084, 0.0018761307001113892, 0.004751086235046387, 0.007626041769981384, 0.010500997304916382, 0.01337595283985138, 0.016250908374786377, 0.019125863909721375, 0.022000819444656372, 0.02487577497959137, 0.027750730514526367, 0.030625686049461365, 0.03350064158439636, 0.03637559711933136, 0.03925055265426636, 0.042125508189201355, 0.04500046372413635, 0.04787541925907135, 0.05075037479400635, 0.053625330328941345, 0.05650028586387634, 0.05937524139881134, 0.06225019693374634, 0.06512515246868134, 0.06800010800361633, 0.07087506353855133, 0.07375001907348633, 0.07662497460842133, 0.07949993014335632, 0.08237488567829132, 0.08524984121322632, 0.08812479674816132, 0.09099975228309631, 0.09387470781803131]}, "gradients/classifier.bias": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.0654682070016861, -0.06339701265096664, -0.06132581830024719, -0.05925462394952774, -0.05718342587351799, -0.05511223152279854, -0.053041037172079086, -0.050969842821359634, -0.048898644745349884, -0.04682745039463043, -0.04475625604391098, -0.04268506169319153, -0.040613867342472076, -0.038542672991752625, -0.03647147864103317, -0.03440028056502342, -0.03232908621430397, -0.03025789186358452, -0.028186697512865067, -0.026115499436855316, -0.024044305086135864, -0.021973110735416412, -0.01990191638469696, -0.01783072203397751, -0.015759527683258057, -0.013688329607248306, -0.011617135256528854, -0.009545940905809402, -0.0074747465550899506, -0.005403552204370499, -0.0033323541283607483, -0.0012611597776412964, 0.0008100345730781555, 0.0028812289237976074, 0.004952423274517059, 0.007023617625236511, 0.009094811975955963, 0.011166006326675415, 0.013237208127975464, 0.015308402478694916, 0.017379596829414368, 0.01945079118013382, 0.02152198553085327, 0.023593179881572723, 0.025664374232292175, 0.027735568583011627, 0.02980676293373108, 0.03187795728445053, 0.03394915163516998, 0.03602035343647003, 0.038091547787189484, 0.040162742137908936, 0.04223393648862839, 0.04430513083934784, 0.04637632519006729, 0.04844751954078674, 0.050518713891506195, 0.05258990824222565, 0.0546611025929451, 0.05673230439424515, 0.0588034987449646, 0.060874685645103455, 0.0629458874464035, 0.06501707434654236, 0.06708827614784241]}, "val_acc": 0.23687943262411348, "_runtime": 814.0969541072845, "_timestamp": 1579509224.6157851}
-+{"graph_0": {"_type": "graph", "format": "torch", "nodes": [{"name": "conv_stem", "id": 140438557381128, "class_name": "Conv2dSame(3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False)", "parameters": [["weight", [40, 3, 3, 3]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [1080]}, {"name": "bn1", "id": 140438557383704, "class_name": "BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [40]], ["bias", [40]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [40, 40]}, {"name": "blocks.0.0", "id": 140438557382920, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)\n  (bn1): BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [40, 1, 3, 3]], ["bn1.weight", [40]], ["bn1.bias", [40]], ["se.conv_reduce.weight", [10, 40, 1, 1]], ["se.conv_reduce.bias", [10]], ["se.conv_expand.weight", [40, 10, 1, 1]], ["se.conv_expand.bias", [40]], ["conv_pw.weight", [24, 40, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [360, 40, 40, 400, 10, 400, 40, 960, 24, 24]}, {"name": "blocks.0.1", "id": 140438680665224, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)\n  (bn1): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [24, 1, 3, 3]], ["bn1.weight", [24]], ["bn1.bias", [24]], ["se.conv_reduce.weight", [6, 24, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [24, 6, 1, 1]], ["se.conv_expand.bias", [24]], ["conv_pw.weight", [24, 24, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [216, 24, 24, 144, 6, 144, 24, 576, 24, 24]}, {"name": "blocks.1.0", "id": 140438676598736, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(144, 144, kernel_size=(3, 3), stride=(2, 2), groups=144, bias=False)\n  (bn2): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [144, 24, 1, 1]], ["bn1.weight", [144]], ["bn1.bias", [144]], ["conv_dw.weight", [144, 1, 3, 3]], ["bn2.weight", [144]], ["bn2.bias", [144]], ["se.conv_reduce.weight", [6, 144, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [144, 6, 1, 1]], ["se.conv_expand.bias", [144]], ["conv_pwl.weight", [32, 144, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 4608, 32, 32]}, {"name": "blocks.1.1", "id": 140438557424160, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.1.2", "id": 140438679559640, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.2.0", "id": 140438679470320, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(192, 192, kernel_size=(5, 5), stride=(2, 2), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 5, 5]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [48, 192, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [6144, 192, 192, 4800, 192, 192, 1536, 8, 1536, 192, 9216, 48, 48]}, {"name": "blocks.2.1", "id": 140438557424384, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.2.2", "id": 140438557422704, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.3.0", "id": 140438557421920, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(288, 288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 3, 3]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [96, 288, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [13824, 288, 288, 2592, 288, 288, 3456, 12, 3456, 288, 27648, 96, 96]}, {"name": "blocks.3.1", "id": 140438557422816, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.2", "id": 140438557824392, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.3", "id": 140438557825232, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.4", "id": 140438557825176, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.4.0", "id": 140438557824672, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 5, 5]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [136, 576, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [55296, 576, 576, 14400, 576, 576, 13824, 24, 13824, 576, 78336, 136, 136]}, {"name": "blocks.4.1", "id": 140438557823496, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.2", "id": 140438679158968, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.3", "id": 140438679496744, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.4", "id": 140438679422456, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.5.0", "id": 140438679421448, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(816, 816, kernel_size=(5, 5), stride=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [232, 816, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 189312, 232, 232]}, {"name": "blocks.5.1", "id": 140438679580400, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.2", "id": 140438679115088, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.3", "id": 140438676984832, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.4", "id": 140440670709296, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.5", "id": 140440670710192, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.6.0", "id": 140440670709464, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 3, 3]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [384, 1392, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [322944, 1392, 1392, 12528, 1392, 1392, 80736, 58, 80736, 1392, 534528, 384, 384]}, {"name": "blocks.6.1", "id": 140438679947864, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(384, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)\n  (bn2): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(2304, 96, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(96, 2304, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(2304, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [2304, 384, 1, 1]], ["bn1.weight", [2304]], ["bn1.bias", [2304]], ["conv_dw.weight", [2304, 1, 3, 3]], ["bn2.weight", [2304]], ["bn2.bias", [2304]], ["se.conv_reduce.weight", [96, 2304, 1, 1]], ["se.conv_reduce.bias", [96]], ["se.conv_expand.weight", [2304, 96, 1, 1]], ["se.conv_expand.bias", [2304]], ["conv_pwl.weight", [384, 2304, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [884736, 2304, 2304, 20736, 2304, 2304, 221184, 96, 221184, 2304, 884736, 384, 384]}, {"name": "conv_head", "id": 140438557382584, "class_name": "Conv2d(384, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)", "parameters": [["weight", [1536, 384, 1, 1]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [589824]}, {"name": "bn2", "id": 140438703610848, "class_name": "BatchNorm2d(1536, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [1536]], ["bias", [1536]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [1536, 1536]}, {"name": "global_pool", "id": 140438703610792, "class_name": "SelectAdaptivePool2d (output_size=1, pool_type=avg)", "parameters": [], "output_shape": [[256, 1536, 1, 1]], "num_parameters": []}, {"name": "classifier", "id": 140438679885696, "class_name": "Linear(in_features=1536, out_features=4, bias=True)", "parameters": [["weight", [4, 1536]], ["bias", [4]]], "output_shape": [[256, 4]], "num_parameters": [6144, 4]}], "edges": []}, "train_acc": 0.2653650279586515, "_step": 4, "gradients/classifier.weight": {"bins": [-0.0888357013463974, -0.08612215518951416, -0.08340860903263092, -0.08069506287574768, -0.07798151671886444, -0.0752679631114006, -0.07255441695451736, -0.06984087079763412, -0.06712732464075089, -0.06441377848386765, -0.061700232326984406, -0.05898668244481087, -0.05627313628792763, -0.05355959013104439, -0.05084604024887085, -0.04813249409198761, -0.04541894793510437, -0.04270540177822113, -0.03999185562133789, -0.03727830573916435, -0.03456475958228111, -0.03185121342539787, -0.029137663543224335, -0.026424117386341095, -0.023710571229457855, -0.020997025072574615, -0.018283478915691376, -0.015569932758808136, -0.0128563791513443, -0.01014283299446106, -0.00742928683757782, -0.00471574068069458, -0.0020021945238113403, 0.0007113516330718994, 0.003424897789955139, 0.006138443946838379, 0.008851990103721619, 0.011565543711185455, 0.014279089868068697, 0.016992636024951935, 0.019706182181835175, 0.022419728338718414, 0.025133274495601658, 0.027846820652484897, 0.03056037425994873, 0.03327392041683197, 0.03598746657371521, 0.03870101273059845, 0.04141455888748169, 0.04412810504436493, 0.04684165120124817, 0.04955519735813141, 0.05226874351501465, 0.05498228967189789, 0.05769583582878113, 0.06040938198566437, 0.0631229430437088, 0.06583648920059204, 0.06855003535747528, 0.07126358151435852, 0.07397712767124176, 0.076690673828125, 0.07940421998500824, 0.08211776614189148, 0.08483131229877472], "_type": "histogram", "values": [1, 0, 0, 0, 2, 0, 1, 0, 10, 6, 9, 13, 11, 18, 18, 29, 47, 58, 58, 70, 96, 103, 104, 181, 183, 180, 232, 264, 280, 262, 304, 320, 289, 307, 281, 323, 255, 289, 218, 224, 185, 155, 132, 132, 118, 76, 65, 59, 48, 22, 30, 26, 17, 9, 5, 3, 4, 2, 3, 3, 1, 2, 0, 1]}, "gradients/classifier.bias": {"bins": [-0.037257447838783264, -0.035971060395240784, -0.034684669226408005, -0.033398281782865524, -0.032111890614032745, -0.030825503170490265, -0.029539113864302635, -0.028252724558115005, -0.026966335251927376, -0.025679945945739743, -0.024393556639552116, -0.023107167333364487, -0.02182077988982201, -0.020534390583634377, -0.019248001277446747, -0.017961611971259117, -0.016675222665071487, -0.015388833358883858, -0.014102444052696228, -0.012816054746508598, -0.011529665440320969, -0.010243277996778488, -0.008956888690590858, -0.007670499384403229, -0.006384110078215599, -0.005097720772027969, -0.003811333328485489, -0.00252494215965271, -0.0012385547161102295, 4.783645272254944e-05, 0.00133422389626503, 0.002620615065097809, 0.003907002508640289, 0.00519338995218277, 0.006479781121015549, 0.007766168564558029, 0.009052559733390808, 0.010338947176933289, 0.011625338345766068, 0.012911725789308548, 0.014198116958141329, 0.015484504401683807, 0.016770891845226288, 0.018057283014059067, 0.019343670457601547, 0.02063006162643433, 0.021916449069976807, 0.023202840238809586, 0.024489227682352063, 0.025775618851184845, 0.027062006294727325, 0.02834839373826981, 0.029634781181812286, 0.030921176075935364, 0.032207563519477844, 0.033493950963020325, 0.034780338406562805, 0.036066725850105286, 0.03735312074422836, 0.03863950818777085, 0.03992589563131333, 0.04121228307485581, 0.04249867796897888, 0.04378506541252136, 0.04507145285606384], "_type": "histogram", "values": [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]}, "val_acc": 0.262789598108747, "_runtime": 1448.6882483959198, "_timestamp": 1579509859.2070794}
diff --git a/wandb/run-20200120_085802-wm904utc/requirements.txt b/wandb/run-20200120_085802-wm904utc/requirements.txt
deleted file mode 100644
index 2143393..0000000
--- a/wandb/run-20200120_085802-wm904utc/requirements.txt
+++ /dev/null
@@ -1,267 +0,0 @@
-absl-py==0.9.0
-alabaster==0.7.12
-albumentations==0.4.3
-anaconda-client==1.7.2
-anaconda-navigator==1.9.7
-anaconda-project==0.8.3
-argh==0.26.2
-asn1crypto==1.3.0
-astroid==2.3.3
-astropy==4.0
-atomicwrites==1.3.0
-attrs==19.3.0
-autopep8==1.4.4
-babel==2.8.0
-backcall==0.1.0
-backports.os==0.1.1
-backports.shutil-get-terminal-size==1.0.0
-beautifulsoup4==4.8.2
-bitarray==1.2.0
-bkcharts==0.2
-bleach==3.1.0
-bokeh==1.4.0
-boto==2.49.0
-bottleneck==1.3.1
-cachetools==4.0.0
-catalyst==20.1
-certifi==2019.11.28
-cffi==1.13.2
-chardet==3.0.4
-click==7.0
-cloudpickle==1.2.2
-clyent==1.2.2
-colorama==0.4.3
-conda-build==3.17.8
-conda-package-handling==1.6.0
-conda-verify==3.1.1
-conda==4.8.1
-configparser==4.0.2
-contextlib2==0.6.0.post1
-crc32c==2.0
-cryptography==2.8
-cycler==0.10.0
-cython==0.29.14
-cytoolz==0.10.1
-dask==2.9.1
-decorator==4.4.1
-defusedxml==0.6.0
-diff-match-patch==20181111
-distributed==2.9.1
-docker-pycreds==0.4.0
-docutils==0.15.2
-entrypoints==0.3
-et-xmlfile==1.0.1
-fastcache==1.1.0
-filelock==3.0.12
-flake8==3.7.9
-flask==1.1.1
-fsspec==0.6.2
-future==0.18.2
-gevent==1.4.0
-gitdb2==2.0.6
-gitpython==3.0.5
-glob2==0.7
-gmpy2==2.0.8
-google-auth-oauthlib==0.4.1
-google-auth==1.10.1
-gql==0.2.0
-graphql-core==1.1
-greenlet==0.4.15
-grpcio==1.26.0
-h5py==2.9.0
-heapdict==1.0.1
-html5lib==1.0.1
-hypothesis==4.54.2
-idna==2.8
-imageio==2.6.1
-imagesize==1.2.0
-imgaug==0.2.6
-importlib-metadata==1.3.0
-intervaltree==3.0.2
-ipykernel==5.1.3
-ipython-genutils==0.2.0
-ipython==7.11.1
-ipywidgets==7.5.1
-isort==4.3.21
-itsdangerous==1.1.0
-jdcal==1.4.1
-jedi==0.14.1
-jeepney==0.4.2
-jinja2==2.10.3
-joblib==0.14.1
-json5==0.8.5
-jsonschema==3.2.0
-jupyter-client==5.3.4
-jupyter-console==6.0.0
-jupyter-core==4.6.1
-jupyter==1.0.0
-jupyterlab-server==1.0.6
-jupyterlab==1.2.4
-keyring==20.0.0
-kiwisolver==1.1.0
-lazy-object-proxy==1.4.3
-libarchive-c==2.8
-lief==0.9.0
-llvmlite==0.31.0
-locket==0.2.0
-lxml==4.4.2
-markdown==3.1.1
-markupsafe==1.1.1
-matplotlib==3.1.1
-mccabe==0.6.1
-mistune==0.8.4
-mkl-fft==1.0.15
-mkl-random==1.1.0
-mkl-service==2.3.0
-mock==3.0.5
-more-itertools==8.0.2
-mpmath==1.1.0
-msgpack==0.6.1
-multipledispatch==0.6.0
-navigator-updater==0.2.1
-nbconvert==5.6.1
-nbformat==4.4.0
-networkx==2.4
-nltk==3.4.5
-nose==1.3.7
-notebook==6.0.2
-numba==0.47.0
-numexpr==2.7.0
-numpy==1.18.1
-numpydoc==0.9.2
-nvidia-ml-py3==7.352.0
-oauthlib==3.1.0
-olefile==0.46
-opencv-python-headless==4.1.2.30
-opencv-python==4.1.2.30
-openpyxl==3.0.2
-packaging==20.0
-pandas==0.25.3
-pandocfilters==1.4.2
-parso==0.5.2
-partd==1.1.0
-path==13.1.0
-pathlib2==2.3.5
-pathtools==0.1.2
-patsy==0.5.1
-pep8==1.7.1
-pexpect==4.7.0
-pickleshare==0.7.5
-pillow==6.2.1
-pip==19.3.1
-pkginfo==1.5.0.1
-plotly==4.4.1
-pluggy==0.13.1
-ply==3.11
-prometheus-client==0.7.1
-promise==2.3
-prompt-toolkit==2.0.10
-protobuf==3.11.2
-psutil==5.6.7
-ptyprocess==0.6.0
-py==1.8.1
-pyasn1-modules==0.2.8
-pyasn1==0.4.8
-pycodestyle==2.5.0
-pycosat==0.6.3
-pycparser==2.19
-pycrypto==2.6.1
-pycurl==7.43.0.3
-pydocstyle==4.0.1
-pyflakes==2.1.1
-pygments==2.5.2
-pylint==2.4.4
-pyodbc==4.0.27
-pyopenssl==19.1.0
-pyparsing==2.4.6
-pyrsistent==0.15.6
-pysocks==1.7.1
-pytest-arraydiff==0.3
-pytest-astropy-header==0.1.1
-pytest-astropy==0.7.0
-pytest-doctestplus==0.5.0
-pytest-openfiles==0.4.0
-pytest-remotedata==0.3.2
-pytest==5.3.2
-python-dateutil==2.8.1
-python-jsonrpc-server==0.3.2
-python-language-server==0.31.2
-pytz==2019.3
-pywavelets==1.1.1
-pyxdg==0.26
-pyyaml==5.2
-pyzmq==18.1.0
-qdarkstyle==2.7
-qtawesome==0.6.0
-qtconsole==4.6.0
-qtpy==1.9.0
-requests-oauthlib==1.3.0
-requests==2.22.0
-retrying==1.3.3
-rope==0.14.0
-rsa==4.0
-rtree==0.8.3
-ruamel-yaml==0.15.87
-safitty==1.3
-scikit-image==0.15.0
-scikit-learn==0.22.1
-scipy==1.3.2
-seaborn==0.9.0
-secretstorage==3.1.1
-send2trash==1.5.0
-sentry-sdk==0.14.0
-setuptools==45.0.0
-shortuuid==0.5.0
-simplegeneric==0.8.1
-singledispatch==3.4.0.3
-six==1.13.0
-smmap2==2.0.5
-snowballstemmer==2.0.0
-sortedcollections==1.1.2
-sortedcontainers==2.1.0
-soupsieve==1.9.5
-sphinx==2.3.1
-sphinxcontrib-applehelp==1.0.1
-sphinxcontrib-devhelp==1.0.1
-sphinxcontrib-htmlhelp==1.0.2
-sphinxcontrib-jsmath==1.0.1
-sphinxcontrib-qthelp==1.0.2
-sphinxcontrib-serializinghtml==1.1.3
-sphinxcontrib-websupport==1.1.2
-spyder-kernels==1.8.1
-spyder==4.0.1
-sqlalchemy==1.3.12
-statsmodels==0.10.1
-subprocess32==3.5.4
-sympy==1.5.1
-tables==3.6.1
-tblib==1.6.0
-tensorboard==2.1.0
-tensorboardx==2.0
-terminado==0.8.3
-testpath==0.4.4
-timm==0.1.14
-toolz==0.10.0
-torch==1.2.0
-torchvision==0.4.0a0
-tornado==6.0.3
-tqdm==4.41.1
-traitlets==4.3.3
-ujson==1.35
-unicodecsv==0.14.1
-urllib3==1.25.7
-wandb==0.8.21
-watchdog==0.9.0
-wcwidth==0.1.7
-webencodings==0.5.1
-werkzeug==0.16.0
-wheel==0.33.6
-widgetsnbextension==3.5.1
-wrapt==1.11.2
-wurlitzer==2.0.0
-xlrd==1.2.0
-xlsxwriter==1.2.7
-xlwt==1.3.0
-yapf==0.28.0
-zict==1.0.0
-zipp==0.6.0
\ No newline at end of file
diff --git a/wandb/run-20200120_085802-wm904utc/upstream_diff_fea1daedb6b14125e1dec2c49a5e3b211d016f90.patch b/wandb/run-20200120_085802-wm904utc/upstream_diff_fea1daedb6b14125e1dec2c49a5e3b211d016f90.patch
deleted file mode 100644
index 0682139..0000000
--- a/wandb/run-20200120_085802-wm904utc/upstream_diff_fea1daedb6b14125e1dec2c49a5e3b211d016f90.patch
+++ /dev/null
@@ -1,1247 +0,0 @@
-diff --git a/Efficientnet-b3-765.ipynb b/Efficientnet-b3-765.ipynb
-index 691c745..c4a9a21 100644
---- a/Efficientnet-b3-765.ipynb
-+++ b/Efficientnet-b3-765.ipynb
-@@ -47,7 +47,7 @@
-        "\n",
-        "                Logging results to <a href=\"https://wandb.com\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-        "                Project page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch</a><br/>\n",
--       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm</a><br/>\n",
-+       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae</a><br/>\n",
-        "            "
-       ],
-       "text/plain": [
-@@ -67,7 +67,7 @@
-     {
-      "data": {
-       "text/plain": [
--       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm"
-+       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae"
-       ]
-      },
-      "execution_count": 2,
-@@ -77,7 +77,16 @@
-    ],
-    "source": [
-     "import wandb\n",
--    "wandb.init(project=\"droughtwatch\")"
-+    "wandb.init(project='droughtwatch', name='efficentnet-b3-765')"
-+   ]
-+  },
-+  {
-+   "cell_type": "code",
-+   "execution_count": 3,
-+   "metadata": {},
-+   "outputs": [],
-+   "source": [
-+    "os.environ['WANDB_NOTEBOOK_NAME'] = \"efficentnet-b3-765\""
-    ]
-   },
-   {
-@@ -89,7 +98,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 3,
-+   "execution_count": 4,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -112,7 +121,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 4,
-+   "execution_count": 5,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -147,7 +156,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 5,
-+   "execution_count": 6,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -188,7 +197,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 6,
-+   "execution_count": 7,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -226,7 +235,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 7,
-+   "execution_count": 8,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -244,7 +253,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 8,
-+   "execution_count": 9,
-    "metadata": {},
-    "outputs": [
-     {
-@@ -584,7 +593,7 @@
-        ")"
-       ]
-      },
--     "execution_count": 8,
-+     "execution_count": 9,
-      "metadata": {},
-      "output_type": "execute_result"
-     }
-@@ -597,16 +606,16 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 9,
-+   "execution_count": 10,
-    "metadata": {},
-    "outputs": [
-     {
-      "data": {
-       "text/plain": [
--       "[<wandb.wandb_torch.TorchGraph at 0x7f4ae970e6d8>]"
-+       "[<wandb.wandb_torch.TorchGraph at 0x7fba6796b390>]"
-       ]
-      },
--     "execution_count": 9,
-+     "execution_count": 10,
-      "metadata": {},
-      "output_type": "execute_result"
-     }
-@@ -624,7 +633,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 10,
-+   "execution_count": 11,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -651,7 +660,24 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 11,
-+   "execution_count": 15,
-+   "metadata": {},
-+   "outputs": [
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "/home/ubamba98\n"
-+     ]
-+    }
-+   ],
-+   "source": [
-+    "cd .."
-+   ]
-+  },
-+  {
-+   "cell_type": "code",
-+   "execution_count": 16,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -694,7 +720,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 12,
-+   "execution_count": 17,
-    "metadata": {},
-    "outputs": [
-     {
-@@ -741,7 +767,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 13,
-+   "execution_count": 20,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -751,7 +777,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 14,
-+   "execution_count": 21,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -760,7 +786,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 17,
-+   "execution_count": 22,
-    "metadata": {
-     "scrolled": false
-    },
-@@ -775,7 +801,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "a613a74c934e4455b2b7bda8092750f6",
-+       "model_id": "80b522c9c4e64d92b6541c2f2c7d07b9",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -787,13 +813,6 @@
-      "output_type": "display_data"
-     },
-     {
--     "name": "stderr",
--     "output_type": "stream",
--     "text": [
--      "Failed to query for notebook name, you can set it manually with the WANDB_NOTEBOOK_NAME environment variable\n"
--     ]
--    },
--    {
-      "name": "stdout",
-      "output_type": "stream",
-      "text": [
-@@ -807,7 +826,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "c6559d9040414ad69b56af72a1ce0a07",
-+       "model_id": "04f71f6e37844647ae678399efcd907a",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -832,7 +851,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "eaee7f0b96914505a2d230b29921dd64",
-+       "model_id": "ee8db6d9d3e645098855574b993436d3",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -857,7 +876,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "87af1df00f004a05a4be631530bc1798",
-+       "model_id": "5ba7659d72cc455e9e844b732455ff47",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -882,7 +901,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "b78d43a2bd3b4bba9c9a7d60a572a916",
-+       "model_id": "f1e1f2aec05f43f6b6fbcbb5851eaa0f",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -929,8 +948,8 @@
-     "    print('Train accuracy: ', train_acc, ';    Val accuracy: ', val_acc, \"\\n\")\n",
-     "    df_data=np.array([train_acc_list, val_acc_list]).T\n",
-     "    wandb.log({\n",
--    "        \"Test Accuracy\": val_acc,\n",
--    "        \"Train accuracy\": train_acc})\n",
-+    "        \"val_acc\": val_acc,\n",
-+    "        \"train_acc\": train_acc})\n",
-     "    df = pd.DataFrame(df_data,columns = ['train_accuracy','test_accuracy'])\n",
-     "    df.to_csv('logs/b3-765.csv')\n",
-     "model_wgt = \"models/b3-765_1_e\" + str(epoch+1) + \".pth\"\n",
-@@ -939,7 +958,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 18,
-+   "execution_count": 23,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -963,7 +982,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "16450c2e6a644a40855ec79d4250f97d",
-+       "model_id": "41471032ce8d492088fa3f082c8f4a78",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -975,13 +994,6 @@
-      "output_type": "display_data"
-     },
-     {
--     "name": "stderr",
--     "output_type": "stream",
--     "text": [
--      "Failed to query for notebook name, you can set it manually with the WANDB_NOTEBOOK_NAME environment variable\n"
--     ]
--    },
--    {
-      "name": "stdout",
-      "output_type": "stream",
-      "text": [
-@@ -995,7 +1007,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "6d41a72300af4dff9d0d056e1346b049",
-+       "model_id": "8f09c911a2724da1b33add2597dadf3c",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -1011,147 +1023,8 @@
-      "output_type": "stream",
-      "text": [
-       "\n",
--      "Calculating accuracies\n",
--      "Train accuracy:  0.6266651664065672 ;    Val accuracy:  0.6672340425531915\n",
--      "*** New optimal found, saving state ***\n",
--      "Starting epoch 3 / 10\n"
-+      "Calculating accuracies\n"
-      ]
--    },
--    {
--     "data": {
--      "application/vnd.jupyter.widget-view+json": {
--       "model_id": "ebdaf6842b37444b9b84d94b336324ac",
--       "version_major": 2,
--       "version_minor": 0
--      },
--      "text/plain": [
--       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
--      ]
--     },
--     "metadata": {},
--     "output_type": "display_data"
--    },
--    {
--     "name": "stdout",
--     "output_type": "stream",
--     "text": [
--      "\n",
--      "Calculating accuracies\n",
--      "Train accuracy:  0.6697112162380325 ;    Val accuracy:  0.6526713947990543\n",
--      "Starting epoch 4 / 10\n"
--     ]
--    },
--    {
--     "data": {
--      "application/vnd.jupyter.widget-view+json": {
--       "model_id": "5ddcea86ad1f4e33bca80f7d8d4f0ed6",
--       "version_major": 2,
--       "version_minor": 0
--      },
--      "text/plain": [
--       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
--      ]
--     },
--     "metadata": {},
--     "output_type": "display_data"
--    },
--    {
--     "name": "stdout",
--     "output_type": "stream",
--     "text": [
--      "\n",
--      "Calculating accuracies\n",
--      "Train accuracy:  0.672612262669452 ;    Val accuracy:  0.6879432624113475\n",
--      "*** New optimal found, saving state ***\n",
--      "Starting epoch 5 / 10\n"
--     ]
--    },
--    {
--     "data": {
--      "application/vnd.jupyter.widget-view+json": {
--       "model_id": "d6f0bf6c69204257b4b188493814ef3f",
--       "version_major": 2,
--       "version_minor": 0
--      },
--      "text/plain": [
--       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
--      ]
--     },
--     "metadata": {},
--     "output_type": "display_data"
--    },
--    {
--     "name": "stdout",
--     "output_type": "stream",
--     "text": [
--      "\n",
--      "Calculating accuracies\n",
--      "Train accuracy:  0.6646625148599132 ;    Val accuracy:  0.6322458628841607\n",
--      "Starting epoch 6 / 10\n"
--     ]
--    },
--    {
--     "data": {
--      "application/vnd.jupyter.widget-view+json": {
--       "model_id": "3ccebae05875450aaa1062b6a58bafeb",
--       "version_major": 2,
--       "version_minor": 0
--      },
--      "text/plain": [
--       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
--      ]
--     },
--     "metadata": {},
--     "output_type": "display_data"
--    },
--    {
--     "name": "stdout",
--     "output_type": "stream",
--     "text": [
--      "\n",
--      "Calculating accuracies\n",
--      "Train accuracy:  0.7050668023423626 ;    Val accuracy:  0.6571158392434988\n",
--      "Starting epoch 7 / 10\n"
--     ]
--    },
--    {
--     "data": {
--      "application/vnd.jupyter.widget-view+json": {
--       "model_id": "ecfdae4c32ac4e3c90bfafb35a74898c",
--       "version_major": 2,
--       "version_minor": 0
--      },
--      "text/plain": [
--       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
--      ]
--     },
--     "metadata": {},
--     "output_type": "display_data"
--    },
--    {
--     "name": "stdout",
--     "output_type": "stream",
--     "text": [
--      "\n",
--      "Calculating accuracies\n",
--      "Train accuracy:  0.7046852144475048 ;    Val accuracy:  0.7300236406619386\n",
--      "*** New optimal found, saving state ***\n",
--      "Starting epoch 8 / 10\n"
--     ]
--    },
--    {
--     "data": {
--      "application/vnd.jupyter.widget-view+json": {
--       "model_id": "aaeca08757e84300b77429b26c30ac78",
--       "version_major": 2,
--       "version_minor": 0
--      },
--      "text/plain": [
--       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
--      ]
--     },
--     "metadata": {},
--     "output_type": "display_data"
-     }
-    ],
-    "source": [
-@@ -1182,8 +1055,8 @@
-     "    \n",
-     "    print('Train accuracy: ', train_acc, ';    Val accuracy: ', val_acc)\n",
-     "    wandb.log({\n",
--    "        \"Test Accuracy\": val_acc,\n",
--    "        \"Train accuracy\": train_acc})\n",
-+    "        \"val_acc\": val_acc,\n",
-+    "        \"train_acc\": train_acc})\n",
-     "    df_data=np.array([train_acc_list, val_acc_list]).T\n",
-     "    df = pd.DataFrame(df_data,columns = ['train_accuracy','test_accuracy'])\n",
-     "    df.to_csv('logs/b3-765.csv')\n",
-@@ -1271,8 +1144,8 @@
-     "    \n",
-     "    print('Train accuracy: ', train_acc, ';    Val accuracy: ', val_acc)\n",
-     "    wandb.log({\n",
--    "        \"Test Accuracy\": val_acc,\n",
--    "        \"Train accuracy\": train_acc})\n",
-+    "        \"val_acc\": val_acc,\n",
-+    "        \"train_acc\": train_acc})\n",
-     "    df_data=np.array([train_acc_list, val_acc_list]).T\n",
-     "    df = pd.DataFrame(df_data,columns = ['train_accuracy','test_accuracy'])\n",
-     "    df.to_csv('logs/b3-765.csv')\n",
-diff --git a/wandb/run-20200120_081855-gzutdaae/config.yaml b/wandb/run-20200120_081855-gzutdaae/config.yaml
-new file mode 100644
-index 0000000..1189525
---- /dev/null
-+++ b/wandb/run-20200120_081855-gzutdaae/config.yaml
-@@ -0,0 +1,8 @@
-+wandb_version: 1
-+
-+_wandb:
-+  desc: null
-+  value:
-+    cli_version: 0.8.21
-+    is_jupyter_run: true
-+    python_version: 3.7.3
-diff --git a/wandb/run-20200120_081855-gzutdaae/diff.patch b/wandb/run-20200120_081855-gzutdaae/diff.patch
-new file mode 100644
-index 0000000..1aee41d
---- /dev/null
-+++ b/wandb/run-20200120_081855-gzutdaae/diff.patch
-@@ -0,0 +1,370 @@
-+diff --git a/Efficientnet-b3-765.ipynb b/Efficientnet-b3-765.ipynb
-+index e21879d..451f688 100644
-+--- a/Efficientnet-b3-765.ipynb
-++++ b/Efficientnet-b3-765.ipynb
-+@@ -842,8 +842,75 @@
-+      "output_type": "stream",
-+      "text": [
-+       "\n",
-+-      "Calculating accuracies\n"
-++      "Calculating accuracies\n",
-++      "Train accuracy:  0.258383926343752 ;    Val accuracy:  0.25011820330969264 \n",
-++      "\n",
-++      "Starting epoch 3 / 5\n"
-++     ]
-++    },
-++    {
-++     "data": {
-++      "application/vnd.jupyter.widget-view+json": {
-++       "model_id": "ee8db6d9d3e645098855574b993436d3",
-++       "version_major": 2,
-++       "version_minor": 0
-++      },
-++      "text/plain": [
-++       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-++      ]
-++     },
-++     "metadata": {},
-++     "output_type": "display_data"
-++    },
-++    {
-++     "name": "stdout",
-++     "output_type": "stream",
-++     "text": [
-++      "\n",
-++      "Calculating accuracies\n",
-++      "Train accuracy:  0.2603407873430231 ;    Val accuracy:  0.24964539007092199 \n",
-++      "\n",
-++      "Starting epoch 4 / 5\n"
-+      ]
-++    },
-++    {
-++     "data": {
-++      "application/vnd.jupyter.widget-view+json": {
-++       "model_id": "5ba7659d72cc455e9e844b732455ff47",
-++       "version_major": 2,
-++       "version_minor": 0
-++      },
-++      "text/plain": [
-++       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-++      ]
-++     },
-++     "metadata": {},
-++     "output_type": "display_data"
-++    },
-++    {
-++     "name": "stdout",
-++     "output_type": "stream",
-++     "text": [
-++      "\n",
-++      "Calculating accuracies\n",
-++      "Train accuracy:  0.2627868635921119 ;    Val accuracy:  0.26222222222222225 \n",
-++      "\n",
-++      "Starting epoch 5 / 5\n"
-++     ]
-++    },
-++    {
-++     "data": {
-++      "application/vnd.jupyter.widget-view+json": {
-++       "model_id": "f1e1f2aec05f43f6b6fbcbb5851eaa0f",
-++       "version_major": 2,
-++       "version_minor": 0
-++      },
-++      "text/plain": [
-++       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-++      ]
-++     },
-++     "metadata": {},
-++     "output_type": "display_data"
-+     }
-+    ],
-+    "source": [
-+diff --git a/wandb/run-20200120_081855-gzutdaae/diff.patch b/wandb/run-20200120_081855-gzutdaae/diff.patch
-+index c6015c1..e69de29 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/diff.patch
-++++ b/wandb/run-20200120_081855-gzutdaae/diff.patch
-+@@ -1,201 +0,0 @@
-+-diff --git a/Efficientnet-b3-765.ipynb b/Efficientnet-b3-765.ipynb
-+-index 691c745..9cf4f55 100644
-+---- a/Efficientnet-b3-765.ipynb
-+-+++ b/Efficientnet-b3-765.ipynb
-+-@@ -47,7 +47,7 @@
-+-        "\n",
-+-        "                Logging results to <a href=\"https://wandb.com\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-+-        "                Project page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch</a><br/>\n",
-+--       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm</a><br/>\n",
-+-+       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae</a><br/>\n",
-+-        "            "
-+-       ],
-+-       "text/plain": [
-+-@@ -67,7 +67,7 @@
-+-     {
-+-      "data": {
-+-       "text/plain": [
-+--       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm"
-+-+       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae"
-+-       ]
-+-      },
-+-      "execution_count": 2,
-+-@@ -77,7 +77,16 @@
-+-    ],
-+-    "source": [
-+-     "import wandb\n",
-+--    "wandb.init(project=\"droughtwatch\")"
-+-+    "wandb.init(project='droughtwatch', name='efficentnet-b3-765')"
-+-+   ]
-+-+  },
-+-+  {
-+-+   "cell_type": "code",
-+-+   "execution_count": 3,
-+-+   "metadata": {},
-+-+   "outputs": [],
-+-+   "source": [
-+-+    "os.environ['WANDB_NOTEBOOK_NAME'] = \"efficentnet-b3-765\""
-+-    ]
-+-   },
-+-   {
-+-@@ -89,7 +98,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 3,
-+-+   "execution_count": 4,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -112,7 +121,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 4,
-+-+   "execution_count": 5,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -147,7 +156,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 5,
-+-+   "execution_count": 6,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -188,7 +197,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 6,
-+-+   "execution_count": 7,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -226,7 +235,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 7,
-+-+   "execution_count": 8,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -244,7 +253,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 8,
-+-+   "execution_count": 9,
-+-    "metadata": {},
-+-    "outputs": [
-+-     {
-+-@@ -584,7 +593,7 @@
-+-        ")"
-+-       ]
-+-      },
-+--     "execution_count": 8,
-+-+     "execution_count": 9,
-+-      "metadata": {},
-+-      "output_type": "execute_result"
-+-     }
-+-@@ -597,16 +606,16 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 9,
-+-+   "execution_count": 10,
-+-    "metadata": {},
-+-    "outputs": [
-+-     {
-+-      "data": {
-+-       "text/plain": [
-+--       "[<wandb.wandb_torch.TorchGraph at 0x7f4ae970e6d8>]"
-+-+       "[<wandb.wandb_torch.TorchGraph at 0x7fba6796b390>]"
-+-       ]
-+-      },
-+--     "execution_count": 9,
-+-+     "execution_count": 10,
-+-      "metadata": {},
-+-      "output_type": "execute_result"
-+-     }
-+-@@ -624,7 +633,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 10,
-+-+   "execution_count": 11,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -651,57 +660,20 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 11,
-+--   "metadata": {},
-+--   "outputs": [],
-+--   "source": [
-+--    "class ImageDataset(Dataset):\n",
-+--    "        \n",
-+--    "    def __init__(self, transform=None, limit=None, mode = \"train\", train_dir=\"train\", val_dir=\"val\", weights = [1, 1, 1, 1]):\n",
-+--    "        \n",
-+--    "        self.transform = transform\n",
-+--    "        self.limit = limit\n",
-+--    "        self.mode = mode\n",
-+--    "        self.train_dir = train_dir\n",
-+--    "        self.val_dir = val_dir\n",
-+--    "        self.train_files=[]\n",
-+--    "        for i in range(4):\n",
-+--    "            self.train_files += glob.glob(self.train_dir+\"/*\"+str(i)+\"/*\") * weights[i]\n",
-+--    "        self.val_files=glob.glob(self.val_dir+\"/*/*\")\n",
-+--    "        self.train_sample_count = len(self.train_files)\n",
-+--    "        self.val_sample_count = len(self.val_files)\n",
-+--    "        \n",
-+--    "    def __len__(self):\n",
-+--    "        if self.mode == \"train\":\n",
-+--    "            return (self.train_sample_count)\n",
-+--    "        else:\n",
-+--    "            return(self.val_sample_count)\n",
-+--    "\n",
-+--    "    def __getitem__(self, idx): \n",
-+--    "        if self.mode == \"train\":\n",
-+--    "            return (self.get_img(self.train_files[idx]), int(self.train_files[idx].split('/')[-2].split(\"_\")[-1]))\n",
-+--    "        if self.mode == \"val\":\n",
-+--    "            return (self.get_img(self.val_files[idx]), int(self.val_files[idx].split('/')[-2].split(\"_\")[-1]))\n",
-+--    "        \n",
-+--    "    def get_img(self, img_dir):\n",
-+--    "        img = np.load(img_dir)\n",
-+--    "        #img = img.transpose((1, 2, 0))\n",
-+--    "        img = img[:, :, [6, 5, 4]] ## Select for channels to run\n",
-+--    "        img = self.transform(img)\n",
-+--    "        img = torch.from_numpy(np.moveaxis(img, -1, 0)).float()  \n",
-+--    "        return img"
-+--   ]
-+--  },
-+--  {
-+--   "cell_type": "code",
-+--   "execution_count": 12,
-+-+   "execution_count": 14,
-+-    "metadata": {},
-+-    "outputs": [
-+-     {
-+--     "name": "stdout",
-+--     "output_type": "stream",
-+--     "text": [
-+--      "{'train': 799, 'val': 331}\n"
-+-+     "ename": "ValueError",
-+-+     "evalue": "num_samples should be a positive integer value, but got num_samples=0",
-+-+     "output_type": "error",
-+-+     "traceback": [
-+-+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
-+-+      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
-+-+      "\u001b[0;32m<ipython-input-14-06a69a7d0d7b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      5\u001b[0m                 \u001b[0mshuffle\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m                 \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m256\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m                 \u001b[0mnum_workers\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m             )\n\u001b[1;32m      9\u001b[0m valid_loader = DataLoader(\n",
-+-+      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/torch/utils/data/dataloader.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, dataset, batch_size, shuffle, sampler, batch_sampler, num_workers, collate_fn, pin_memory, drop_last, timeout, worker_init_fn, multiprocessing_context)\u001b[0m\n\u001b[1;32m    211\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# map-style\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    212\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mshuffle\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 213\u001b[0;31m                     \u001b[0msampler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mRandomSampler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    214\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    215\u001b[0m                     \u001b[0msampler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSequentialSampler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
-+-+      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/torch/utils/data/sampler.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data_source, replacement, num_samples)\u001b[0m\n\u001b[1;32m     92\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnum_samples\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnum_samples\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     93\u001b[0m             raise ValueError(\"num_samples should be a positive integer \"\n\u001b[0;32m---> 94\u001b[0;31m                              \"value, but got num_samples={}\".format(self.num_samples))\n\u001b[0m\u001b[1;32m     95\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     96\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
-+-+      "\u001b[0;31mValueError\u001b[0m: num_samples should be a positive integer value, but got num_samples=0"
-+-      ]
-+-     }
-+-    ],
-+diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-+index bebeecd..fbd17e8 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-++++ b/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-+@@ -1,26 +1,10 @@
-+-{"system.network.sent":15797,"system.gpu.0.powerPercent":41.9,"system.network.recv":65303,"system.disk":22.4,"system.gpu.0.powerWatts":29.33,"_wandb":true,"system.gpu.0.temp":61,"system.gpu.0.memory":0,"system.gpu.0.gpu":0,"_runtime":1,"system.proc.memory.rssMB":262.66,"system.proc.memory.availableMB":14300.84,"system.cpu":13.75,"system.proc.cpu.threads":17,"system.memory":4.9,"system.proc.memory.percent":1.75,"system.gpu.0.memoryAllocated":0,"_timestamp":1579508336}
-+-{"system.gpu.0.gpu": 10.2, "system.gpu.0.memory": 7.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 68.0, "system.gpu.0.powerWatts": 37.18, "system.gpu.0.powerPercent": 53.11, "system.cpu": 6.9, "system.memory": 22.68, "system.disk": 22.4, "system.proc.memory.availableMB": 11632.24, "system.proc.memory.rssMB": 2960.92, "system.proc.memory.percent": 19.68, "system.proc.cpu.threads": 27.87, "system.network.sent": 244468, "system.network.recv": 251940, "_wandb": true, "_timestamp": 1579508635, "_runtime": 42}
-+-{"system.gpu.0.gpu": 5.47, "system.gpu.0.memory": 4.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 69.93, "system.gpu.0.powerWatts": 38.27, "system.gpu.0.powerPercent": 54.67, "system.cpu": 6.63, "system.memory": 22.78, "system.disk": 22.4, "system.proc.memory.availableMB": 11615.58, "system.proc.memory.rssMB": 2961.46, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 339293, "system.network.recv": 337753, "_wandb": true, "_timestamp": 1579508665, "_runtime": 73}
-+-{"system.gpu.0.gpu": 8.87, "system.gpu.0.memory": 6.47, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 72.07, "system.gpu.0.powerWatts": 40.58, "system.gpu.0.powerPercent": 57.97, "system.cpu": 7.19, "system.memory": 22.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11605.85, "system.proc.memory.rssMB": 2961.46, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 431682, "system.network.recv": 429114, "_wandb": true, "_timestamp": 1579508695, "_runtime": 103}
-+-{"system.gpu.0.gpu": 8.67, "system.gpu.0.memory": 5.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 73.27, "system.gpu.0.powerWatts": 36.56, "system.gpu.0.powerPercent": 52.23, "system.cpu": 7.94, "system.memory": 22.88, "system.disk": 22.4, "system.proc.memory.availableMB": 11602.32, "system.proc.memory.rssMB": 2961.81, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 534529, "system.network.recv": 530758, "_wandb": true, "_timestamp": 1579508725, "_runtime": 133}
-+-{"system.gpu.0.gpu": 8.87, "system.gpu.0.memory": 5.8, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 74.93, "system.gpu.0.powerWatts": 43.21, "system.gpu.0.powerPercent": 61.73, "system.cpu": 8.45, "system.memory": 22.98, "system.disk": 22.4, "system.proc.memory.availableMB": 11587.51, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 635626, "system.network.recv": 634655, "_wandb": true, "_timestamp": 1579508756, "_runtime": 163}
-+-{"system.gpu.0.gpu": 9.87, "system.gpu.0.memory": 7.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 42.67, "system.gpu.0.powerPercent": 60.96, "system.cpu": 8.79, "system.memory": 23.02, "system.disk": 22.4, "system.proc.memory.availableMB": 11581.47, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 748987, "system.network.recv": 747904, "_wandb": true, "_timestamp": 1579508786, "_runtime": 193}
-+-{"system.gpu.0.gpu": 11.87, "system.gpu.0.memory": 8.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.67, "system.gpu.0.powerWatts": 44.82, "system.gpu.0.powerPercent": 64.03, "system.cpu": 9.73, "system.memory": 23.07, "system.disk": 22.4, "system.proc.memory.availableMB": 11575.17, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 873256, "system.network.recv": 874007, "_wandb": true, "_timestamp": 1579508816, "_runtime": 223}
-+-{"system.gpu.0.gpu": 11.0, "system.gpu.0.memory": 8.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.27, "system.gpu.0.powerWatts": 38.19, "system.gpu.0.powerPercent": 54.55, "system.cpu": 10.57, "system.memory": 23.05, "system.disk": 22.4, "system.proc.memory.availableMB": 11572.48, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1023164, "system.network.recv": 1026940, "_wandb": true, "_timestamp": 1579508846, "_runtime": 253}
-+-{"system.gpu.0.gpu": 14.2, "system.gpu.0.memory": 10.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.27, "system.gpu.0.powerWatts": 42.89, "system.gpu.0.powerPercent": 61.28, "system.cpu": 11.98, "system.memory": 23.15, "system.disk": 22.4, "system.proc.memory.availableMB": 11561.87, "system.proc.memory.rssMB": 2962.21, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1178866, "system.network.recv": 1181511, "_wandb": true, "_timestamp": 1579508876, "_runtime": 283}
-+-{"system.gpu.0.gpu": 13.0, "system.gpu.0.memory": 10.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 78.0, "system.gpu.0.powerWatts": 50.01, "system.gpu.0.powerPercent": 71.45, "system.cpu": 13.59, "system.memory": 23.22, "system.disk": 22.4, "system.proc.memory.availableMB": 11553.44, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1331123, "system.network.recv": 1336366, "_wandb": true, "_timestamp": 1579508906, "_runtime": 314}
-+-{"system.gpu.0.gpu": 25.13, "system.gpu.0.memory": 21.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.33, "system.gpu.0.powerWatts": 45.73, "system.gpu.0.powerPercent": 65.33, "system.cpu": 15.11, "system.memory": 23.2, "system.disk": 22.4, "system.proc.memory.availableMB": 11550.57, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1518597, "system.network.recv": 1523627, "_wandb": true, "_timestamp": 1579508936, "_runtime": 344}
-+-{"system.gpu.0.gpu": 19.67, "system.gpu.0.memory": 16.87, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.53, "system.gpu.0.powerWatts": 49.57, "system.gpu.0.powerPercent": 70.82, "system.cpu": 17.23, "system.memory": 23.21, "system.disk": 22.4, "system.proc.memory.availableMB": 11547.93, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1702121, "system.network.recv": 1710364, "_wandb": true, "_timestamp": 1579508966, "_runtime": 374}
-+-{"system.gpu.0.gpu": 18.4, "system.gpu.0.memory": 15.73, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.2, "system.gpu.0.powerWatts": 51.24, "system.gpu.0.powerPercent": 73.2, "system.cpu": 18.21, "system.memory": 23.35, "system.disk": 22.4, "system.proc.memory.availableMB": 11531.67, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1856007, "system.network.recv": 1863572, "_wandb": true, "_timestamp": 1579508997, "_runtime": 404}
-+-{"system.gpu.0.gpu": 18.8, "system.gpu.0.memory": 16.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.47, "system.gpu.0.powerWatts": 49.62, "system.gpu.0.powerPercent": 70.89, "system.cpu": 19.99, "system.memory": 23.32, "system.disk": 22.4, "system.proc.memory.availableMB": 11535.11, "system.proc.memory.rssMB": 2962.48, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2016161, "system.network.recv": 2023461, "_wandb": true, "_timestamp": 1579509027, "_runtime": 434}
-+-{"system.gpu.0.gpu": 21.0, "system.gpu.0.memory": 18.07, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.13, "system.gpu.0.powerWatts": 50.49, "system.gpu.0.powerPercent": 72.13, "system.cpu": 20.69, "system.memory": 23.18, "system.disk": 22.4, "system.proc.memory.availableMB": 11552.24, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2245090, "system.network.recv": 2255638, "_wandb": true, "_timestamp": 1579509057, "_runtime": 464}
-+-{"system.gpu.0.gpu": 17.07, "system.gpu.0.memory": 14.13, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.13, "system.gpu.0.powerWatts": 51.83, "system.gpu.0.powerPercent": 74.04, "system.cpu": 21.11, "system.memory": 23.25, "system.disk": 22.4, "system.proc.memory.availableMB": 11542.37, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2746309, "system.network.recv": 2487509, "_wandb": true, "_timestamp": 1579509087, "_runtime": 494}
-+-{"system.gpu.0.gpu": 66.47, "system.gpu.0.memory": 44.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 78.4, "system.gpu.0.powerWatts": 64.54, "system.gpu.0.powerPercent": 92.21, "system.cpu": 78.97, "system.memory": 23.2, "system.disk": 22.4, "system.proc.memory.availableMB": 11552.42, "system.proc.memory.rssMB": 2957.19, "system.proc.memory.percent": 19.66, "system.proc.cpu.threads": 27.2, "system.network.sent": 3696180, "system.network.recv": 2568386, "_wandb": true, "_timestamp": 1579509117, "_runtime": 525}
-+-{"system.gpu.0.gpu": 82.13, "system.gpu.0.memory": 53.73, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.33, "system.gpu.0.powerWatts": 67.07, "system.gpu.0.powerPercent": 95.82, "system.cpu": 99.89, "system.memory": 23.25, "system.disk": 22.4, "system.proc.memory.availableMB": 11541.6, "system.proc.memory.rssMB": 2956.42, "system.proc.memory.percent": 19.65, "system.proc.cpu.threads": 27.0, "system.network.sent": 3700982, "system.network.recv": 2571448, "_wandb": true, "_timestamp": 1579509147, "_runtime": 555}
-+-{"system.gpu.0.gpu": 78.07, "system.gpu.0.memory": 50.87, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.0, "system.gpu.0.powerWatts": 62.66, "system.gpu.0.powerPercent": 89.52, "system.cpu": 93.01, "system.memory": 23.62, "system.disk": 22.4, "system.proc.memory.availableMB": 11490.1, "system.proc.memory.rssMB": 2955.65, "system.proc.memory.percent": 19.65, "system.proc.cpu.threads": 27.0, "system.network.sent": 3709404, "system.network.recv": 2574045, "_wandb": true, "_timestamp": 1579509178, "_runtime": 585}
-+-{"system.gpu.0.gpu": 15.07, "system.gpu.0.memory": 3.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 71.73, "system.gpu.0.powerWatts": 34.48, "system.gpu.0.powerPercent": 49.26, "system.cpu": 25.27, "system.memory": 22.4, "system.disk": 22.4, "system.proc.memory.availableMB": 11676.86, "system.proc.memory.rssMB": 2950.69, "system.proc.memory.percent": 19.61, "system.proc.cpu.threads": 27.0, "system.network.sent": 3721790, "system.network.recv": 2631378, "_wandb": true, "_timestamp": 1579509208, "_runtime": 615}
-+-{"system.gpu.0.gpu": 45.27, "system.gpu.0.memory": 29.07, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 74.07, "system.gpu.0.powerWatts": 48.68, "system.gpu.0.powerPercent": 69.55, "system.cpu": 61.3, "system.memory": 22.83, "system.disk": 22.4, "system.proc.memory.availableMB": 11611.68, "system.proc.memory.rssMB": 2958.09, "system.proc.memory.percent": 19.66, "system.proc.cpu.threads": 27.47, "system.network.sent": 4312731, "system.network.recv": 3024984, "_wandb": true, "_timestamp": 1579509238, "_runtime": 645}
-+-{"system.gpu.0.gpu": 85.27, "system.gpu.0.memory": 64.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 80.4, "system.gpu.0.powerWatts": 69.5, "system.gpu.0.powerPercent": 99.29, "system.cpu": 98.87, "system.memory": 23.4, "system.disk": 22.4, "system.proc.memory.availableMB": 11523.09, "system.proc.memory.rssMB": 2965.59, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 28.0, "system.network.sent": 5355584, "system.network.recv": 3684826, "_wandb": true, "_timestamp": 1579509268, "_runtime": 675}
-+-{"system.gpu.0.gpu": 82.67, "system.gpu.0.memory": 63.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.13, "system.gpu.0.powerWatts": 68.41, "system.gpu.0.powerPercent": 97.73, "system.cpu": 97.43, "system.memory": 23.36, "system.disk": 22.4, "system.proc.memory.availableMB": 11527.65, "system.proc.memory.rssMB": 2966.13, "system.proc.memory.percent": 19.72, "system.proc.cpu.threads": 27.93, "system.network.sent": 6262772, "system.network.recv": 4284351, "_wandb": true, "_timestamp": 1579509298, "_runtime": 706}
-+-{"system.gpu.0.gpu": 84.6, "system.gpu.0.memory": 55.33, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.4, "system.gpu.0.powerWatts": 66.84, "system.gpu.0.powerPercent": 95.48, "system.cpu": 99.88, "system.memory": 23.27, "system.disk": 22.4, "system.proc.memory.availableMB": 11542.26, "system.proc.memory.rssMB": 2958.56, "system.proc.memory.percent": 19.67, "system.proc.cpu.threads": 27.0, "system.network.sent": 6275456, "system.network.recv": 4336424, "_wandb": true, "_timestamp": 1579509329, "_runtime": 736}
-+-{"system.gpu.0.gpu": 84.4, "system.gpu.0.memory": 55.13, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.73, "system.gpu.0.powerWatts": 73.68, "system.gpu.0.powerPercent": 105.26, "system.cpu": 99.89, "system.memory": 23.29, "system.disk": 22.4, "system.proc.memory.availableMB": 11538.26, "system.proc.memory.rssMB": 2958.56, "system.proc.memory.percent": 19.67, "system.proc.cpu.threads": 27.0, "system.network.sent": 6279094, "system.network.recv": 4342260, "_wandb": true, "_timestamp": 1579509359, "_runtime": 766}
-++{"system.network.sent":10977141,"system.gpu.0.powerPercent":96.79,"system.network.recv":7409894,"system.disk":22.4,"system.gpu.0.powerWatts":67.75,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":65.33,"system.gpu.0.gpu":85.6,"_runtime":1008,"system.proc.memory.rssMB":2966.29,"system.proc.memory.availableMB":11506.94,"system.cpu":98.25,"system.proc.cpu.threads":28,"system.memory":23.5,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509601}
-++{"system.network.sent":11502749,"system.gpu.0.powerPercent":97.46,"system.network.recv":7764756,"system.disk":22.4,"system.gpu.0.powerWatts":68.23,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":60.73,"system.gpu.0.gpu":85.87,"_runtime":1039,"system.proc.memory.rssMB":2962.16,"system.proc.memory.availableMB":11528.19,"system.cpu":97.55,"system.proc.cpu.threads":27.47,"system.memory":23.37,"system.proc.memory.percent":19.69,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509631}
-++{"system.network.sent":11508976,"system.gpu.0.powerPercent":102.06,"system.network.recv":7771440,"system.disk":22.4,"system.gpu.0.powerWatts":71.44,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.53,"system.gpu.0.gpu":85.6,"_runtime":1069,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11533.16,"system.cpu":99.91,"system.proc.cpu.threads":27,"system.memory":23.34,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509662}
-++{"system.network.sent":11522899,"system.gpu.0.powerPercent":93.89,"system.network.recv":7774171,"system.disk":22.4,"system.gpu.0.powerWatts":65.73,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.8,"_runtime":1099,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11449.37,"system.cpu":99.9,"system.proc.cpu.threads":27,"system.memory":23.89,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509692}
-++{"system.network.sent":12355982,"system.gpu.0.powerPercent":99.47,"system.network.recv":8325343,"system.disk":22.4,"system.gpu.0.powerWatts":69.63,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":53.6,"system.gpu.0.gpu":80.47,"_runtime":1129,"system.proc.memory.rssMB":2962.93,"system.proc.memory.availableMB":11549.31,"system.cpu":91.64,"system.proc.cpu.threads":27.73,"system.memory":23.23,"system.proc.memory.percent":19.7,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509722}
-++{"system.network.sent":13392411,"system.gpu.0.powerPercent":96.5,"system.network.recv":9022410,"system.disk":22.4,"system.gpu.0.powerWatts":67.55,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":66.2,"system.gpu.0.gpu":86.73,"_runtime":1160,"system.proc.memory.rssMB":2966.31,"system.proc.memory.availableMB":11507.02,"system.cpu":96.58,"system.proc.cpu.threads":28,"system.memory":23.51,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509752}
-++{"system.network.sent":14052060,"system.gpu.0.powerPercent":93.62,"system.network.recv":9455229,"system.disk":22.4,"system.gpu.0.powerWatts":65.53,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":62.4,"system.gpu.0.gpu":86.33,"_runtime":1190,"system.proc.memory.rssMB":2964.4,"system.proc.memory.availableMB":11520.81,"system.cpu":96.15,"system.proc.cpu.threads":27.67,"system.memory":23.41,"system.proc.memory.percent":19.71,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509783}
-++{"system.network.sent":14116134,"system.gpu.0.powerPercent":97.24,"system.network.recv":9471018,"system.disk":22.4,"system.gpu.0.powerWatts":68.07,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.13,"_runtime":1220,"system.proc.memory.rssMB":2959.24,"system.proc.memory.availableMB":11527.75,"system.cpu":99.85,"system.proc.cpu.threads":27,"system.memory":23.39,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509813}
-++{"system.network.sent":14129520,"system.gpu.0.powerPercent":102.88,"system.network.recv":9474423,"system.disk":22.4,"system.gpu.0.powerWatts":72.02,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":56.33,"system.gpu.0.gpu":86.27,"_runtime":1250,"system.proc.memory.rssMB":2958.7,"system.proc.memory.availableMB":11472.54,"system.cpu":99.87,"system.proc.cpu.threads":27,"system.memory":23.75,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509843}
-++{"system.network.sent":14134644,"system.gpu.0.powerPercent":87.89,"system.network.recv":9477692,"system.disk":22.4,"system.gpu.0.powerWatts":61.52,"_wandb":true,"system.gpu.0.temp":76.75,"system.gpu.0.memory":39.12,"system.gpu.0.gpu":73.5,"_runtime":1267,"system.proc.memory.rssMB":2956.05,"system.proc.memory.availableMB":11567.16,"system.cpu":86.28,"system.proc.cpu.threads":26.38,"system.memory":23.1,"system.proc.memory.percent":19.65,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509859}
-+diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-+index 6941a0a..e946e56 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-++++ b/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-+@@ -1 +1,5 @@
-+-{"gradients/classifier.bias": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.0654682070016861, -0.06339701265096664, -0.06132581830024719, -0.05925462394952774, -0.05718342587351799, -0.05511223152279854, -0.053041037172079086, -0.050969842821359634, -0.048898644745349884, -0.04682745039463043, -0.04475625604391098, -0.04268506169319153, -0.040613867342472076, -0.038542672991752625, -0.03647147864103317, -0.03440028056502342, -0.03232908621430397, -0.03025789186358452, -0.028186697512865067, -0.026115499436855316, -0.024044305086135864, -0.021973110735416412, -0.01990191638469696, -0.01783072203397751, -0.015759527683258057, -0.013688329607248306, -0.011617135256528854, -0.009545940905809402, -0.0074747465550899506, -0.005403552204370499, -0.0033323541283607483, -0.0012611597776412964, 0.0008100345730781555, 0.0028812289237976074, 0.004952423274517059, 0.007023617625236511, 0.009094811975955963, 0.011166006326675415, 0.013237208127975464, 0.015308402478694916, 0.017379596829414368, 0.01945079118013382, 0.02152198553085327, 0.023593179881572723, 0.025664374232292175, 0.027735568583011627, 0.02980676293373108, 0.03187795728445053, 0.03394915163516998, 0.03602035343647003, 0.038091547787189484, 0.040162742137908936, 0.04223393648862839, 0.04430513083934784, 0.04637632519006729, 0.04844751954078674, 0.050518713891506195, 0.05258990824222565, 0.0546611025929451, 0.05673230439424515, 0.0588034987449646, 0.060874685645103455, 0.0629458874464035, 0.06501707434654236, 0.06708827614784241]}, "gradients/classifier.weight": {"_type": "histogram", "values": [1.0, 1.0, 1.0, 0.0, 3.0, 1.0, 5.0, 2.0, 4.0, 10.0, 9.0, 17.0, 15.0, 21.0, 30.0, 49.0, 53.0, 61.0, 86.0, 96.0, 118.0, 155.0, 170.0, 210.0, 214.0, 249.0, 229.0, 254.0, 272.0, 299.0, 314.0, 295.0, 344.0, 291.0, 277.0, 262.0, 259.0, 239.0, 186.0, 184.0, 169.0, 136.0, 111.0, 97.0, 83.0, 60.0, 47.0, 38.0, 19.0, 23.0, 20.0, 13.0, 17.0, 7.0, 8.0, 4.0, 1.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.09012244641780853, -0.08724749088287354, -0.08437253534793854, -0.08149757981300354, -0.07862262427806854, -0.07574766874313354, -0.07287271320819855, -0.06999775767326355, -0.06712280213832855, -0.06424784660339355, -0.06137289106845856, -0.05849793553352356, -0.05562297999858856, -0.052748024463653564, -0.04987306892871857, -0.04699811339378357, -0.04412315785884857, -0.041248202323913574, -0.03837324678897858, -0.03549829125404358, -0.03262333571910858, -0.029748380184173584, -0.026873424649238586, -0.02399846911430359, -0.02112351357936859, -0.018248558044433594, -0.015373602509498596, -0.012498646974563599, -0.009623691439628601, -0.0067487359046936035, -0.003873780369758606, -0.0009988248348236084, 0.0018761307001113892, 0.004751086235046387, 0.007626041769981384, 0.010500997304916382, 0.01337595283985138, 0.016250908374786377, 0.019125863909721375, 0.022000819444656372, 0.02487577497959137, 0.027750730514526367, 0.030625686049461365, 0.03350064158439636, 0.03637559711933136, 0.03925055265426636, 0.042125508189201355, 0.04500046372413635, 0.04787541925907135, 0.05075037479400635, 0.053625330328941345, 0.05650028586387634, 0.05937524139881134, 0.06225019693374634, 0.06512515246868134, 0.06800010800361633, 0.07087506353855133, 0.07375001907348633, 0.07662497460842133, 0.07949993014335632, 0.08237488567829132, 0.08524984121322632, 0.08812479674816132, 0.09099975228309631, 0.09387470781803131]}, "val_acc": 0.23687943262411348, "train_acc": 0.25812953441384673, "_runtime": 814.0969541072845, "_timestamp": 1579509224.6157851, "_step": 0}
-++{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.0654682070016861,-0.06339701265096664,-0.06132581830024719,-0.05925462394952774,-0.05718342587351799,-0.05511223152279854,-0.053041037172079086,-0.050969842821359634,-0.048898644745349884,-0.04682745039463043,-0.04475625604391098,-0.04268506169319153,-0.040613867342472076,-0.038542672991752625,-0.03647147864103317,-0.03440028056502342,-0.03232908621430397,-0.03025789186358452,-0.028186697512865067,-0.026115499436855316,-0.024044305086135864,-0.021973110735416412,-0.01990191638469696,-0.01783072203397751,-0.015759527683258057,-0.013688329607248306,-0.011617135256528854,-0.009545940905809402,-0.0074747465550899506,-0.005403552204370499,-0.0033323541283607483,-0.0012611597776412964,0.0008100345730781555,0.0028812289237976074,0.004952423274517059,0.007023617625236511,0.009094811975955963,0.011166006326675415,0.013237208127975464,0.015308402478694916,0.017379596829414368,0.01945079118013382,0.02152198553085327,0.023593179881572723,0.025664374232292175,0.027735568583011627,0.02980676293373108,0.03187795728445053,0.03394915163516998,0.03602035343647003,0.038091547787189484,0.040162742137908936,0.04223393648862839,0.04430513083934784,0.04637632519006729,0.04844751954078674,0.050518713891506195,0.05258990824222565,0.0546611025929451,0.05673230439424515,0.0588034987449646,0.060874685645103455,0.0629458874464035,0.06501707434654236,0.06708827614784241]},"gradients/classifier.weight":{"bins":[-0.09012244641780853,-0.08724749088287354,-0.08437253534793854,-0.08149757981300354,-0.07862262427806854,-0.07574766874313354,-0.07287271320819855,-0.06999775767326355,-0.06712280213832855,-0.06424784660339355,-0.06137289106845856,-0.05849793553352356,-0.05562297999858856,-0.052748024463653564,-0.04987306892871857,-0.04699811339378357,-0.04412315785884857,-0.041248202323913574,-0.03837324678897858,-0.03549829125404358,-0.03262333571910858,-0.029748380184173584,-0.026873424649238586,-0.02399846911430359,-0.02112351357936859,-0.018248558044433594,-0.015373602509498596,-0.012498646974563599,-0.009623691439628601,-0.0067487359046936035,-0.003873780369758606,-0.0009988248348236084,0.0018761307001113892,0.004751086235046387,0.007626041769981384,0.010500997304916382,0.01337595283985138,0.016250908374786377,0.019125863909721375,0.022000819444656372,0.02487577497959137,0.027750730514526367,0.030625686049461365,0.03350064158439636,0.03637559711933136,0.03925055265426636,0.042125508189201355,0.04500046372413635,0.04787541925907135,0.05075037479400635,0.053625330328941345,0.05650028586387634,0.05937524139881134,0.06225019693374634,0.06512515246868134,0.06800010800361633,0.07087506353855133,0.07375001907348633,0.07662497460842133,0.07949993014335632,0.08237488567829132,0.08524984121322632,0.08812479674816132,0.09099975228309631,0.09387470781803131],"_type":"histogram","values":[1,1,1,0,3,1,5,2,4,10,9,17,15,21,30,49,53,61,86,96,118,155,170,210,214,249,229,254,272,299,314,295,344,291,277,262,259,239,186,184,169,136,111,97,83,60,47,38,19,23,20,13,17,7,8,4,1,2,2,0,0,0,0,1]},"_step":0,"val_acc":0.23687943262411348,"train_acc":0.25812953441384673,"_runtime":814.0969541072845,"_timestamp":1.5795092246157851e+09}
-++{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1],"bins":[-0.07717597484588623,-0.07544030994176865,-0.07370464503765106,-0.07196898013353348,-0.0702333152294159,-0.06849765032529831,-0.06676198542118073,-0.06502632051706314,-0.06329065561294556,-0.06155499070882797,-0.05981932580471039,-0.058083660900592804,-0.05634799599647522,-0.054612331092357635,-0.05287666618824005,-0.05114100128412247,-0.04940533638000488,-0.0476696714758873,-0.045934006571769714,-0.04419834539294243,-0.042462680488824844,-0.04072701558470726,-0.038991350680589676,-0.03725568577647209,-0.03552002087235451,-0.03378435596823692,-0.03204869106411934,-0.030313026160001755,-0.02857736125588417,-0.026841696351766586,-0.025106031447649002,-0.023370366543531418,-0.021634701639413834,-0.01989903673529625,-0.018163371831178665,-0.01642770692706108,-0.014692042022943497,-0.012956380844116211,-0.011220715939998627,-0.009485051035881042,-0.007749386131763458,-0.006013721227645874,-0.00427805632352829,-0.0025423914194107056,-0.0008067265152931213,0.0009289383888244629,0.002664603292942047,0.004400268197059631,0.006135933101177216,0.0078715980052948,0.009607262909412384,0.011342927813529968,0.013078592717647552,0.014814257621765137,0.01654992252588272,0.018285587430000305,0.02002125233411789,0.021756917238235474,0.023492582142353058,0.025228247046470642,0.026963911950588226,0.02869957685470581,0.030435241758823395,0.03217090666294098,0.03390657156705856]},"gradients/classifier.weight":{"_type":"histogram","values":[1,0,1,0,1,1,3,1,1,2,4,9,11,17,27,29,40,36,67,86,99,128,150,186,242,222,248,298,311,327,349,317,357,337,321,308,284,232,208,178,153,140,97,76,67,43,32,35,19,16,10,6,2,2,3,3,0,0,0,0,0,0,0,1],"bins":[-0.10413810610771179,-0.10082836449146271,-0.09751862287521362,-0.09420888125896454,-0.09089913964271545,-0.08758939802646637,-0.08427965641021729,-0.0809699147939682,-0.07766017317771912,-0.07435043156147003,-0.07104068994522095,-0.06773094832897186,-0.06442121416330338,-0.06111147254705429,-0.057801730930805206,-0.05449198931455612,-0.05118224769830704,-0.04787250608205795,-0.04456276446580887,-0.041253022849559784,-0.0379432812333107,-0.034633539617061615,-0.03132379800081253,-0.028014056384563446,-0.02470432221889496,-0.021394580602645874,-0.01808483898639679,-0.014775097370147705,-0.01146535575389862,-0.008155614137649536,-0.004845872521400452,-0.0015361309051513672,0.0017736107110977173,0.005083352327346802,0.008393093943595886,0.01170283555984497,0.015012577176094055,0.01832231879234314,0.021632060408592224,0.02494180202484131,0.028251543641090393,0.03156128525733948,0.03487102687358856,0.038180768489837646,0.04149051010608673,0.044800251722335815,0.0481099933385849,0.051419734954833984,0.054729461669921875,0.05803920328617096,0.061348944902420044,0.06465868651866913,0.06796842813491821,0.0712781697511673,0.07458791136741638,0.07789765298366547,0.08120739459991455,0.08451713621616364,0.08782687783241272,0.0911366194486618,0.09444636106491089,0.09775610268115997,0.10106584429740906,0.10437558591365814,0.10768532752990723]},"_step":1,"val_acc":0.25011820330969264,"train_acc":0.258383926343752,"_runtime":974.3342196941376,"_timestamp":1.5795093848530507e+09}
-++{"gradients/classifier.bias":{"values":[1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.006489427760243416,-0.006147412117570639,-0.005805396940559149,-0.005463381297886372,-0.0051213656552135944,-0.004779350012540817,-0.004437334835529327,-0.00409531919285655,-0.0037533037830144167,-0.003411288373172283,-0.003069272730499506,-0.0027272573206573725,-0.002385241910815239,-0.0020432262681424618,-0.0017012106254696846,-0.0013591954484581947,-0.0010171798057854176,-0.0006751641631126404,-0.0003331489861011505,8.866656571626663e-06,0.00035088229924440384,0.0006928974762558937,0.0010349131189286709,0.001376928761601448,0.001718943938612938,0.0020609600469470024,0.0024029752239584923,0.002744990400969982,0.0030870065093040466,0.0034290216863155365,0.0037710368633270264,0.004113052971661091,0.004455068148672581,0.004797083325684071,0.005139099434018135,0.005481114611029625,0.005823129788041115,0.006165145896375179,0.006507161073386669,0.006849176250398159,0.0071911923587322235,0.007533207535743713,0.007875222712755203,0.008217238821089268,0.008559253998100758,0.008901269175112247,0.009243285283446312,0.009585300460457802,0.009927315637469292,0.010269330814480782,0.01061134785413742,0.01095336303114891,0.0112953782081604,0.01163739338517189,0.01197940856218338,0.01232142373919487,0.012663440778851509,0.013005455955862999,0.013347471132874489,0.013689486309885979,0.014031501486897469,0.014373516663908958,0.014715533703565598,0.015057548880577087,0.015399564057588577],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.07622425258159637,-0.07385586947202682,-0.07148748636245728,-0.06911909580230713,-0.06675071269273758,-0.06438232958316803,-0.06201394647359848,-0.05964556336402893,-0.05727717652916908,-0.054908789694309235,-0.052540406584739685,-0.050172023475170135,-0.047803640365600586,-0.04543525353074074,-0.04306687042117119,-0.04069848358631134,-0.03833010047674179,-0.03596171736717224,-0.03359333053231239,-0.031224947422742844,-0.028856560587882996,-0.026488177478313446,-0.024119794368743896,-0.02175140753388405,-0.0193830244243145,-0.01701464131474495,-0.014646254479885101,-0.012277871370315552,-0.009909488260746002,-0.007541105151176453,-0.005172714591026306,-0.0028043314814567566,-0.00043594837188720703,0.0019324347376823425,0.004300817847251892,0.006669208407402039,0.009037591516971588,0.011405974626541138,0.013774357736110687,0.016142740845680237,0.018511131405830383,0.020879514515399933,0.023247897624969482,0.025616280734539032,0.02798466384410858,0.03035304695367813,0.03272143751382828,0.03508982062339783,0.03745820373296738,0.039826586842536926,0.042194969952106476,0.04456336051225662,0.04693174362182617,0.049300119280815125,0.05166850984096527,0.05403690040111542,0.05640527606010437,0.05877366662025452,0.06114204227924347,0.06351043283939362,0.06587882339954376,0.06824719905853271,0.07061558961868286,0.07298396527767181,0.07535235583782196],"_type":"histogram","values":[1,2,2,4,0,3,3,1,11,7,15,14,23,25,27,43,59,66,75,106,101,128,148,168,174,206,231,240,275,266,300,299,271,298,285,266,270,214,209,214,192,142,152,94,103,94,63,48,43,36,29,22,19,17,12,8,5,3,1,6,3,1,0,1]},"_step":2,"val_acc":0.24964539007092199,"train_acc":0.2603407873430231,"_runtime":1133.4028816223145,"_timestamp":1.5795095439217126e+09}
-++{"gradients/classifier.bias":{"values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.06606416404247284,-0.06390783190727234,-0.06175149977207184,-0.05959516763687134,-0.05743883550167084,-0.05528250336647034,-0.053126171231269836,-0.050969839096069336,-0.048813506960868835,-0.046657174825668335,-0.044500842690467834,-0.042344510555267334,-0.040188178420066833,-0.03803184628486633,-0.03587551414966583,-0.03371918201446533,-0.03156284987926483,-0.02940651774406433,-0.02725018560886383,-0.02509385347366333,-0.02293752133846283,-0.02078118920326233,-0.01862485706806183,-0.016468524932861328,-0.014312192797660828,-0.012155860662460327,-0.009999528527259827,-0.007843196392059326,-0.005686864256858826,-0.003530532121658325,-0.0013741999864578247,0.0007821321487426758,0.0029384642839431763,0.005094796419143677,0.007251128554344177,0.009407460689544678,0.011563792824745178,0.013720124959945679,0.01587645709514618,0.01803278923034668,0.02018912136554718,0.02234545350074768,0.02450178563594818,0.02665811777114868,0.028814449906349182,0.030970782041549683,0.03312711417675018,0.035283446311950684,0.037439778447151184,0.039596110582351685,0.041752442717552185,0.043908774852752686,0.046065106987953186,0.048221439123153687,0.05037777125835419,0.05253410339355469,0.05469043552875519,0.05684676766395569,0.05900309979915619,0.06115943193435669,0.06331576406955719,0.06547209620475769,0.06762842833995819,0.06978476047515869,0.07194109261035919],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.09906706213951111,-0.09581608325242996,-0.09256510436534882,-0.08931412547826767,-0.08606314659118652,-0.08281217515468597,-0.07956118881702423,-0.07631021738052368,-0.07305923849344254,-0.06980825960636139,-0.06655728071928024,-0.0633063018321991,-0.06005532294511795,-0.056804344058036804,-0.053553368896245956,-0.05030239000916481,-0.047051411122083664,-0.04380043223500252,-0.04054945334792137,-0.037298478186130524,-0.03404749929904938,-0.03079652041196823,-0.027545541524887085,-0.02429456263780594,-0.021043583750724792,-0.017792604863643646,-0.0145416259765625,-0.01129065454006195,-0.008039675652980804,-0.004788696765899658,-0.001537717878818512,0.0017132610082626343,0.0049642398953437805,0.008215218782424927,0.011466197669506073,0.01471717655658722,0.017968155443668365,0.02121913433074951,0.02447010576725006,0.027721092104911804,0.030972063541412354,0.0342230498790741,0.037474021315574646,0.040724992752075195,0.04397597908973694,0.04722695052623749,0.05047793686389923,0.05372890830039978,0.05697989463806152,0.06023086607456207,0.06348185241222382,0.06673282384872437,0.06998381018638611,0.07323478162288666,0.07648575305938721,0.07973673939704895,0.0829877108335495,0.08623869717121124,0.08948966860771179,0.09274065494537354,0.09599162638187408,0.09924261271953583,0.10249358415603638,0.10574457049369812,0.10899554193019867],"_type":"histogram","values":[1,0,0,0,2,2,0,4,3,6,10,11,14,22,31,43,53,58,86,101,112,160,183,225,221,275,317,314,310,329,323,356,343,312,332,263,237,192,175,162,123,83,77,78,50,43,29,27,12,11,6,5,4,3,0,0,1,0,0,1,1,0,1,1]},"_step":3,"val_acc":0.26222222222222225,"train_acc":0.2627868635921119,"_runtime":1291.7072627544403,"_timestamp":1.5795097022260938e+09}
-++{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.037257447838783264,-0.035971060395240784,-0.034684669226408005,-0.033398281782865524,-0.032111890614032745,-0.030825503170490265,-0.029539113864302635,-0.028252724558115005,-0.026966335251927376,-0.025679945945739746,-0.024393556639552116,-0.023107167333364487,-0.021820779889822006,-0.020534390583634377,-0.019248001277446747,-0.017961611971259117,-0.016675222665071487,-0.015388833358883858,-0.014102444052696228,-0.012816054746508598,-0.011529665440320969,-0.010243277996778488,-0.008956888690590858,-0.007670499384403229,-0.006384110078215599,-0.005097720772027969,-0.003811333328485489,-0.00252494215965271,-0.0012385547161102295,4.783645272254944e-05,0.00133422389626503,0.002620615065097809,0.003907002508640289,0.00519338995218277,0.006479781121015549,0.007766168564558029,0.009052559733390808,0.010338947176933289,0.011625338345766068,0.012911725789308548,0.014198116958141327,0.015484504401683807,0.016770891845226288,0.018057283014059067,0.019343670457601547,0.020630061626434326,0.021916449069976807,0.023202840238809586,0.024489227682352066,0.025775618851184845,0.027062006294727325,0.028348393738269806,0.029634781181812286,0.030921176075935364,0.032207563519477844,0.033493950963020325,0.034780338406562805,0.036066725850105286,0.03735312074422836,0.038639508187770844,0.039925895631313324,0.041212283074855804,0.04249867796897888,0.04378506541252136,0.04507145285606384]},"gradients/classifier.weight":{"bins":[-0.0888357013463974,-0.08612215518951416,-0.08340860903263092,-0.08069506287574768,-0.07798151671886444,-0.0752679631114006,-0.07255441695451736,-0.06984087079763412,-0.06712732464075089,-0.06441377848386765,-0.061700232326984406,-0.05898668244481087,-0.05627313628792763,-0.05355959013104439,-0.05084604024887085,-0.04813249409198761,-0.04541894793510437,-0.04270540177822113,-0.03999185562133789,-0.03727830573916435,-0.03456475958228111,-0.03185121342539787,-0.029137663543224335,-0.026424117386341095,-0.023710571229457855,-0.020997025072574615,-0.018283478915691376,-0.015569932758808136,-0.0128563791513443,-0.01014283299446106,-0.00742928683757782,-0.00471574068069458,-0.0020021945238113403,0.0007113516330718994,0.003424897789955139,0.006138443946838379,0.008851990103721619,0.011565543711185455,0.014279089868068695,0.016992636024951935,0.019706182181835175,0.022419728338718414,0.025133274495601654,0.027846820652484894,0.03056037425994873,0.03327392041683197,0.03598746657371521,0.03870101273059845,0.04141455888748169,0.04412810504436493,0.04684165120124817,0.04955519735813141,0.05226874351501465,0.05498228967189789,0.05769583582878113,0.06040938198566437,0.0631229430437088,0.06583648920059204,0.06855003535747528,0.07126358151435852,0.07397712767124176,0.076690673828125,0.07940421998500824,0.08211776614189148,0.08483131229877472],"_type":"histogram","values":[1,0,0,0,2,0,1,0,10,6,9,13,11,18,18,29,47,58,58,70,96,103,104,181,183,180,232,264,280,262,304,320,289,307,281,323,255,289,218,224,185,155,132,132,118,76,65,59,48,22,30,26,17,9,5,3,4,2,3,3,1,2,0,1]},"_step":4,"val_acc":0.262789598108747,"train_acc":0.2653650279586515,"_runtime":1448.6882483959198,"_timestamp":1.5795098592070794e+09}
-+diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json b/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-+index 3724adb..0ce5b0d 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-++++ b/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-+@@ -3,10 +3,10 @@
-+     "program": "<python with no main file>",
-+     "git": {
-+         "remote": "https://github.com/ubamba98/droughtwatch",
-+-        "commit": "fea1daedb6b14125e1dec2c49a5e3b211d016f90"
-++        "commit": "4e7b9b38b8d5d3ec44d43373b8e263f50ead87a3"
-+     },
-+     "email": "ubamba98@gmail.com",
-+-    "startedAt": "2020-01-20T08:23:13.672686",
-++    "startedAt": "2020-01-20T08:44:21.248355",
-+     "host": "ccw-iclr",
-+     "username": "ubamba98",
-+     "executable": "/home/ubamba98/anaconda3/bin/python",
-+@@ -25,5 +25,5 @@
-+     "mode": "run",
-+     "name": "efficentnet-b3-765",
-+     "project": "droughtwatch",
-+-    "heartbeatAt": "2020-01-20T08:36:16.324952"
-++    "heartbeatAt": "2020-01-20T08:44:22.172990"
-+ }
-+diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-summary.json b/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-+index 05e4af4..27d2e55 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-++++ b/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-+@@ -1 +1 @@
-+-{"graph_0": {"_type": "graph", "format": "torch", "nodes": [{"name": "conv_stem", "id": 140438557381128, "class_name": "Conv2dSame(3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False)", "parameters": [["weight", [40, 3, 3, 3]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [1080]}, {"name": "bn1", "id": 140438557383704, "class_name": "BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [40]], ["bias", [40]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [40, 40]}, {"name": "blocks.0.0", "id": 140438557382920, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)\n  (bn1): BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [40, 1, 3, 3]], ["bn1.weight", [40]], ["bn1.bias", [40]], ["se.conv_reduce.weight", [10, 40, 1, 1]], ["se.conv_reduce.bias", [10]], ["se.conv_expand.weight", [40, 10, 1, 1]], ["se.conv_expand.bias", [40]], ["conv_pw.weight", [24, 40, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [360, 40, 40, 400, 10, 400, 40, 960, 24, 24]}, {"name": "blocks.0.1", "id": 140438680665224, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)\n  (bn1): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [24, 1, 3, 3]], ["bn1.weight", [24]], ["bn1.bias", [24]], ["se.conv_reduce.weight", [6, 24, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [24, 6, 1, 1]], ["se.conv_expand.bias", [24]], ["conv_pw.weight", [24, 24, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [216, 24, 24, 144, 6, 144, 24, 576, 24, 24]}, {"name": "blocks.1.0", "id": 140438676598736, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(144, 144, kernel_size=(3, 3), stride=(2, 2), groups=144, bias=False)\n  (bn2): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [144, 24, 1, 1]], ["bn1.weight", [144]], ["bn1.bias", [144]], ["conv_dw.weight", [144, 1, 3, 3]], ["bn2.weight", [144]], ["bn2.bias", [144]], ["se.conv_reduce.weight", [6, 144, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [144, 6, 1, 1]], ["se.conv_expand.bias", [144]], ["conv_pwl.weight", [32, 144, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 4608, 32, 32]}, {"name": "blocks.1.1", "id": 140438557424160, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.1.2", "id": 140438679559640, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.2.0", "id": 140438679470320, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(192, 192, kernel_size=(5, 5), stride=(2, 2), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 5, 5]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [48, 192, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [6144, 192, 192, 4800, 192, 192, 1536, 8, 1536, 192, 9216, 48, 48]}, {"name": "blocks.2.1", "id": 140438557424384, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.2.2", "id": 140438557422704, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.3.0", "id": 140438557421920, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(288, 288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 3, 3]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [96, 288, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [13824, 288, 288, 2592, 288, 288, 3456, 12, 3456, 288, 27648, 96, 96]}, {"name": "blocks.3.1", "id": 140438557422816, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.2", "id": 140438557824392, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.3", "id": 140438557825232, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.4", "id": 140438557825176, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.4.0", "id": 140438557824672, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 5, 5]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [136, 576, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [55296, 576, 576, 14400, 576, 576, 13824, 24, 13824, 576, 78336, 136, 136]}, {"name": "blocks.4.1", "id": 140438557823496, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.2", "id": 140438679158968, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.3", "id": 140438679496744, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.4", "id": 140438679422456, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.5.0", "id": 140438679421448, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(816, 816, kernel_size=(5, 5), stride=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [232, 816, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 189312, 232, 232]}, {"name": "blocks.5.1", "id": 140438679580400, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.2", "id": 140438679115088, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.3", "id": 140438676984832, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.4", "id": 140440670709296, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.5", "id": 140440670710192, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.6.0", "id": 140440670709464, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 3, 3]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [384, 1392, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [322944, 1392, 1392, 12528, 1392, 1392, 80736, 58, 80736, 1392, 534528, 384, 384]}, {"name": "blocks.6.1", "id": 140438679947864, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(384, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)\n  (bn2): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(2304, 96, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(96, 2304, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(2304, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [2304, 384, 1, 1]], ["bn1.weight", [2304]], ["bn1.bias", [2304]], ["conv_dw.weight", [2304, 1, 3, 3]], ["bn2.weight", [2304]], ["bn2.bias", [2304]], ["se.conv_reduce.weight", [96, 2304, 1, 1]], ["se.conv_reduce.bias", [96]], ["se.conv_expand.weight", [2304, 96, 1, 1]], ["se.conv_expand.bias", [2304]], ["conv_pwl.weight", [384, 2304, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [884736, 2304, 2304, 20736, 2304, 2304, 221184, 96, 221184, 2304, 884736, 384, 384]}, {"name": "conv_head", "id": 140438557382584, "class_name": "Conv2d(384, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)", "parameters": [["weight", [1536, 384, 1, 1]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [589824]}, {"name": "bn2", "id": 140438703610848, "class_name": "BatchNorm2d(1536, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [1536]], ["bias", [1536]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [1536, 1536]}, {"name": "global_pool", "id": 140438703610792, "class_name": "SelectAdaptivePool2d (output_size=1, pool_type=avg)", "parameters": [], "output_shape": [[256, 1536, 1, 1]], "num_parameters": []}, {"name": "classifier", "id": 140438679885696, "class_name": "Linear(in_features=1536, out_features=4, bias=True)", "parameters": [["weight", [4, 1536]], ["bias", [4]]], "output_shape": [[256, 4]], "num_parameters": [6144, 4]}], "edges": []}, "train_acc": 0.25812953441384673, "_step": 0, "gradients/classifier.weight": {"_type": "histogram", "values": [1.0, 1.0, 1.0, 0.0, 3.0, 1.0, 5.0, 2.0, 4.0, 10.0, 9.0, 17.0, 15.0, 21.0, 30.0, 49.0, 53.0, 61.0, 86.0, 96.0, 118.0, 155.0, 170.0, 210.0, 214.0, 249.0, 229.0, 254.0, 272.0, 299.0, 314.0, 295.0, 344.0, 291.0, 277.0, 262.0, 259.0, 239.0, 186.0, 184.0, 169.0, 136.0, 111.0, 97.0, 83.0, 60.0, 47.0, 38.0, 19.0, 23.0, 20.0, 13.0, 17.0, 7.0, 8.0, 4.0, 1.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.09012244641780853, -0.08724749088287354, -0.08437253534793854, -0.08149757981300354, -0.07862262427806854, -0.07574766874313354, -0.07287271320819855, -0.06999775767326355, -0.06712280213832855, -0.06424784660339355, -0.06137289106845856, -0.05849793553352356, -0.05562297999858856, -0.052748024463653564, -0.04987306892871857, -0.04699811339378357, -0.04412315785884857, -0.041248202323913574, -0.03837324678897858, -0.03549829125404358, -0.03262333571910858, -0.029748380184173584, -0.026873424649238586, -0.02399846911430359, -0.02112351357936859, -0.018248558044433594, -0.015373602509498596, -0.012498646974563599, -0.009623691439628601, -0.0067487359046936035, -0.003873780369758606, -0.0009988248348236084, 0.0018761307001113892, 0.004751086235046387, 0.007626041769981384, 0.010500997304916382, 0.01337595283985138, 0.016250908374786377, 0.019125863909721375, 0.022000819444656372, 0.02487577497959137, 0.027750730514526367, 0.030625686049461365, 0.03350064158439636, 0.03637559711933136, 0.03925055265426636, 0.042125508189201355, 0.04500046372413635, 0.04787541925907135, 0.05075037479400635, 0.053625330328941345, 0.05650028586387634, 0.05937524139881134, 0.06225019693374634, 0.06512515246868134, 0.06800010800361633, 0.07087506353855133, 0.07375001907348633, 0.07662497460842133, 0.07949993014335632, 0.08237488567829132, 0.08524984121322632, 0.08812479674816132, 0.09099975228309631, 0.09387470781803131]}, "gradients/classifier.bias": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.0654682070016861, -0.06339701265096664, -0.06132581830024719, -0.05925462394952774, -0.05718342587351799, -0.05511223152279854, -0.053041037172079086, -0.050969842821359634, -0.048898644745349884, -0.04682745039463043, -0.04475625604391098, -0.04268506169319153, -0.040613867342472076, -0.038542672991752625, -0.03647147864103317, -0.03440028056502342, -0.03232908621430397, -0.03025789186358452, -0.028186697512865067, -0.026115499436855316, -0.024044305086135864, -0.021973110735416412, -0.01990191638469696, -0.01783072203397751, -0.015759527683258057, -0.013688329607248306, -0.011617135256528854, -0.009545940905809402, -0.0074747465550899506, -0.005403552204370499, -0.0033323541283607483, -0.0012611597776412964, 0.0008100345730781555, 0.0028812289237976074, 0.004952423274517059, 0.007023617625236511, 0.009094811975955963, 0.011166006326675415, 0.013237208127975464, 0.015308402478694916, 0.017379596829414368, 0.01945079118013382, 0.02152198553085327, 0.023593179881572723, 0.025664374232292175, 0.027735568583011627, 0.02980676293373108, 0.03187795728445053, 0.03394915163516998, 0.03602035343647003, 0.038091547787189484, 0.040162742137908936, 0.04223393648862839, 0.04430513083934784, 0.04637632519006729, 0.04844751954078674, 0.050518713891506195, 0.05258990824222565, 0.0546611025929451, 0.05673230439424515, 0.0588034987449646, 0.060874685645103455, 0.0629458874464035, 0.06501707434654236, 0.06708827614784241]}, "val_acc": 0.23687943262411348, "_runtime": 814.0969541072845, "_timestamp": 1579509224.6157851}
-++{"graph_0": {"_type": "graph", "edges": [], "nodes": [{"id": 140438557381128, "name": "conv_stem", "class_name": "Conv2dSame(3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False)", "parameters": [["weight", [40, 3, 3, 3]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [1080]}, {"id": 140438557383704, "name": "bn1", "class_name": "BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [40]], ["bias", [40]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [40, 40]}, {"id": 140438557382920, "name": "blocks.0.0", "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)\n  (bn1): BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [40, 1, 3, 3]], ["bn1.weight", [40]], ["bn1.bias", [40]], ["se.conv_reduce.weight", [10, 40, 1, 1]], ["se.conv_reduce.bias", [10]], ["se.conv_expand.weight", [40, 10, 1, 1]], ["se.conv_expand.bias", [40]], ["conv_pw.weight", [24, 40, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [360, 40, 40, 400, 10, 400, 40, 960, 24, 24]}, {"id": 140438680665224, "name": "blocks.0.1", "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)\n  (bn1): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [24, 1, 3, 3]], ["bn1.weight", [24]], ["bn1.bias", [24]], ["se.conv_reduce.weight", [6, 24, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [24, 6, 1, 1]], ["se.conv_expand.bias", [24]], ["conv_pw.weight", [24, 24, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [216, 24, 24, 144, 6, 144, 24, 576, 24, 24]}, {"id": 140438676598736, "name": "blocks.1.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(144, 144, kernel_size=(3, 3), stride=(2, 2), groups=144, bias=False)\n  (bn2): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [144, 24, 1, 1]], ["bn1.weight", [144]], ["bn1.bias", [144]], ["conv_dw.weight", [144, 1, 3, 3]], ["bn2.weight", [144]], ["bn2.bias", [144]], ["se.conv_reduce.weight", [6, 144, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [144, 6, 1, 1]], ["se.conv_expand.bias", [144]], ["conv_pwl.weight", [32, 144, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 4608, 32, 32]}, {"id": 140438557424160, "name": "blocks.1.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"id": 140438679559640, "name": "blocks.1.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"id": 140438679470320, "name": "blocks.2.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(192, 192, kernel_size=(5, 5), stride=(2, 2), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 5, 5]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [48, 192, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [6144, 192, 192, 4800, 192, 192, 1536, 8, 1536, 192, 9216, 48, 48]}, {"id": 140438557424384, "name": "blocks.2.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"id": 140438557422704, "name": "blocks.2.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"id": 140438557421920, "name": "blocks.3.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(288, 288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 3, 3]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [96, 288, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [13824, 288, 288, 2592, 288, 288, 3456, 12, 3456, 288, 27648, 96, 96]}, {"id": 140438557422816, "name": "blocks.3.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557824392, "name": "blocks.3.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557825232, "name": "blocks.3.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557825176, "name": "blocks.3.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557824672, "name": "blocks.4.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 5, 5]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [136, 576, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [55296, 576, 576, 14400, 576, 576, 13824, 24, 13824, 576, 78336, 136, 136]}, {"id": 140438557823496, "name": "blocks.4.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679158968, "name": "blocks.4.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679496744, "name": "blocks.4.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679422456, "name": "blocks.4.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679421448, "name": "blocks.5.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(816, 816, kernel_size=(5, 5), stride=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [232, 816, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 189312, 232, 232]}, {"id": 140438679580400, "name": "blocks.5.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140438679115088, "name": "blocks.5.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140438676984832, "name": "blocks.5.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140440670709296, "name": "blocks.5.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140440670710192, "name": "blocks.5.5", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140440670709464, "name": "blocks.6.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 3, 3]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [384, 1392, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [322944, 1392, 1392, 12528, 1392, 1392, 80736, 58, 80736, 1392, 534528, 384, 384]}, {"id": 140438679947864, "name": "blocks.6.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(384, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)\n  (bn2): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(2304, 96, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(96, 2304, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(2304, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [2304, 384, 1, 1]], ["bn1.weight", [2304]], ["bn1.bias", [2304]], ["conv_dw.weight", [2304, 1, 3, 3]], ["bn2.weight", [2304]], ["bn2.bias", [2304]], ["se.conv_reduce.weight", [96, 2304, 1, 1]], ["se.conv_reduce.bias", [96]], ["se.conv_expand.weight", [2304, 96, 1, 1]], ["se.conv_expand.bias", [2304]], ["conv_pwl.weight", [384, 2304, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [884736, 2304, 2304, 20736, 2304, 2304, 221184, 96, 221184, 2304, 884736, 384, 384]}, {"id": 140438557382584, "name": "conv_head", "class_name": "Conv2d(384, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)", "parameters": [["weight", [1536, 384, 1, 1]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [589824]}, {"id": 140438703610848, "name": "bn2", "class_name": "BatchNorm2d(1536, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [1536]], ["bias", [1536]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [1536, 1536]}, {"id": 140438703610792, "name": "global_pool", "class_name": "SelectAdaptivePool2d (output_size=1, pool_type=avg)", "parameters": [], "output_shape": [[256, 1536, 1, 1]], "num_parameters": []}, {"id": 140438679885696, "name": "classifier", "class_name": "Linear(in_features=1536, out_features=4, bias=True)", "parameters": [["weight", [4, 1536]], ["bias", [4]]], "output_shape": [[256, 4]], "num_parameters": [6144, 4]}], "format": "torch"}, "train_acc": 0.2653650279586515, "_step": 4, "gradients/classifier.weight": {"bins": [-0.0888357013463974, -0.08612215518951416, -0.08340860903263092, -0.08069506287574768, -0.07798151671886444, -0.0752679631114006, -0.07255441695451736, -0.06984087079763412, -0.06712732464075089, -0.06441377848386765, -0.061700232326984406, -0.05898668244481087, -0.05627313628792763, -0.05355959013104439, -0.05084604024887085, -0.04813249409198761, -0.04541894793510437, -0.04270540177822113, -0.03999185562133789, -0.03727830573916435, -0.03456475958228111, -0.03185121342539787, -0.029137663543224335, -0.026424117386341095, -0.023710571229457855, -0.020997025072574615, -0.018283478915691376, -0.015569932758808136, -0.0128563791513443, -0.01014283299446106, -0.00742928683757782, -0.00471574068069458, -0.0020021945238113403, 0.0007113516330718994, 0.003424897789955139, 0.006138443946838379, 0.008851990103721619, 0.011565543711185455, 0.014279089868068697, 0.016992636024951935, 0.019706182181835175, 0.022419728338718414, 0.025133274495601658, 0.027846820652484897, 0.03056037425994873, 0.03327392041683197, 0.03598746657371521, 0.03870101273059845, 0.04141455888748169, 0.04412810504436493, 0.04684165120124817, 0.04955519735813141, 0.05226874351501465, 0.05498228967189789, 0.05769583582878113, 0.06040938198566437, 0.0631229430437088, 0.06583648920059204, 0.06855003535747528, 0.07126358151435852, 0.07397712767124176, 0.076690673828125, 0.07940421998500824, 0.08211776614189148, 0.08483131229877472], "_type": "histogram", "values": [1, 0, 0, 0, 2, 0, 1, 0, 10, 6, 9, 13, 11, 18, 18, 29, 47, 58, 58, 70, 96, 103, 104, 181, 183, 180, 232, 264, 280, 262, 304, 320, 289, 307, 281, 323, 255, 289, 218, 224, 185, 155, 132, 132, 118, 76, 65, 59, 48, 22, 30, 26, 17, 9, 5, 3, 4, 2, 3, 3, 1, 2, 0, 1]}, "gradients/classifier.bias": {"bins": [-0.037257447838783264, -0.035971060395240784, -0.034684669226408005, -0.033398281782865524, -0.032111890614032745, -0.030825503170490265, -0.029539113864302635, -0.028252724558115005, -0.026966335251927376, -0.025679945945739743, -0.024393556639552116, -0.023107167333364487, -0.02182077988982201, -0.020534390583634377, -0.019248001277446747, -0.017961611971259117, -0.016675222665071487, -0.015388833358883858, -0.014102444052696228, -0.012816054746508598, -0.011529665440320969, -0.010243277996778488, -0.008956888690590858, -0.007670499384403229, -0.006384110078215599, -0.005097720772027969, -0.003811333328485489, -0.00252494215965271, -0.0012385547161102295, 4.783645272254944e-05, 0.00133422389626503, 0.002620615065097809, 0.003907002508640289, 0.00519338995218277, 0.006479781121015549, 0.007766168564558029, 0.009052559733390808, 0.010338947176933289, 0.011625338345766068, 0.012911725789308548, 0.014198116958141329, 0.015484504401683807, 0.016770891845226288, 0.018057283014059067, 0.019343670457601547, 0.02063006162643433, 0.021916449069976807, 0.023202840238809586, 0.024489227682352063, 0.025775618851184845, 0.027062006294727325, 0.02834839373826981, 0.029634781181812286, 0.030921176075935364, 0.032207563519477844, 0.033493950963020325, 0.034780338406562805, 0.036066725850105286, 0.03735312074422836, 0.03863950818777085, 0.03992589563131333, 0.04121228307485581, 0.04249867796897888, 0.04378506541252136, 0.04507145285606384], "_type": "histogram", "values": [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]}, "val_acc": 0.262789598108747, "_runtime": 1448.6882483959198, "_timestamp": 1579509859.2070794}
-diff --git a/wandb/run-20200120_081855-gzutdaae/requirements.txt b/wandb/run-20200120_081855-gzutdaae/requirements.txt
-new file mode 100644
-index 0000000..2143393
---- /dev/null
-+++ b/wandb/run-20200120_081855-gzutdaae/requirements.txt
-@@ -0,0 +1,267 @@
-+absl-py==0.9.0
-+alabaster==0.7.12
-+albumentations==0.4.3
-+anaconda-client==1.7.2
-+anaconda-navigator==1.9.7
-+anaconda-project==0.8.3
-+argh==0.26.2
-+asn1crypto==1.3.0
-+astroid==2.3.3
-+astropy==4.0
-+atomicwrites==1.3.0
-+attrs==19.3.0
-+autopep8==1.4.4
-+babel==2.8.0
-+backcall==0.1.0
-+backports.os==0.1.1
-+backports.shutil-get-terminal-size==1.0.0
-+beautifulsoup4==4.8.2
-+bitarray==1.2.0
-+bkcharts==0.2
-+bleach==3.1.0
-+bokeh==1.4.0
-+boto==2.49.0
-+bottleneck==1.3.1
-+cachetools==4.0.0
-+catalyst==20.1
-+certifi==2019.11.28
-+cffi==1.13.2
-+chardet==3.0.4
-+click==7.0
-+cloudpickle==1.2.2
-+clyent==1.2.2
-+colorama==0.4.3
-+conda-build==3.17.8
-+conda-package-handling==1.6.0
-+conda-verify==3.1.1
-+conda==4.8.1
-+configparser==4.0.2
-+contextlib2==0.6.0.post1
-+crc32c==2.0
-+cryptography==2.8
-+cycler==0.10.0
-+cython==0.29.14
-+cytoolz==0.10.1
-+dask==2.9.1
-+decorator==4.4.1
-+defusedxml==0.6.0
-+diff-match-patch==20181111
-+distributed==2.9.1
-+docker-pycreds==0.4.0
-+docutils==0.15.2
-+entrypoints==0.3
-+et-xmlfile==1.0.1
-+fastcache==1.1.0
-+filelock==3.0.12
-+flake8==3.7.9
-+flask==1.1.1
-+fsspec==0.6.2
-+future==0.18.2
-+gevent==1.4.0
-+gitdb2==2.0.6
-+gitpython==3.0.5
-+glob2==0.7
-+gmpy2==2.0.8
-+google-auth-oauthlib==0.4.1
-+google-auth==1.10.1
-+gql==0.2.0
-+graphql-core==1.1
-+greenlet==0.4.15
-+grpcio==1.26.0
-+h5py==2.9.0
-+heapdict==1.0.1
-+html5lib==1.0.1
-+hypothesis==4.54.2
-+idna==2.8
-+imageio==2.6.1
-+imagesize==1.2.0
-+imgaug==0.2.6
-+importlib-metadata==1.3.0
-+intervaltree==3.0.2
-+ipykernel==5.1.3
-+ipython-genutils==0.2.0
-+ipython==7.11.1
-+ipywidgets==7.5.1
-+isort==4.3.21
-+itsdangerous==1.1.0
-+jdcal==1.4.1
-+jedi==0.14.1
-+jeepney==0.4.2
-+jinja2==2.10.3
-+joblib==0.14.1
-+json5==0.8.5
-+jsonschema==3.2.0
-+jupyter-client==5.3.4
-+jupyter-console==6.0.0
-+jupyter-core==4.6.1
-+jupyter==1.0.0
-+jupyterlab-server==1.0.6
-+jupyterlab==1.2.4
-+keyring==20.0.0
-+kiwisolver==1.1.0
-+lazy-object-proxy==1.4.3
-+libarchive-c==2.8
-+lief==0.9.0
-+llvmlite==0.31.0
-+locket==0.2.0
-+lxml==4.4.2
-+markdown==3.1.1
-+markupsafe==1.1.1
-+matplotlib==3.1.1
-+mccabe==0.6.1
-+mistune==0.8.4
-+mkl-fft==1.0.15
-+mkl-random==1.1.0
-+mkl-service==2.3.0
-+mock==3.0.5
-+more-itertools==8.0.2
-+mpmath==1.1.0
-+msgpack==0.6.1
-+multipledispatch==0.6.0
-+navigator-updater==0.2.1
-+nbconvert==5.6.1
-+nbformat==4.4.0
-+networkx==2.4
-+nltk==3.4.5
-+nose==1.3.7
-+notebook==6.0.2
-+numba==0.47.0
-+numexpr==2.7.0
-+numpy==1.18.1
-+numpydoc==0.9.2
-+nvidia-ml-py3==7.352.0
-+oauthlib==3.1.0
-+olefile==0.46
-+opencv-python-headless==4.1.2.30
-+opencv-python==4.1.2.30
-+openpyxl==3.0.2
-+packaging==20.0
-+pandas==0.25.3
-+pandocfilters==1.4.2
-+parso==0.5.2
-+partd==1.1.0
-+path==13.1.0
-+pathlib2==2.3.5
-+pathtools==0.1.2
-+patsy==0.5.1
-+pep8==1.7.1
-+pexpect==4.7.0
-+pickleshare==0.7.5
-+pillow==6.2.1
-+pip==19.3.1
-+pkginfo==1.5.0.1
-+plotly==4.4.1
-+pluggy==0.13.1
-+ply==3.11
-+prometheus-client==0.7.1
-+promise==2.3
-+prompt-toolkit==2.0.10
-+protobuf==3.11.2
-+psutil==5.6.7
-+ptyprocess==0.6.0
-+py==1.8.1
-+pyasn1-modules==0.2.8
-+pyasn1==0.4.8
-+pycodestyle==2.5.0
-+pycosat==0.6.3
-+pycparser==2.19
-+pycrypto==2.6.1
-+pycurl==7.43.0.3
-+pydocstyle==4.0.1
-+pyflakes==2.1.1
-+pygments==2.5.2
-+pylint==2.4.4
-+pyodbc==4.0.27
-+pyopenssl==19.1.0
-+pyparsing==2.4.6
-+pyrsistent==0.15.6
-+pysocks==1.7.1
-+pytest-arraydiff==0.3
-+pytest-astropy-header==0.1.1
-+pytest-astropy==0.7.0
-+pytest-doctestplus==0.5.0
-+pytest-openfiles==0.4.0
-+pytest-remotedata==0.3.2
-+pytest==5.3.2
-+python-dateutil==2.8.1
-+python-jsonrpc-server==0.3.2
-+python-language-server==0.31.2
-+pytz==2019.3
-+pywavelets==1.1.1
-+pyxdg==0.26
-+pyyaml==5.2
-+pyzmq==18.1.0
-+qdarkstyle==2.7
-+qtawesome==0.6.0
-+qtconsole==4.6.0
-+qtpy==1.9.0
-+requests-oauthlib==1.3.0
-+requests==2.22.0
-+retrying==1.3.3
-+rope==0.14.0
-+rsa==4.0
-+rtree==0.8.3
-+ruamel-yaml==0.15.87
-+safitty==1.3
-+scikit-image==0.15.0
-+scikit-learn==0.22.1
-+scipy==1.3.2
-+seaborn==0.9.0
-+secretstorage==3.1.1
-+send2trash==1.5.0
-+sentry-sdk==0.14.0
-+setuptools==45.0.0
-+shortuuid==0.5.0
-+simplegeneric==0.8.1
-+singledispatch==3.4.0.3
-+six==1.13.0
-+smmap2==2.0.5
-+snowballstemmer==2.0.0
-+sortedcollections==1.1.2
-+sortedcontainers==2.1.0
-+soupsieve==1.9.5
-+sphinx==2.3.1
-+sphinxcontrib-applehelp==1.0.1
-+sphinxcontrib-devhelp==1.0.1
-+sphinxcontrib-htmlhelp==1.0.2
-+sphinxcontrib-jsmath==1.0.1
-+sphinxcontrib-qthelp==1.0.2
-+sphinxcontrib-serializinghtml==1.1.3
-+sphinxcontrib-websupport==1.1.2
-+spyder-kernels==1.8.1
-+spyder==4.0.1
-+sqlalchemy==1.3.12
-+statsmodels==0.10.1
-+subprocess32==3.5.4
-+sympy==1.5.1
-+tables==3.6.1
-+tblib==1.6.0
-+tensorboard==2.1.0
-+tensorboardx==2.0
-+terminado==0.8.3
-+testpath==0.4.4
-+timm==0.1.14
-+toolz==0.10.0
-+torch==1.2.0
-+torchvision==0.4.0a0
-+tornado==6.0.3
-+tqdm==4.41.1
-+traitlets==4.3.3
-+ujson==1.35
-+unicodecsv==0.14.1
-+urllib3==1.25.7
-+wandb==0.8.21
-+watchdog==0.9.0
-+wcwidth==0.1.7
-+webencodings==0.5.1
-+werkzeug==0.16.0
-+wheel==0.33.6
-+widgetsnbextension==3.5.1
-+wrapt==1.11.2
-+wurlitzer==2.0.0
-+xlrd==1.2.0
-+xlsxwriter==1.2.7
-+xlwt==1.3.0
-+yapf==0.28.0
-+zict==1.0.0
-+zipp==0.6.0
-\ No newline at end of file
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-new file mode 100644
-index 0000000..97ebdd9
---- /dev/null
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-@@ -0,0 +1,36 @@
-+{"system.network.sent":10977141,"system.gpu.0.powerPercent":96.79,"system.network.recv":7409894,"system.disk":22.4,"system.gpu.0.powerWatts":67.75,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":65.33,"system.gpu.0.gpu":85.6,"_runtime":1008,"system.proc.memory.rssMB":2966.29,"system.proc.memory.availableMB":11506.94,"system.cpu":98.25,"system.proc.cpu.threads":28,"system.memory":23.5,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509601}
-+{"system.network.sent":11502749,"system.gpu.0.powerPercent":97.46,"system.network.recv":7764756,"system.disk":22.4,"system.gpu.0.powerWatts":68.23,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":60.73,"system.gpu.0.gpu":85.87,"_runtime":1039,"system.proc.memory.rssMB":2962.16,"system.proc.memory.availableMB":11528.19,"system.cpu":97.55,"system.proc.cpu.threads":27.47,"system.memory":23.37,"system.proc.memory.percent":19.69,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509631}
-+{"system.network.sent":11508976,"system.gpu.0.powerPercent":102.06,"system.network.recv":7771440,"system.disk":22.4,"system.gpu.0.powerWatts":71.44,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.53,"system.gpu.0.gpu":85.6,"_runtime":1069,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11533.16,"system.cpu":99.91,"system.proc.cpu.threads":27,"system.memory":23.34,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509662}
-+{"system.network.sent":11522899,"system.gpu.0.powerPercent":93.89,"system.network.recv":7774171,"system.disk":22.4,"system.gpu.0.powerWatts":65.73,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.8,"_runtime":1099,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11449.37,"system.cpu":99.9,"system.proc.cpu.threads":27,"system.memory":23.89,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509692}
-+{"system.network.sent":12355982,"system.gpu.0.powerPercent":99.47,"system.network.recv":8325343,"system.disk":22.4,"system.gpu.0.powerWatts":69.63,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":53.6,"system.gpu.0.gpu":80.47,"_runtime":1129,"system.proc.memory.rssMB":2962.93,"system.proc.memory.availableMB":11549.31,"system.cpu":91.64,"system.proc.cpu.threads":27.73,"system.memory":23.23,"system.proc.memory.percent":19.7,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509722}
-+{"system.network.sent":13392411,"system.gpu.0.powerPercent":96.5,"system.network.recv":9022410,"system.disk":22.4,"system.gpu.0.powerWatts":67.55,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":66.2,"system.gpu.0.gpu":86.73,"_runtime":1160,"system.proc.memory.rssMB":2966.31,"system.proc.memory.availableMB":11507.02,"system.cpu":96.58,"system.proc.cpu.threads":28,"system.memory":23.51,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509752}
-+{"system.network.sent":14052060,"system.gpu.0.powerPercent":93.62,"system.network.recv":9455229,"system.disk":22.4,"system.gpu.0.powerWatts":65.53,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":62.4,"system.gpu.0.gpu":86.33,"_runtime":1190,"system.proc.memory.rssMB":2964.4,"system.proc.memory.availableMB":11520.81,"system.cpu":96.15,"system.proc.cpu.threads":27.67,"system.memory":23.41,"system.proc.memory.percent":19.71,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509783}
-+{"system.network.sent":14116134,"system.gpu.0.powerPercent":97.24,"system.network.recv":9471018,"system.disk":22.4,"system.gpu.0.powerWatts":68.07,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.13,"_runtime":1220,"system.proc.memory.rssMB":2959.24,"system.proc.memory.availableMB":11527.75,"system.cpu":99.85,"system.proc.cpu.threads":27,"system.memory":23.39,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509813}
-+{"system.network.sent":14129520,"system.gpu.0.powerPercent":102.88,"system.network.recv":9474423,"system.disk":22.4,"system.gpu.0.powerWatts":72.02,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":56.33,"system.gpu.0.gpu":86.27,"_runtime":1250,"system.proc.memory.rssMB":2958.7,"system.proc.memory.availableMB":11472.54,"system.cpu":99.87,"system.proc.cpu.threads":27,"system.memory":23.75,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509843}
-+{"system.network.sent":14134644,"system.gpu.0.powerPercent":87.89,"system.network.recv":9477692,"system.disk":22.4,"system.gpu.0.powerWatts":61.52,"_wandb":true,"system.gpu.0.temp":76.75,"system.gpu.0.memory":39.12,"system.gpu.0.gpu":73.5,"_runtime":1267,"system.proc.memory.rssMB":2956.05,"system.proc.memory.availableMB":11567.16,"system.cpu":86.28,"system.proc.cpu.threads":26.38,"system.memory":23.1,"system.proc.memory.percent":19.65,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509859}
-+{"system.gpu.0.gpu": 81.67, "system.gpu.0.memory": 48.93, "system.gpu.0.memoryAllocated": 37.81, "system.gpu.0.temp": 76.87, "system.gpu.0.powerWatts": 64.4, "system.gpu.0.powerPercent": 92.01, "system.cpu": 37.97, "system.memory": 23.73, "system.disk": 22.4, "system.proc.memory.availableMB": 11472.72, "system.proc.memory.rssMB": 2972.11, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 27.93, "system.network.sent": 758361, "system.network.recv": 563087, "_wandb": true, "_timestamp": 1579509890, "_runtime": 1296}
-+{"system.gpu.0.gpu": 89.2, "system.gpu.0.memory": 54.2, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 71.05, "system.gpu.0.powerPercent": 101.51, "system.cpu": 38.42, "system.memory": 23.79, "system.disk": 22.4, "system.proc.memory.availableMB": 11462.96, "system.proc.memory.rssMB": 2972.18, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 1227510, "system.network.recv": 875686, "_wandb": true, "_timestamp": 1579509920, "_runtime": 1326}
-+{"system.gpu.0.gpu": 89.33, "system.gpu.0.memory": 53.87, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.2, "system.gpu.0.powerWatts": 68.12, "system.gpu.0.powerPercent": 97.31, "system.cpu": 38.65, "system.memory": 23.81, "system.disk": 22.4, "system.proc.memory.availableMB": 11461.55, "system.proc.memory.rssMB": 2972.18, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 1666981, "system.network.recv": 1169241, "_wandb": true, "_timestamp": 1579509950, "_runtime": 1356}
-+{"system.gpu.0.gpu": 89.6, "system.gpu.0.memory": 54.4, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 76.8, "system.gpu.0.powerWatts": 65.93, "system.gpu.0.powerPercent": 94.19, "system.cpu": 38.85, "system.memory": 23.85, "system.disk": 22.4, "system.proc.memory.availableMB": 11460.04, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 2085510, "system.network.recv": 1447740, "_wandb": true, "_timestamp": 1579509980, "_runtime": 1386}
-+{"system.gpu.0.gpu": 89.53, "system.gpu.0.memory": 54.2, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 61.94, "system.gpu.0.powerPercent": 88.48, "system.cpu": 38.46, "system.memory": 23.84, "system.disk": 22.4, "system.proc.memory.availableMB": 11461.03, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 2506923, "system.network.recv": 1726051, "_wandb": true, "_timestamp": 1579510011, "_runtime": 1416}
-+{"system.gpu.0.gpu": 89.6, "system.gpu.0.memory": 54.4, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.07, "system.gpu.0.powerWatts": 70.87, "system.gpu.0.powerPercent": 101.25, "system.cpu": 38.67, "system.memory": 23.83, "system.disk": 22.4, "system.proc.memory.availableMB": 11460.28, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 2927846, "system.network.recv": 2010982, "_wandb": true, "_timestamp": 1579510041, "_runtime": 1446}
-+{"system.gpu.0.gpu": 90.2, "system.gpu.0.memory": 54.4, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 73.43, "system.gpu.0.powerPercent": 104.9, "system.cpu": 38.77, "system.memory": 23.89, "system.disk": 22.4, "system.proc.memory.availableMB": 11452.43, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 3356480, "system.network.recv": 2290911, "_wandb": true, "_timestamp": 1579510071, "_runtime": 1477}
-+{"system.gpu.0.gpu": 89.67, "system.gpu.0.memory": 54.13, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 75.49, "system.gpu.0.powerPercent": 107.84, "system.cpu": 38.83, "system.memory": 24.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11301.4, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 3779986, "system.network.recv": 2571164, "_wandb": true, "_timestamp": 1579510101, "_runtime": 1507}
-+{"system.gpu.0.gpu": 89.8, "system.gpu.0.memory": 54.4, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 61.33, "system.gpu.0.powerPercent": 87.61, "system.cpu": 38.63, "system.memory": 24.85, "system.disk": 22.4, "system.proc.memory.availableMB": 11302.55, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 4195859, "system.network.recv": 2844061, "_wandb": true, "_timestamp": 1579510131, "_runtime": 1537}
-+{"system.gpu.0.gpu": 85.8, "system.gpu.0.memory": 53.33, "system.gpu.0.memoryAllocated": 37.95, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 62.38, "system.gpu.0.powerPercent": 89.12, "system.cpu": 56.72, "system.memory": 24.3, "system.disk": 22.4, "system.proc.memory.availableMB": 11387.01, "system.proc.memory.rssMB": 2969.03, "system.proc.memory.percent": 19.74, "system.proc.cpu.threads": 27.67, "system.network.sent": 4493831, "system.network.recv": 3041280, "_wandb": true, "_timestamp": 1579510161, "_runtime": 1567}
-+{"system.gpu.0.gpu": 86.2, "system.gpu.0.memory": 56.4, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 71.41, "system.gpu.0.powerPercent": 102.01, "system.cpu": 99.85, "system.memory": 23.4, "system.disk": 22.4, "system.proc.memory.availableMB": 11522.27, "system.proc.memory.rssMB": 2964.5, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 27.0, "system.network.sent": 4498491, "system.network.recv": 3091323, "_wandb": true, "_timestamp": 1579510192, "_runtime": 1597}
-+{"system.gpu.0.gpu": 85.87, "system.gpu.0.memory": 55.8, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 76.67, "system.gpu.0.powerWatts": 71.14, "system.gpu.0.powerPercent": 101.63, "system.cpu": 99.9, "system.memory": 23.45, "system.disk": 22.4, "system.proc.memory.availableMB": 11515.83, "system.proc.memory.rssMB": 2965.05, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 27.0, "system.network.sent": 4501885, "system.network.recv": 3092980, "_wandb": true, "_timestamp": 1579510222, "_runtime": 1628}
-+{"system.gpu.0.gpu": 81.0, "system.gpu.0.memory": 45.8, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 76.8, "system.gpu.0.powerWatts": 69.12, "system.gpu.0.powerPercent": 98.74, "system.cpu": 66.55, "system.memory": 23.26, "system.disk": 22.4, "system.proc.memory.availableMB": 11546.79, "system.proc.memory.rssMB": 2967.48, "system.proc.memory.percent": 19.73, "system.proc.cpu.threads": 27.2, "system.network.sent": 4796843, "system.network.recv": 3293537, "_wandb": true, "_timestamp": 1579510252, "_runtime": 1658}
-+{"system.gpu.0.gpu": 89.4, "system.gpu.0.memory": 54.07, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 66.42, "system.gpu.0.powerPercent": 94.89, "system.cpu": 38.99, "system.memory": 23.73, "system.disk": 22.4, "system.proc.memory.availableMB": 11475.88, "system.proc.memory.rssMB": 2973.86, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 5353158, "system.network.recv": 3638383, "_wandb": true, "_timestamp": 1579510282, "_runtime": 1688}
-+{"system.gpu.0.gpu": 89.47, "system.gpu.0.memory": 54.2, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 72.24, "system.gpu.0.powerPercent": 103.2, "system.cpu": 38.73, "system.memory": 23.75, "system.disk": 22.4, "system.proc.memory.availableMB": 11472.79, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 5835668, "system.network.recv": 4000743, "_wandb": true, "_timestamp": 1579510312, "_runtime": 1718}
-+{"system.gpu.0.gpu": 89.53, "system.gpu.0.memory": 54.13, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.07, "system.gpu.0.powerWatts": 64.27, "system.gpu.0.powerPercent": 91.82, "system.cpu": 38.81, "system.memory": 23.75, "system.disk": 22.4, "system.proc.memory.availableMB": 11471.81, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 6261668, "system.network.recv": 4287637, "_wandb": true, "_timestamp": 1579510343, "_runtime": 1748}
-+{"system.gpu.0.gpu": 89.6, "system.gpu.0.memory": 54.27, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 69.51, "system.gpu.0.powerPercent": 99.3, "system.cpu": 38.54, "system.memory": 23.75, "system.disk": 22.4, "system.proc.memory.availableMB": 11472.59, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 6700788, "system.network.recv": 4577856, "_wandb": true, "_timestamp": 1579510373, "_runtime": 1778}
-+{"system.gpu.0.gpu": 89.8, "system.gpu.0.memory": 54.47, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 71.42, "system.gpu.0.powerPercent": 102.02, "system.cpu": 39.33, "system.memory": 24.39, "system.disk": 22.4, "system.proc.memory.availableMB": 11375.64, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 7142196, "system.network.recv": 4871182, "_wandb": true, "_timestamp": 1579510403, "_runtime": 1809}
-+{"system.gpu.0.gpu": 90.13, "system.gpu.0.memory": 54.6, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 59.28, "system.gpu.0.powerPercent": 84.68, "system.cpu": 38.85, "system.memory": 24.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11302.76, "system.proc.memory.rssMB": 2973.88, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 7583889, "system.network.recv": 5160633, "_wandb": true, "_timestamp": 1579510433, "_runtime": 1839}
-+{"system.gpu.0.gpu": 90.2, "system.gpu.0.memory": 54.53, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 64.21, "system.gpu.0.powerPercent": 91.73, "system.cpu": 38.73, "system.memory": 24.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11302.88, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 8007990, "system.network.recv": 5441264, "_wandb": true, "_timestamp": 1579510463, "_runtime": 1869}
-+{"system.gpu.0.gpu": 90.0, "system.gpu.0.memory": 54.53, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 66.28, "system.gpu.0.powerPercent": 94.68, "system.cpu": 38.74, "system.memory": 24.85, "system.disk": 22.4, "system.proc.memory.availableMB": 11303.79, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 8435309, "system.network.recv": 5727107, "_wandb": true, "_timestamp": 1579510493, "_runtime": 1899}
-+{"system.gpu.0.gpu": 89.6, "system.gpu.0.memory": 54.13, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 72.25, "system.gpu.0.powerPercent": 103.21, "system.cpu": 38.62, "system.memory": 24.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11303.35, "system.proc.memory.rssMB": 2973.88, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 8858885, "system.network.recv": 6006566, "_wandb": true, "_timestamp": 1579510523, "_runtime": 1929}
-+{"system.gpu.0.gpu": 86.67, "system.gpu.0.memory": 55.73, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 63.91, "system.gpu.0.powerPercent": 91.29, "system.cpu": 90.41, "system.memory": 23.54, "system.disk": 22.4, "system.proc.memory.availableMB": 11503.78, "system.proc.memory.rssMB": 2965.76, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 26.8, "system.network.sent": 8947611, "system.network.recv": 6062379, "_wandb": true, "_timestamp": 1579510554, "_runtime": 1959}
-+{"system.gpu.0.gpu": 86.07, "system.gpu.0.memory": 56.47, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 69.9, "system.gpu.0.powerPercent": 99.85, "system.cpu": 99.89, "system.memory": 23.77, "system.disk": 22.4, "system.proc.memory.availableMB": 11469.72, "system.proc.memory.rssMB": 2965.75, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 27.0, "system.network.sent": 8953536, "system.network.recv": 6079245, "_wandb": true, "_timestamp": 1579510584, "_runtime": 1990}
-+{"system.gpu.0.gpu": 78.33, "system.gpu.0.memory": 46.93, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.07, "system.gpu.0.powerWatts": 68.12, "system.gpu.0.powerPercent": 97.31, "system.cpu": 93.19, "system.memory": 24.17, "system.disk": 22.4, "system.proc.memory.availableMB": 11408.62, "system.proc.memory.rssMB": 2965.56, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 27.07, "system.network.sent": 9026902, "system.network.recv": 6145986, "_wandb": true, "_timestamp": 1579510614, "_runtime": 2020}
-+{"system.gpu.0.gpu": 89.53, "system.gpu.0.memory": 54.13, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 66.09, "system.gpu.0.powerPercent": 94.42, "system.cpu": 38.67, "system.memory": 23.71, "system.disk": 22.4, "system.proc.memory.availableMB": 11476.13, "system.proc.memory.rssMB": 2973.94, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 9596877, "system.network.recv": 6501867, "_wandb": true, "_timestamp": 1579510644, "_runtime": 2050}
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-new file mode 100644
-index 0000000..f338a22
---- /dev/null
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-@@ -0,0 +1,7 @@
-+{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.0654682070016861,-0.06339701265096664,-0.06132581830024719,-0.05925462394952774,-0.05718342587351799,-0.05511223152279854,-0.053041037172079086,-0.050969842821359634,-0.048898644745349884,-0.04682745039463043,-0.04475625604391098,-0.04268506169319153,-0.040613867342472076,-0.038542672991752625,-0.03647147864103317,-0.03440028056502342,-0.03232908621430397,-0.03025789186358452,-0.028186697512865067,-0.026115499436855316,-0.024044305086135864,-0.021973110735416412,-0.01990191638469696,-0.01783072203397751,-0.015759527683258057,-0.013688329607248306,-0.011617135256528854,-0.009545940905809402,-0.0074747465550899506,-0.005403552204370499,-0.0033323541283607483,-0.0012611597776412964,0.0008100345730781555,0.0028812289237976074,0.004952423274517059,0.007023617625236511,0.009094811975955963,0.011166006326675415,0.013237208127975464,0.015308402478694916,0.017379596829414368,0.01945079118013382,0.02152198553085327,0.023593179881572723,0.025664374232292175,0.027735568583011627,0.02980676293373108,0.03187795728445053,0.03394915163516998,0.03602035343647003,0.038091547787189484,0.040162742137908936,0.04223393648862839,0.04430513083934784,0.04637632519006729,0.04844751954078674,0.050518713891506195,0.05258990824222565,0.0546611025929451,0.05673230439424515,0.0588034987449646,0.060874685645103455,0.0629458874464035,0.06501707434654236,0.06708827614784241]},"gradients/classifier.weight":{"bins":[-0.09012244641780853,-0.08724749088287354,-0.08437253534793854,-0.08149757981300354,-0.07862262427806854,-0.07574766874313354,-0.07287271320819855,-0.06999775767326355,-0.06712280213832855,-0.06424784660339355,-0.06137289106845856,-0.05849793553352356,-0.05562297999858856,-0.052748024463653564,-0.04987306892871857,-0.04699811339378357,-0.04412315785884857,-0.041248202323913574,-0.03837324678897858,-0.03549829125404358,-0.03262333571910858,-0.029748380184173584,-0.026873424649238586,-0.02399846911430359,-0.02112351357936859,-0.018248558044433594,-0.015373602509498596,-0.012498646974563599,-0.009623691439628601,-0.0067487359046936035,-0.003873780369758606,-0.0009988248348236084,0.0018761307001113892,0.004751086235046387,0.007626041769981384,0.010500997304916382,0.01337595283985138,0.016250908374786377,0.019125863909721375,0.022000819444656372,0.02487577497959137,0.027750730514526367,0.030625686049461365,0.03350064158439636,0.03637559711933136,0.03925055265426636,0.042125508189201355,0.04500046372413635,0.04787541925907135,0.05075037479400635,0.053625330328941345,0.05650028586387634,0.05937524139881134,0.06225019693374634,0.06512515246868134,0.06800010800361633,0.07087506353855133,0.07375001907348633,0.07662497460842133,0.07949993014335632,0.08237488567829132,0.08524984121322632,0.08812479674816132,0.09099975228309631,0.09387470781803131],"_type":"histogram","values":[1,1,1,0,3,1,5,2,4,10,9,17,15,21,30,49,53,61,86,96,118,155,170,210,214,249,229,254,272,299,314,295,344,291,277,262,259,239,186,184,169,136,111,97,83,60,47,38,19,23,20,13,17,7,8,4,1,2,2,0,0,0,0,1]},"_step":0,"val_acc":0.23687943262411348,"train_acc":0.25812953441384673,"_runtime":814.0969541072845,"_timestamp":1.5795092246157851e+09}
-+{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1],"bins":[-0.07717597484588623,-0.07544030994176865,-0.07370464503765106,-0.07196898013353348,-0.0702333152294159,-0.06849765032529831,-0.06676198542118073,-0.06502632051706314,-0.06329065561294556,-0.06155499070882797,-0.05981932580471039,-0.058083660900592804,-0.05634799599647522,-0.054612331092357635,-0.05287666618824005,-0.05114100128412247,-0.04940533638000488,-0.0476696714758873,-0.045934006571769714,-0.04419834539294243,-0.042462680488824844,-0.04072701558470726,-0.038991350680589676,-0.03725568577647209,-0.03552002087235451,-0.03378435596823692,-0.03204869106411934,-0.030313026160001755,-0.02857736125588417,-0.026841696351766586,-0.025106031447649002,-0.023370366543531418,-0.021634701639413834,-0.01989903673529625,-0.018163371831178665,-0.01642770692706108,-0.014692042022943497,-0.012956380844116211,-0.011220715939998627,-0.009485051035881042,-0.007749386131763458,-0.006013721227645874,-0.00427805632352829,-0.0025423914194107056,-0.0008067265152931213,0.0009289383888244629,0.002664603292942047,0.004400268197059631,0.006135933101177216,0.0078715980052948,0.009607262909412384,0.011342927813529968,0.013078592717647552,0.014814257621765137,0.01654992252588272,0.018285587430000305,0.02002125233411789,0.021756917238235474,0.023492582142353058,0.025228247046470642,0.026963911950588226,0.02869957685470581,0.030435241758823395,0.03217090666294098,0.03390657156705856]},"gradients/classifier.weight":{"_type":"histogram","values":[1,0,1,0,1,1,3,1,1,2,4,9,11,17,27,29,40,36,67,86,99,128,150,186,242,222,248,298,311,327,349,317,357,337,321,308,284,232,208,178,153,140,97,76,67,43,32,35,19,16,10,6,2,2,3,3,0,0,0,0,0,0,0,1],"bins":[-0.10413810610771179,-0.10082836449146271,-0.09751862287521362,-0.09420888125896454,-0.09089913964271545,-0.08758939802646637,-0.08427965641021729,-0.0809699147939682,-0.07766017317771912,-0.07435043156147003,-0.07104068994522095,-0.06773094832897186,-0.06442121416330338,-0.06111147254705429,-0.057801730930805206,-0.05449198931455612,-0.05118224769830704,-0.04787250608205795,-0.04456276446580887,-0.041253022849559784,-0.0379432812333107,-0.034633539617061615,-0.03132379800081253,-0.028014056384563446,-0.02470432221889496,-0.021394580602645874,-0.01808483898639679,-0.014775097370147705,-0.01146535575389862,-0.008155614137649536,-0.004845872521400452,-0.0015361309051513672,0.0017736107110977173,0.005083352327346802,0.008393093943595886,0.01170283555984497,0.015012577176094055,0.01832231879234314,0.021632060408592224,0.02494180202484131,0.028251543641090393,0.03156128525733948,0.03487102687358856,0.038180768489837646,0.04149051010608673,0.044800251722335815,0.0481099933385849,0.051419734954833984,0.054729461669921875,0.05803920328617096,0.061348944902420044,0.06465868651866913,0.06796842813491821,0.0712781697511673,0.07458791136741638,0.07789765298366547,0.08120739459991455,0.08451713621616364,0.08782687783241272,0.0911366194486618,0.09444636106491089,0.09775610268115997,0.10106584429740906,0.10437558591365814,0.10768532752990723]},"_step":1,"val_acc":0.25011820330969264,"train_acc":0.258383926343752,"_runtime":974.3342196941376,"_timestamp":1.5795093848530507e+09}
-+{"gradients/classifier.bias":{"values":[1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.006489427760243416,-0.006147412117570639,-0.005805396940559149,-0.005463381297886372,-0.0051213656552135944,-0.004779350012540817,-0.004437334835529327,-0.00409531919285655,-0.0037533037830144167,-0.003411288373172283,-0.003069272730499506,-0.0027272573206573725,-0.002385241910815239,-0.0020432262681424618,-0.0017012106254696846,-0.0013591954484581947,-0.0010171798057854176,-0.0006751641631126404,-0.0003331489861011505,8.866656571626663e-06,0.00035088229924440384,0.0006928974762558937,0.0010349131189286709,0.001376928761601448,0.001718943938612938,0.0020609600469470024,0.0024029752239584923,0.002744990400969982,0.0030870065093040466,0.0034290216863155365,0.0037710368633270264,0.004113052971661091,0.004455068148672581,0.004797083325684071,0.005139099434018135,0.005481114611029625,0.005823129788041115,0.006165145896375179,0.006507161073386669,0.006849176250398159,0.0071911923587322235,0.007533207535743713,0.007875222712755203,0.008217238821089268,0.008559253998100758,0.008901269175112247,0.009243285283446312,0.009585300460457802,0.009927315637469292,0.010269330814480782,0.01061134785413742,0.01095336303114891,0.0112953782081604,0.01163739338517189,0.01197940856218338,0.01232142373919487,0.012663440778851509,0.013005455955862999,0.013347471132874489,0.013689486309885979,0.014031501486897469,0.014373516663908958,0.014715533703565598,0.015057548880577087,0.015399564057588577],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.07622425258159637,-0.07385586947202682,-0.07148748636245728,-0.06911909580230713,-0.06675071269273758,-0.06438232958316803,-0.06201394647359848,-0.05964556336402893,-0.05727717652916908,-0.054908789694309235,-0.052540406584739685,-0.050172023475170135,-0.047803640365600586,-0.04543525353074074,-0.04306687042117119,-0.04069848358631134,-0.03833010047674179,-0.03596171736717224,-0.03359333053231239,-0.031224947422742844,-0.028856560587882996,-0.026488177478313446,-0.024119794368743896,-0.02175140753388405,-0.0193830244243145,-0.01701464131474495,-0.014646254479885101,-0.012277871370315552,-0.009909488260746002,-0.007541105151176453,-0.005172714591026306,-0.0028043314814567566,-0.00043594837188720703,0.0019324347376823425,0.004300817847251892,0.006669208407402039,0.009037591516971588,0.011405974626541138,0.013774357736110687,0.016142740845680237,0.018511131405830383,0.020879514515399933,0.023247897624969482,0.025616280734539032,0.02798466384410858,0.03035304695367813,0.03272143751382828,0.03508982062339783,0.03745820373296738,0.039826586842536926,0.042194969952106476,0.04456336051225662,0.04693174362182617,0.049300119280815125,0.05166850984096527,0.05403690040111542,0.05640527606010437,0.05877366662025452,0.06114204227924347,0.06351043283939362,0.06587882339954376,0.06824719905853271,0.07061558961868286,0.07298396527767181,0.07535235583782196],"_type":"histogram","values":[1,2,2,4,0,3,3,1,11,7,15,14,23,25,27,43,59,66,75,106,101,128,148,168,174,206,231,240,275,266,300,299,271,298,285,266,270,214,209,214,192,142,152,94,103,94,63,48,43,36,29,22,19,17,12,8,5,3,1,6,3,1,0,1]},"_step":2,"val_acc":0.24964539007092199,"train_acc":0.2603407873430231,"_runtime":1133.4028816223145,"_timestamp":1.5795095439217126e+09}
-+{"gradients/classifier.bias":{"values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.06606416404247284,-0.06390783190727234,-0.06175149977207184,-0.05959516763687134,-0.05743883550167084,-0.05528250336647034,-0.053126171231269836,-0.050969839096069336,-0.048813506960868835,-0.046657174825668335,-0.044500842690467834,-0.042344510555267334,-0.040188178420066833,-0.03803184628486633,-0.03587551414966583,-0.03371918201446533,-0.03156284987926483,-0.02940651774406433,-0.02725018560886383,-0.02509385347366333,-0.02293752133846283,-0.02078118920326233,-0.01862485706806183,-0.016468524932861328,-0.014312192797660828,-0.012155860662460327,-0.009999528527259827,-0.007843196392059326,-0.005686864256858826,-0.003530532121658325,-0.0013741999864578247,0.0007821321487426758,0.0029384642839431763,0.005094796419143677,0.007251128554344177,0.009407460689544678,0.011563792824745178,0.013720124959945679,0.01587645709514618,0.01803278923034668,0.02018912136554718,0.02234545350074768,0.02450178563594818,0.02665811777114868,0.028814449906349182,0.030970782041549683,0.03312711417675018,0.035283446311950684,0.037439778447151184,0.039596110582351685,0.041752442717552185,0.043908774852752686,0.046065106987953186,0.048221439123153687,0.05037777125835419,0.05253410339355469,0.05469043552875519,0.05684676766395569,0.05900309979915619,0.06115943193435669,0.06331576406955719,0.06547209620475769,0.06762842833995819,0.06978476047515869,0.07194109261035919],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.09906706213951111,-0.09581608325242996,-0.09256510436534882,-0.08931412547826767,-0.08606314659118652,-0.08281217515468597,-0.07956118881702423,-0.07631021738052368,-0.07305923849344254,-0.06980825960636139,-0.06655728071928024,-0.0633063018321991,-0.06005532294511795,-0.056804344058036804,-0.053553368896245956,-0.05030239000916481,-0.047051411122083664,-0.04380043223500252,-0.04054945334792137,-0.037298478186130524,-0.03404749929904938,-0.03079652041196823,-0.027545541524887085,-0.02429456263780594,-0.021043583750724792,-0.017792604863643646,-0.0145416259765625,-0.01129065454006195,-0.008039675652980804,-0.004788696765899658,-0.001537717878818512,0.0017132610082626343,0.0049642398953437805,0.008215218782424927,0.011466197669506073,0.01471717655658722,0.017968155443668365,0.02121913433074951,0.02447010576725006,0.027721092104911804,0.030972063541412354,0.0342230498790741,0.037474021315574646,0.040724992752075195,0.04397597908973694,0.04722695052623749,0.05047793686389923,0.05372890830039978,0.05697989463806152,0.06023086607456207,0.06348185241222382,0.06673282384872437,0.06998381018638611,0.07323478162288666,0.07648575305938721,0.07973673939704895,0.0829877108335495,0.08623869717121124,0.08948966860771179,0.09274065494537354,0.09599162638187408,0.09924261271953583,0.10249358415603638,0.10574457049369812,0.10899554193019867],"_type":"histogram","values":[1,0,0,0,2,2,0,4,3,6,10,11,14,22,31,43,53,58,86,101,112,160,183,225,221,275,317,314,310,329,323,356,343,312,332,263,237,192,175,162,123,83,77,78,50,43,29,27,12,11,6,5,4,3,0,0,1,0,0,1,1,0,1,1]},"_step":3,"val_acc":0.26222222222222225,"train_acc":0.2627868635921119,"_runtime":1291.7072627544403,"_timestamp":1.5795097022260938e+09}
-+{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.037257447838783264,-0.035971060395240784,-0.034684669226408005,-0.033398281782865524,-0.032111890614032745,-0.030825503170490265,-0.029539113864302635,-0.028252724558115005,-0.026966335251927376,-0.025679945945739746,-0.024393556639552116,-0.023107167333364487,-0.021820779889822006,-0.020534390583634377,-0.019248001277446747,-0.017961611971259117,-0.016675222665071487,-0.015388833358883858,-0.014102444052696228,-0.012816054746508598,-0.011529665440320969,-0.010243277996778488,-0.008956888690590858,-0.007670499384403229,-0.006384110078215599,-0.005097720772027969,-0.003811333328485489,-0.00252494215965271,-0.0012385547161102295,4.783645272254944e-05,0.00133422389626503,0.002620615065097809,0.003907002508640289,0.00519338995218277,0.006479781121015549,0.007766168564558029,0.009052559733390808,0.010338947176933289,0.011625338345766068,0.012911725789308548,0.014198116958141327,0.015484504401683807,0.016770891845226288,0.018057283014059067,0.019343670457601547,0.020630061626434326,0.021916449069976807,0.023202840238809586,0.024489227682352066,0.025775618851184845,0.027062006294727325,0.028348393738269806,0.029634781181812286,0.030921176075935364,0.032207563519477844,0.033493950963020325,0.034780338406562805,0.036066725850105286,0.03735312074422836,0.038639508187770844,0.039925895631313324,0.041212283074855804,0.04249867796897888,0.04378506541252136,0.04507145285606384]},"gradients/classifier.weight":{"bins":[-0.0888357013463974,-0.08612215518951416,-0.08340860903263092,-0.08069506287574768,-0.07798151671886444,-0.0752679631114006,-0.07255441695451736,-0.06984087079763412,-0.06712732464075089,-0.06441377848386765,-0.061700232326984406,-0.05898668244481087,-0.05627313628792763,-0.05355959013104439,-0.05084604024887085,-0.04813249409198761,-0.04541894793510437,-0.04270540177822113,-0.03999185562133789,-0.03727830573916435,-0.03456475958228111,-0.03185121342539787,-0.029137663543224335,-0.026424117386341095,-0.023710571229457855,-0.020997025072574615,-0.018283478915691376,-0.015569932758808136,-0.0128563791513443,-0.01014283299446106,-0.00742928683757782,-0.00471574068069458,-0.0020021945238113403,0.0007113516330718994,0.003424897789955139,0.006138443946838379,0.008851990103721619,0.011565543711185455,0.014279089868068695,0.016992636024951935,0.019706182181835175,0.022419728338718414,0.025133274495601654,0.027846820652484894,0.03056037425994873,0.03327392041683197,0.03598746657371521,0.03870101273059845,0.04141455888748169,0.04412810504436493,0.04684165120124817,0.04955519735813141,0.05226874351501465,0.05498228967189789,0.05769583582878113,0.06040938198566437,0.0631229430437088,0.06583648920059204,0.06855003535747528,0.07126358151435852,0.07397712767124176,0.076690673828125,0.07940421998500824,0.08211776614189148,0.08483131229877472],"_type":"histogram","values":[1,0,0,0,2,0,1,0,10,6,9,13,11,18,18,29,47,58,58,70,96,103,104,181,183,180,232,264,280,262,304,320,289,307,281,323,255,289,218,224,185,155,132,132,118,76,65,59,48,22,30,26,17,9,5,3,4,2,3,3,1,2,0,1]},"_step":4,"val_acc":0.262789598108747,"train_acc":0.2653650279586515,"_runtime":1448.6882483959198,"_timestamp":1.5795098592070794e+09}
-+{"val_acc": 0.6363120567375886, "train_acc": 0.5801701490638866, "_runtime": 1825.7496349811554, "_timestamp": 1579510238.3097415, "_step": 5}
-+{"val_acc": 0.6672340425531915, "train_acc": 0.6266651664065672, "_runtime": 2201.1860706806183, "_timestamp": 1579510613.7461772, "_step": 6}
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json b/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-new file mode 100644
-index 0000000..351938b
---- /dev/null
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-@@ -0,0 +1,29 @@
-+{
-+    "root": "/home/ubamba98/droughtwatch",
-+    "program": "<python with no main file>",
-+    "git": {
-+        "remote": "https://github.com/ubamba98/droughtwatch",
-+        "commit": "4e7b9b38b8d5d3ec44d43373b8e263f50ead87a3"
-+    },
-+    "email": "ubamba98@gmail.com",
-+    "startedAt": "2020-01-20T08:44:21.248355",
-+    "host": "ccw-iclr",
-+    "username": "ubamba98",
-+    "executable": "/home/ubamba98/anaconda3/bin/python",
-+    "os": "Linux-4.9.0-11-amd64-x86_64-with-debian-9.11",
-+    "python": "3.7.3",
-+    "gpu": "Tesla T4",
-+    "gpu_count": 1,
-+    "cpu_count": 4,
-+    "cuda": "10.0.130",
-+    "args": [
-+        "-f",
-+        "/home/ubamba98/.local/share/jupyter/runtime/kernel-f86872c7-f93b-4579-ae59-db40fc8ec9c5.json"
-+    ],
-+    "state": "running",
-+    "jobType": null,
-+    "mode": "run",
-+    "name": "efficentnet-b3-765",
-+    "project": "droughtwatch",
-+    "heartbeatAt": "2020-01-20T08:57:27.146640"
-+}
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-summary.json b/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-new file mode 100644
-index 0000000..8c87848
---- /dev/null
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-@@ -0,0 +1 @@
-+{"graph_0": {"_type": "graph", "format": "torch", "nodes": [{"name": "conv_stem", "id": 140438557381128, "class_name": "Conv2dSame(3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False)", "parameters": [["weight", [40, 3, 3, 3]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [1080]}, {"name": "bn1", "id": 140438557383704, "class_name": "BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [40]], ["bias", [40]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [40, 40]}, {"name": "blocks.0.0", "id": 140438557382920, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)\n  (bn1): BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [40, 1, 3, 3]], ["bn1.weight", [40]], ["bn1.bias", [40]], ["se.conv_reduce.weight", [10, 40, 1, 1]], ["se.conv_reduce.bias", [10]], ["se.conv_expand.weight", [40, 10, 1, 1]], ["se.conv_expand.bias", [40]], ["conv_pw.weight", [24, 40, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [360, 40, 40, 400, 10, 400, 40, 960, 24, 24]}, {"name": "blocks.0.1", "id": 140438680665224, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)\n  (bn1): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [24, 1, 3, 3]], ["bn1.weight", [24]], ["bn1.bias", [24]], ["se.conv_reduce.weight", [6, 24, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [24, 6, 1, 1]], ["se.conv_expand.bias", [24]], ["conv_pw.weight", [24, 24, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [216, 24, 24, 144, 6, 144, 24, 576, 24, 24]}, {"name": "blocks.1.0", "id": 140438676598736, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(144, 144, kernel_size=(3, 3), stride=(2, 2), groups=144, bias=False)\n  (bn2): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [144, 24, 1, 1]], ["bn1.weight", [144]], ["bn1.bias", [144]], ["conv_dw.weight", [144, 1, 3, 3]], ["bn2.weight", [144]], ["bn2.bias", [144]], ["se.conv_reduce.weight", [6, 144, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [144, 6, 1, 1]], ["se.conv_expand.bias", [144]], ["conv_pwl.weight", [32, 144, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 4608, 32, 32]}, {"name": "blocks.1.1", "id": 140438557424160, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.1.2", "id": 140438679559640, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.2.0", "id": 140438679470320, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(192, 192, kernel_size=(5, 5), stride=(2, 2), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 5, 5]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [48, 192, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [6144, 192, 192, 4800, 192, 192, 1536, 8, 1536, 192, 9216, 48, 48]}, {"name": "blocks.2.1", "id": 140438557424384, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.2.2", "id": 140438557422704, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.3.0", "id": 140438557421920, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(288, 288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 3, 3]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [96, 288, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [13824, 288, 288, 2592, 288, 288, 3456, 12, 3456, 288, 27648, 96, 96]}, {"name": "blocks.3.1", "id": 140438557422816, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.2", "id": 140438557824392, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.3", "id": 140438557825232, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.4", "id": 140438557825176, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.4.0", "id": 140438557824672, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 5, 5]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [136, 576, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [55296, 576, 576, 14400, 576, 576, 13824, 24, 13824, 576, 78336, 136, 136]}, {"name": "blocks.4.1", "id": 140438557823496, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.2", "id": 140438679158968, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.3", "id": 140438679496744, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.4", "id": 140438679422456, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.5.0", "id": 140438679421448, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(816, 816, kernel_size=(5, 5), stride=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [232, 816, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 189312, 232, 232]}, {"name": "blocks.5.1", "id": 140438679580400, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.2", "id": 140438679115088, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.3", "id": 140438676984832, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.4", "id": 140440670709296, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.5", "id": 140440670710192, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.6.0", "id": 140440670709464, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 3, 3]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [384, 1392, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [322944, 1392, 1392, 12528, 1392, 1392, 80736, 58, 80736, 1392, 534528, 384, 384]}, {"name": "blocks.6.1", "id": 140438679947864, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(384, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)\n  (bn2): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(2304, 96, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(96, 2304, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(2304, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [2304, 384, 1, 1]], ["bn1.weight", [2304]], ["bn1.bias", [2304]], ["conv_dw.weight", [2304, 1, 3, 3]], ["bn2.weight", [2304]], ["bn2.bias", [2304]], ["se.conv_reduce.weight", [96, 2304, 1, 1]], ["se.conv_reduce.bias", [96]], ["se.conv_expand.weight", [2304, 96, 1, 1]], ["se.conv_expand.bias", [2304]], ["conv_pwl.weight", [384, 2304, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [884736, 2304, 2304, 20736, 2304, 2304, 221184, 96, 221184, 2304, 884736, 384, 384]}, {"name": "conv_head", "id": 140438557382584, "class_name": "Conv2d(384, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)", "parameters": [["weight", [1536, 384, 1, 1]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [589824]}, {"name": "bn2", "id": 140438703610848, "class_name": "BatchNorm2d(1536, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [1536]], ["bias", [1536]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [1536, 1536]}, {"name": "global_pool", "id": 140438703610792, "class_name": "SelectAdaptivePool2d (output_size=1, pool_type=avg)", "parameters": [], "output_shape": [[256, 1536, 1, 1]], "num_parameters": []}, {"name": "classifier", "id": 140438679885696, "class_name": "Linear(in_features=1536, out_features=4, bias=True)", "parameters": [["weight", [4, 1536]], ["bias", [4]]], "output_shape": [[256, 4]], "num_parameters": [6144, 4]}], "edges": []}, "train_acc": 0.2653650279586515, "_step": 4, "gradients/classifier.weight": {"bins": [-0.0888357013463974, -0.08612215518951416, -0.08340860903263092, -0.08069506287574768, -0.07798151671886444, -0.0752679631114006, -0.07255441695451736, -0.06984087079763412, -0.06712732464075089, -0.06441377848386765, -0.061700232326984406, -0.05898668244481087, -0.05627313628792763, -0.05355959013104439, -0.05084604024887085, -0.04813249409198761, -0.04541894793510437, -0.04270540177822113, -0.03999185562133789, -0.03727830573916435, -0.03456475958228111, -0.03185121342539787, -0.029137663543224335, -0.026424117386341095, -0.023710571229457855, -0.020997025072574615, -0.018283478915691376, -0.015569932758808136, -0.0128563791513443, -0.01014283299446106, -0.00742928683757782, -0.00471574068069458, -0.0020021945238113403, 0.0007113516330718994, 0.003424897789955139, 0.006138443946838379, 0.008851990103721619, 0.011565543711185455, 0.014279089868068697, 0.016992636024951935, 0.019706182181835175, 0.022419728338718414, 0.025133274495601658, 0.027846820652484897, 0.03056037425994873, 0.03327392041683197, 0.03598746657371521, 0.03870101273059845, 0.04141455888748169, 0.04412810504436493, 0.04684165120124817, 0.04955519735813141, 0.05226874351501465, 0.05498228967189789, 0.05769583582878113, 0.06040938198566437, 0.0631229430437088, 0.06583648920059204, 0.06855003535747528, 0.07126358151435852, 0.07397712767124176, 0.076690673828125, 0.07940421998500824, 0.08211776614189148, 0.08483131229877472], "_type": "histogram", "values": [1, 0, 0, 0, 2, 0, 1, 0, 10, 6, 9, 13, 11, 18, 18, 29, 47, 58, 58, 70, 96, 103, 104, 181, 183, 180, 232, 264, 280, 262, 304, 320, 289, 307, 281, 323, 255, 289, 218, 224, 185, 155, 132, 132, 118, 76, 65, 59, 48, 22, 30, 26, 17, 9, 5, 3, 4, 2, 3, 3, 1, 2, 0, 1]}, "gradients/classifier.bias": {"bins": [-0.037257447838783264, -0.035971060395240784, -0.034684669226408005, -0.033398281782865524, -0.032111890614032745, -0.030825503170490265, -0.029539113864302635, -0.028252724558115005, -0.026966335251927376, -0.025679945945739743, -0.024393556639552116, -0.023107167333364487, -0.02182077988982201, -0.020534390583634377, -0.019248001277446747, -0.017961611971259117, -0.016675222665071487, -0.015388833358883858, -0.014102444052696228, -0.012816054746508598, -0.011529665440320969, -0.010243277996778488, -0.008956888690590858, -0.007670499384403229, -0.006384110078215599, -0.005097720772027969, -0.003811333328485489, -0.00252494215965271, -0.0012385547161102295, 4.783645272254944e-05, 0.00133422389626503, 0.002620615065097809, 0.003907002508640289, 0.00519338995218277, 0.006479781121015549, 0.007766168564558029, 0.009052559733390808, 0.010338947176933289, 0.011625338345766068, 0.012911725789308548, 0.014198116958141329, 0.015484504401683807, 0.016770891845226288, 0.018057283014059067, 0.019343670457601547, 0.02063006162643433, 0.021916449069976807, 0.023202840238809586, 0.024489227682352063, 0.025775618851184845, 0.027062006294727325, 0.02834839373826981, 0.029634781181812286, 0.030921176075935364, 0.032207563519477844, 0.033493950963020325, 0.034780338406562805, 0.036066725850105286, 0.03735312074422836, 0.03863950818777085, 0.03992589563131333, 0.04121228307485581, 0.04249867796897888, 0.04378506541252136, 0.04507145285606384], "_type": "histogram", "values": [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]}, "val_acc": 0.262789598108747, "_runtime": 1448.6882483959198, "_timestamp": 1579509859.2070794}
-diff --git a/wandb/settings b/wandb/settings
-new file mode 100644
-index 0000000..24e2065
---- /dev/null
-+++ b/wandb/settings
-@@ -0,0 +1,4 @@
-+[default]
-+entity = ubamba98
-+project = droughtwatch
-+
diff --git a/wandb/run-20200120_085802-wm904utc/wandb-events.jsonl b/wandb/run-20200120_085802-wm904utc/wandb-events.jsonl
deleted file mode 100644
index 9aedeeb..0000000
--- a/wandb/run-20200120_085802-wm904utc/wandb-events.jsonl
+++ /dev/null
@@ -1,2 +0,0 @@
-{"system.network.sent":12895,"system.gpu.0.powerPercent":44.98,"system.network.recv":59474,"system.disk":22.4,"system.gpu.0.powerWatts":31.49,"_wandb":true,"system.gpu.0.temp":69,"system.gpu.0.memory":0,"system.gpu.0.gpu":0,"_runtime":1,"system.proc.memory.rssMB":263.29,"system.proc.memory.availableMB":14234.11,"system.cpu":15.8,"system.proc.cpu.threads":16,"system.memory":5.4,"system.proc.memory.percent":1.75,"system.gpu.0.memoryAllocated":0,"_timestamp":1579510683}
-{"system.gpu.0.gpu": 80.93, "system.gpu.0.memory": 61.6, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.27, "system.gpu.0.powerWatts": 68.4, "system.gpu.0.powerPercent": 97.71, "system.cpu": 88.08, "system.memory": 23.6, "system.disk": 22.4, "system.proc.memory.availableMB": 11495.6, "system.proc.memory.rssMB": 2964.58, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 27.87, "system.network.sent": 1473527, "system.network.recv": 806249, "_wandb": true, "_timestamp": 1579510720, "_runtime": 30}
diff --git a/wandb/run-20200120_085802-wm904utc/wandb-history.jsonl b/wandb/run-20200120_085802-wm904utc/wandb-history.jsonl
deleted file mode 100644
index e69de29..0000000
diff --git a/wandb/run-20200120_085802-wm904utc/wandb-metadata.json b/wandb/run-20200120_085802-wm904utc/wandb-metadata.json
deleted file mode 100644
index 91dca3d..0000000
--- a/wandb/run-20200120_085802-wm904utc/wandb-metadata.json
+++ /dev/null
@@ -1,29 +0,0 @@
-{
-    "root": "/home/ubamba98/droughtwatch",
-    "program": "<python with no main file>",
-    "git": {
-        "remote": "https://github.com/ubamba98/droughtwatch",
-        "commit": "4e7b9b38b8d5d3ec44d43373b8e263f50ead87a3"
-    },
-    "email": "ubamba98@gmail.com",
-    "startedAt": "2020-01-20T08:58:10.892468",
-    "host": "ccw-iclr",
-    "username": "ubamba98",
-    "executable": "/home/ubamba98/anaconda3/bin/python",
-    "os": "Linux-4.9.0-11-amd64-x86_64-with-debian-9.11",
-    "python": "3.7.3",
-    "gpu": "Tesla T4",
-    "gpu_count": 1,
-    "cpu_count": 4,
-    "cuda": "10.0.130",
-    "args": [
-        "-f",
-        "/home/ubamba98/.local/share/jupyter/runtime/kernel-f86872c7-f93b-4579-ae59-db40fc8ec9c5.json"
-    ],
-    "state": "running",
-    "jobType": null,
-    "mode": "run",
-    "name": "efficentnet-b3-765",
-    "project": "droughtwatch",
-    "heartbeatAt": "2020-01-20T08:58:44.034037"
-}
diff --git a/wandb/run-20200120_085802-wm904utc/wandb-summary.json b/wandb/run-20200120_085802-wm904utc/wandb-summary.json
deleted file mode 100644
index b2ce3d7..0000000
--- a/wandb/run-20200120_085802-wm904utc/wandb-summary.json
+++ /dev/null
@@ -1 +0,0 @@
-{"graph_0": {"_type": "graph", "format": "torch", "nodes": [{"name": "conv_stem", "id": 139714683062032, "class_name": "Conv2dSame(3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False)", "parameters": [["weight", [40, 3, 3, 3]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [1080]}, {"name": "bn1", "id": 139714683062144, "class_name": "BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [40]], ["bias", [40]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [40, 40]}, {"name": "blocks.0.0", "id": 139714683063264, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)\n  (bn1): BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [40, 1, 3, 3]], ["bn1.weight", [40]], ["bn1.bias", [40]], ["se.conv_reduce.weight", [10, 40, 1, 1]], ["se.conv_reduce.bias", [10]], ["se.conv_expand.weight", [40, 10, 1, 1]], ["se.conv_expand.bias", [40]], ["conv_pw.weight", [24, 40, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [360, 40, 40, 400, 10, 400, 40, 960, 24, 24]}, {"name": "blocks.0.1", "id": 139714683062088, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)\n  (bn1): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [24, 1, 3, 3]], ["bn1.weight", [24]], ["bn1.bias", [24]], ["se.conv_reduce.weight", [6, 24, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [24, 6, 1, 1]], ["se.conv_expand.bias", [24]], ["conv_pw.weight", [24, 24, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [216, 24, 24, 144, 6, 144, 24, 576, 24, 24]}, {"name": "blocks.1.0", "id": 139714738983320, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(144, 144, kernel_size=(3, 3), stride=(2, 2), groups=144, bias=False)\n  (bn2): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [144, 24, 1, 1]], ["bn1.weight", [144]], ["bn1.bias", [144]], ["conv_dw.weight", [144, 1, 3, 3]], ["bn2.weight", [144]], ["bn2.bias", [144]], ["se.conv_reduce.weight", [6, 144, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [144, 6, 1, 1]], ["se.conv_expand.bias", [144]], ["conv_pwl.weight", [32, 144, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 4608, 32, 32]}, {"name": "blocks.1.1", "id": 139714739031288, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.1.2", "id": 139714714921672, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.2.0", "id": 139714712066816, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(192, 192, kernel_size=(5, 5), stride=(2, 2), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 5, 5]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [48, 192, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [6144, 192, 192, 4800, 192, 192, 1536, 8, 1536, 192, 9216, 48, 48]}, {"name": "blocks.2.1", "id": 139714683531952, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.2.2", "id": 139714683534024, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.3.0", "id": 139714683533688, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(288, 288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 3, 3]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [96, 288, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [13824, 288, 288, 2592, 288, 288, 3456, 12, 3456, 288, 27648, 96, 96]}, {"name": "blocks.3.1", "id": 139714683533072, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.2", "id": 139714683533576, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.3", "id": 139714715006456, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.4", "id": 139714715619400, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.4.0", "id": 139714715704680, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 5, 5]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [136, 576, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [55296, 576, 576, 14400, 576, 576, 13824, 24, 13824, 576, 78336, 136, 136]}, {"name": "blocks.4.1", "id": 139714714621096, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.2", "id": 139714716098008, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.3", "id": 139714716098344, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.4", "id": 139714683126672, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.5.0", "id": 139714683126728, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(816, 816, kernel_size=(5, 5), stride=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [232, 816, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 189312, 232, 232]}, {"name": "blocks.5.1", "id": 139714683126000, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.2", "id": 139714683128128, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.3", "id": 139714871305216, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.4", "id": 139714714846880, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.5", "id": 139714714847048, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.6.0", "id": 139714714732696, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 3, 3]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [384, 1392, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [322944, 1392, 1392, 12528, 1392, 1392, 80736, 58, 80736, 1392, 534528, 384, 384]}, {"name": "blocks.6.1", "id": 139716697741464, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(384, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)\n  (bn2): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(2304, 96, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(96, 2304, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(2304, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [2304, 384, 1, 1]], ["bn1.weight", [2304]], ["bn1.bias", [2304]], ["conv_dw.weight", [2304, 1, 3, 3]], ["bn2.weight", [2304]], ["bn2.bias", [2304]], ["se.conv_reduce.weight", [96, 2304, 1, 1]], ["se.conv_reduce.bias", [96]], ["se.conv_expand.weight", [2304, 96, 1, 1]], ["se.conv_expand.bias", [2304]], ["conv_pwl.weight", [384, 2304, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [884736, 2304, 2304, 20736, 2304, 2304, 221184, 96, 221184, 2304, 884736, 384, 384]}, {"name": "conv_head", "id": 139714683063376, "class_name": "Conv2d(384, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)", "parameters": [["weight", [1536, 384, 1, 1]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [589824]}, {"name": "bn2", "id": 139714614870256, "class_name": "BatchNorm2d(1536, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [1536]], ["bias", [1536]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [1536, 1536]}, {"name": "global_pool", "id": 139714614870312, "class_name": "SelectAdaptivePool2d (output_size=1, pool_type=avg)", "parameters": [], "output_shape": [[256, 1536, 1, 1]], "num_parameters": []}, {"name": "classifier", "id": 139714614870424, "class_name": "Linear(in_features=1536, out_features=4, bias=True)", "parameters": [["weight", [4, 1536]], ["bias", [4]]], "output_shape": [[256, 4]], "num_parameters": [6144, 4]}], "edges": []}}
diff --git a/wandb/run-20200120_085945-17rqrqo6/config.yaml b/wandb/run-20200120_085945-17rqrqo6/config.yaml
deleted file mode 100644
index 1189525..0000000
--- a/wandb/run-20200120_085945-17rqrqo6/config.yaml
+++ /dev/null
@@ -1,8 +0,0 @@
-wandb_version: 1
-
-_wandb:
-  desc: null
-  value:
-    cli_version: 0.8.21
-    is_jupyter_run: true
-    python_version: 3.7.3
diff --git a/wandb/run-20200120_085945-17rqrqo6/diff.patch b/wandb/run-20200120_085945-17rqrqo6/diff.patch
deleted file mode 100644
index 2c11a77..0000000
--- a/wandb/run-20200120_085945-17rqrqo6/diff.patch
+++ /dev/null
@@ -1,1172 +0,0 @@
-diff --git a/Efficientnet-b3-765.ipynb b/Efficientnet-b3-765.ipynb
-index e21879d..6593068 100644
---- a/Efficientnet-b3-765.ipynb
-+++ b/Efficientnet-b3-765.ipynb
-@@ -47,7 +47,7 @@
-        "\n",
-        "                Logging results to <a href=\"https://wandb.com\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-        "                Project page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch</a><br/>\n",
--       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae</a><br/>\n",
-+       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/17rqrqo6\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/17rqrqo6</a><br/>\n",
-        "            "
-       ],
-       "text/plain": [
-@@ -67,7 +67,7 @@
-     {
-      "data": {
-       "text/plain": [
--       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae"
-+       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/17rqrqo6"
-       ]
-      },
-      "execution_count": 2,
-@@ -179,7 +179,6 @@
-     "            #print(\"x:\" ,x_var.shape)\n",
-     "            #print(\"y: \",y_var)\n",
-     "        \n",
--    "            \n",
-     "            x_var = x_var.to(device)\n",
-     "            y_var = y_var.to(device)\n",
-     "            # Run the model forward to compute scores and loss.\n",
-@@ -612,7 +611,7 @@
-     {
-      "data": {
-       "text/plain": [
--       "[<wandb.wandb_torch.TorchGraph at 0x7fba6796b390>]"
-+       "[<wandb.wandb_torch.TorchGraph at 0x7f228afc5d30>]"
-       ]
-      },
-      "execution_count": 10,
-@@ -660,7 +659,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 15,
-+   "execution_count": 12,
-    "metadata": {},
-    "outputs": [
-     {
-@@ -677,7 +676,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 16,
-+   "execution_count": 13,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -720,7 +719,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 17,
-+   "execution_count": 14,
-    "metadata": {},
-    "outputs": [
-     {
-@@ -767,7 +766,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 20,
-+   "execution_count": 15,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -777,7 +776,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 21,
-+   "execution_count": 16,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -786,7 +785,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": null,
-+   "execution_count": 17,
-    "metadata": {
-     "scrolled": false
-    },
-@@ -801,7 +800,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "80b522c9c4e64d92b6541c2f2c7d07b9",
-+       "model_id": "8d810d63e16c408da628a99fea7c2ed6",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -826,7 +825,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "04f71f6e37844647ae678399efcd907a",
-+       "model_id": "c6b7f436057946c1bb6328021db6d842",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -842,7 +841,84 @@
-      "output_type": "stream",
-      "text": [
-       "\n",
--      "Calculating accuracies\n"
-+      "Calculating accuracies\n",
-+      "Train accuracy:  0.258383926343752 ;    Val accuracy:  0.25011820330969264 \n",
-+      "\n",
-+      "Starting epoch 3 / 5\n"
-+     ]
-+    },
-+    {
-+     "data": {
-+      "application/vnd.jupyter.widget-view+json": {
-+       "model_id": "9064e4c4df6e4021ab5875d64c6466ed",
-+       "version_major": 2,
-+       "version_minor": 0
-+      },
-+      "text/plain": [
-+       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-+      ]
-+     },
-+     "metadata": {},
-+     "output_type": "display_data"
-+    },
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "\n",
-+      "Calculating accuracies\n",
-+      "Train accuracy:  0.2603407873430231 ;    Val accuracy:  0.24964539007092199 \n",
-+      "\n",
-+      "Starting epoch 4 / 5\n"
-+     ]
-+    },
-+    {
-+     "data": {
-+      "application/vnd.jupyter.widget-view+json": {
-+       "model_id": "050ca6562e75419d9ee9a6cf1c047bee",
-+       "version_major": 2,
-+       "version_minor": 0
-+      },
-+      "text/plain": [
-+       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-+      ]
-+     },
-+     "metadata": {},
-+     "output_type": "display_data"
-+    },
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "\n",
-+      "Calculating accuracies\n",
-+      "Train accuracy:  0.2627868635921119 ;    Val accuracy:  0.26222222222222225 \n",
-+      "\n",
-+      "Starting epoch 5 / 5\n"
-+     ]
-+    },
-+    {
-+     "data": {
-+      "application/vnd.jupyter.widget-view+json": {
-+       "model_id": "9c245188cf204171973be920214d3789",
-+       "version_major": 2,
-+       "version_minor": 0
-+      },
-+      "text/plain": [
-+       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-+      ]
-+     },
-+     "metadata": {},
-+     "output_type": "display_data"
-+    },
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "\n",
-+      "Calculating accuracies\n",
-+      "Train accuracy:  0.2653650279586515 ;    Val accuracy:  0.262789598108747 \n",
-+      "\n"
-      ]
-     }
-    ],
-@@ -870,9 +946,9 @@
-     "    val_acc_list.append(val_acc)\n",
-     "    print('Train accuracy: ', train_acc, ';    Val accuracy: ', val_acc, \"\\n\")\n",
-     "    df_data=np.array([train_acc_list, val_acc_list]).T\n",
--    "    wandb.log({\n",
--    "        \"val_acc\": val_acc,\n",
--    "        \"train_acc\": train_acc})\n",
-+    "#     wandb.log({\n",
-+    "#         \"val_acc\": val_acc,\n",
-+    "#         \"train_acc\": train_acc})\n",
-     "    df = pd.DataFrame(df_data,columns = ['train_accuracy','test_accuracy'])\n",
-     "    df.to_csv('logs/b3-765.csv')\n",
-     "model_wgt = \"models/b3-765_1_e\" + str(epoch+1) + \".pth\"\n",
-@@ -881,7 +957,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": null,
-+   "execution_count": 18,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -894,7 +970,257 @@
-    "metadata": {
-     "scrolled": false
-    },
--   "outputs": [],
-+   "outputs": [
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "Starting epoch 1 / 10\n"
-+     ]
-+    },
-+    {
-+     "data": {
-+      "application/vnd.jupyter.widget-view+json": {
-+       "model_id": "4102bf77807247b3ac7945cc64495569",
-+       "version_major": 2,
-+       "version_minor": 0
-+      },
-+      "text/plain": [
-+       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-+      ]
-+     },
-+     "metadata": {},
-+     "output_type": "display_data"
-+    },
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "\n",
-+      "Calculating accuracies\n",
-+      "Train accuracy:  0.5801701490638866 ;    Val accuracy:  0.6363120567375886\n",
-+      "*** New optimal found, saving state ***\n",
-+      "Starting epoch 2 / 10\n"
-+     ]
-+    },
-+    {
-+     "data": {
-+      "application/vnd.jupyter.widget-view+json": {
-+       "model_id": "42cb3b3d2255480b87fbbeb3a5cbc9e5",
-+       "version_major": 2,
-+       "version_minor": 0
-+      },
-+      "text/plain": [
-+       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-+      ]
-+     },
-+     "metadata": {},
-+     "output_type": "display_data"
-+    },
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "\n",
-+      "Calculating accuracies\n",
-+      "Train accuracy:  0.6266651664065672 ;    Val accuracy:  0.6672340425531915\n",
-+      "*** New optimal found, saving state ***\n",
-+      "Starting epoch 3 / 10\n"
-+     ]
-+    },
-+    {
-+     "data": {
-+      "application/vnd.jupyter.widget-view+json": {
-+       "model_id": "44fd0595c206488a8b3931442d48b77b",
-+       "version_major": 2,
-+       "version_minor": 0
-+      },
-+      "text/plain": [
-+       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-+      ]
-+     },
-+     "metadata": {},
-+     "output_type": "display_data"
-+    },
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "\n",
-+      "Calculating accuracies\n",
-+      "Train accuracy:  0.6697112162380325 ;    Val accuracy:  0.6526713947990543\n",
-+      "Starting epoch 4 / 10\n"
-+     ]
-+    },
-+    {
-+     "data": {
-+      "application/vnd.jupyter.widget-view+json": {
-+       "model_id": "18b353ad464b41d8a77ba073859c2250",
-+       "version_major": 2,
-+       "version_minor": 0
-+      },
-+      "text/plain": [
-+       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-+      ]
-+     },
-+     "metadata": {},
-+     "output_type": "display_data"
-+    },
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "\n",
-+      "Calculating accuracies\n",
-+      "Train accuracy:  0.672612262669452 ;    Val accuracy:  0.6879432624113475\n",
-+      "*** New optimal found, saving state ***\n",
-+      "Starting epoch 5 / 10\n"
-+     ]
-+    },
-+    {
-+     "data": {
-+      "application/vnd.jupyter.widget-view+json": {
-+       "model_id": "f2b7deccfd654de7a1b3493fc05039ef",
-+       "version_major": 2,
-+       "version_minor": 0
-+      },
-+      "text/plain": [
-+       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-+      ]
-+     },
-+     "metadata": {},
-+     "output_type": "display_data"
-+    },
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "\n",
-+      "Calculating accuracies\n",
-+      "Train accuracy:  0.6646625148599132 ;    Val accuracy:  0.6322458628841607\n",
-+      "Starting epoch 6 / 10\n"
-+     ]
-+    },
-+    {
-+     "data": {
-+      "application/vnd.jupyter.widget-view+json": {
-+       "model_id": "5ffa3775134444b2b27ecba844943292",
-+       "version_major": 2,
-+       "version_minor": 0
-+      },
-+      "text/plain": [
-+       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-+      ]
-+     },
-+     "metadata": {},
-+     "output_type": "display_data"
-+    },
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "\n",
-+      "Calculating accuracies\n",
-+      "Train accuracy:  0.7050668023423626 ;    Val accuracy:  0.6571158392434988\n",
-+      "Starting epoch 7 / 10\n"
-+     ]
-+    },
-+    {
-+     "data": {
-+      "application/vnd.jupyter.widget-view+json": {
-+       "model_id": "e9fd6e73c66c447eaeb751d73b6e5932",
-+       "version_major": 2,
-+       "version_minor": 0
-+      },
-+      "text/plain": [
-+       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-+      ]
-+     },
-+     "metadata": {},
-+     "output_type": "display_data"
-+    },
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "\n",
-+      "Calculating accuracies\n",
-+      "Train accuracy:  0.7046852144475048 ;    Val accuracy:  0.7300236406619386\n",
-+      "*** New optimal found, saving state ***\n",
-+      "Starting epoch 8 / 10\n"
-+     ]
-+    },
-+    {
-+     "data": {
-+      "application/vnd.jupyter.widget-view+json": {
-+       "model_id": "58206d6ea045486ba6619ccce291de08",
-+       "version_major": 2,
-+       "version_minor": 0
-+      },
-+      "text/plain": [
-+       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-+      ]
-+     },
-+     "metadata": {},
-+     "output_type": "display_data"
-+    },
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "\n",
-+      "Calculating accuracies\n",
-+      "Train accuracy:  0.7135351183167081 ;    Val accuracy:  0.6553191489361702\n",
-+      "Starting epoch 9 / 10\n"
-+     ]
-+    },
-+    {
-+     "data": {
-+      "application/vnd.jupyter.widget-view+json": {
-+       "model_id": "77ef77fb3fc94e85aaf8ab463af9772f",
-+       "version_major": 2,
-+       "version_minor": 0
-+      },
-+      "text/plain": [
-+       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-+      ]
-+     },
-+     "metadata": {},
-+     "output_type": "display_data"
-+    },
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "\n",
-+      "Calculating accuracies\n",
-+      "Train accuracy:  0.7369049308005029 ;    Val accuracy:  0.6692198581560284\n",
-+      "Starting epoch 10 / 10\n"
-+     ]
-+    },
-+    {
-+     "data": {
-+      "application/vnd.jupyter.widget-view+json": {
-+       "model_id": "ed58c7ced5124a7bbacef133613c3514",
-+       "version_major": 2,
-+       "version_minor": 0
-+      },
-+      "text/plain": [
-+       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-+      ]
-+     },
-+     "metadata": {},
-+     "output_type": "display_data"
-+    },
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "\n",
-+      "Calculating accuracies\n"
-+     ]
-+    }
-+   ],
-    "source": [
-     "# # Now we want to finetune the entire model for a few epochs. To do thise we\n",
-     "# # will need to compute gradients with respect to all model parameters, so\n",
-@@ -922,9 +1248,9 @@
-     "    val_acc_list.append(val_acc)\n",
-     "    \n",
-     "    print('Train accuracy: ', train_acc, ';    Val accuracy: ', val_acc)\n",
--    "    wandb.log({\n",
--    "        \"val_acc\": val_acc,\n",
--    "        \"train_acc\": train_acc})\n",
-+    "#     wandb.log({\n",
-+    "#         \"val_acc\": val_acc,\n",
-+    "#         \"train_acc\": train_acc})\n",
-     "    df_data=np.array([train_acc_list, val_acc_list]).T\n",
-     "    df = pd.DataFrame(df_data,columns = ['train_accuracy','test_accuracy'])\n",
-     "    df.to_csv('logs/b3-765.csv')\n",
-diff --git a/wandb/run-20200120_081855-gzutdaae/diff.patch b/wandb/run-20200120_081855-gzutdaae/diff.patch
-index c6015c1..1aee41d 100644
---- a/wandb/run-20200120_081855-gzutdaae/diff.patch
-+++ b/wandb/run-20200120_081855-gzutdaae/diff.patch
-@@ -1,201 +1,370 @@
- diff --git a/Efficientnet-b3-765.ipynb b/Efficientnet-b3-765.ipynb
--index 691c745..9cf4f55 100644
-+index e21879d..451f688 100644
- --- a/Efficientnet-b3-765.ipynb
- +++ b/Efficientnet-b3-765.ipynb
--@@ -47,7 +47,7 @@
--        "\n",
--        "                Logging results to <a href=\"https://wandb.com\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
--        "                Project page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch</a><br/>\n",
---       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm</a><br/>\n",
--+       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae</a><br/>\n",
--        "            "
--       ],
--       "text/plain": [
--@@ -67,7 +67,7 @@
--     {
--      "data": {
--       "text/plain": [
---       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm"
--+       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae"
--       ]
--      },
--      "execution_count": 2,
--@@ -77,7 +77,16 @@
--    ],
--    "source": [
--     "import wandb\n",
---    "wandb.init(project=\"droughtwatch\")"
--+    "wandb.init(project='droughtwatch', name='efficentnet-b3-765')"
--+   ]
--+  },
--+  {
--+   "cell_type": "code",
--+   "execution_count": 3,
--+   "metadata": {},
--+   "outputs": [],
--+   "source": [
--+    "os.environ['WANDB_NOTEBOOK_NAME'] = \"efficentnet-b3-765\""
--    ]
--   },
--   {
--@@ -89,7 +98,7 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 3,
--+   "execution_count": 4,
--    "metadata": {},
--    "outputs": [],
--    "source": [
--@@ -112,7 +121,7 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 4,
--+   "execution_count": 5,
--    "metadata": {},
--    "outputs": [],
--    "source": [
--@@ -147,7 +156,7 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 5,
--+   "execution_count": 6,
--    "metadata": {},
--    "outputs": [],
--    "source": [
--@@ -188,7 +197,7 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 6,
--+   "execution_count": 7,
--    "metadata": {},
--    "outputs": [],
--    "source": [
--@@ -226,7 +235,7 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 7,
--+   "execution_count": 8,
--    "metadata": {},
--    "outputs": [],
--    "source": [
--@@ -244,7 +253,7 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 8,
--+   "execution_count": 9,
--    "metadata": {},
--    "outputs": [
--     {
--@@ -584,7 +593,7 @@
--        ")"
--       ]
--      },
---     "execution_count": 8,
--+     "execution_count": 9,
--      "metadata": {},
--      "output_type": "execute_result"
--     }
--@@ -597,16 +606,16 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 9,
--+   "execution_count": 10,
--    "metadata": {},
--    "outputs": [
--     {
--      "data": {
--       "text/plain": [
---       "[<wandb.wandb_torch.TorchGraph at 0x7f4ae970e6d8>]"
--+       "[<wandb.wandb_torch.TorchGraph at 0x7fba6796b390>]"
--       ]
--      },
---     "execution_count": 9,
--+     "execution_count": 10,
--      "metadata": {},
--      "output_type": "execute_result"
--     }
--@@ -624,7 +633,7 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 10,
--+   "execution_count": 11,
--    "metadata": {},
--    "outputs": [],
--    "source": [
--@@ -651,57 +660,20 @@
--   },
--   {
--    "cell_type": "code",
---   "execution_count": 11,
---   "metadata": {},
---   "outputs": [],
---   "source": [
---    "class ImageDataset(Dataset):\n",
---    "        \n",
---    "    def __init__(self, transform=None, limit=None, mode = \"train\", train_dir=\"train\", val_dir=\"val\", weights = [1, 1, 1, 1]):\n",
---    "        \n",
---    "        self.transform = transform\n",
---    "        self.limit = limit\n",
---    "        self.mode = mode\n",
---    "        self.train_dir = train_dir\n",
---    "        self.val_dir = val_dir\n",
---    "        self.train_files=[]\n",
---    "        for i in range(4):\n",
---    "            self.train_files += glob.glob(self.train_dir+\"/*\"+str(i)+\"/*\") * weights[i]\n",
---    "        self.val_files=glob.glob(self.val_dir+\"/*/*\")\n",
---    "        self.train_sample_count = len(self.train_files)\n",
---    "        self.val_sample_count = len(self.val_files)\n",
---    "        \n",
---    "    def __len__(self):\n",
---    "        if self.mode == \"train\":\n",
---    "            return (self.train_sample_count)\n",
---    "        else:\n",
---    "            return(self.val_sample_count)\n",
---    "\n",
---    "    def __getitem__(self, idx): \n",
---    "        if self.mode == \"train\":\n",
---    "            return (self.get_img(self.train_files[idx]), int(self.train_files[idx].split('/')[-2].split(\"_\")[-1]))\n",
---    "        if self.mode == \"val\":\n",
---    "            return (self.get_img(self.val_files[idx]), int(self.val_files[idx].split('/')[-2].split(\"_\")[-1]))\n",
---    "        \n",
---    "    def get_img(self, img_dir):\n",
---    "        img = np.load(img_dir)\n",
---    "        #img = img.transpose((1, 2, 0))\n",
---    "        img = img[:, :, [6, 5, 4]] ## Select for channels to run\n",
---    "        img = self.transform(img)\n",
---    "        img = torch.from_numpy(np.moveaxis(img, -1, 0)).float()  \n",
---    "        return img"
---   ]
---  },
---  {
---   "cell_type": "code",
---   "execution_count": 12,
--+   "execution_count": 14,
--    "metadata": {},
--    "outputs": [
--     {
---     "name": "stdout",
---     "output_type": "stream",
---     "text": [
---      "{'train': 799, 'val': 331}\n"
--+     "ename": "ValueError",
--+     "evalue": "num_samples should be a positive integer value, but got num_samples=0",
--+     "output_type": "error",
--+     "traceback": [
--+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
--+      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
--+      "\u001b[0;32m<ipython-input-14-06a69a7d0d7b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      5\u001b[0m                 \u001b[0mshuffle\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m                 \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m256\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m                 \u001b[0mnum_workers\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m             )\n\u001b[1;32m      9\u001b[0m valid_loader = DataLoader(\n",
--+      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/torch/utils/data/dataloader.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, dataset, batch_size, shuffle, sampler, batch_sampler, num_workers, collate_fn, pin_memory, drop_last, timeout, worker_init_fn, multiprocessing_context)\u001b[0m\n\u001b[1;32m    211\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# map-style\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    212\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mshuffle\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 213\u001b[0;31m                     \u001b[0msampler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mRandomSampler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    214\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    215\u001b[0m                     \u001b[0msampler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSequentialSampler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
--+      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/torch/utils/data/sampler.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data_source, replacement, num_samples)\u001b[0m\n\u001b[1;32m     92\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnum_samples\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnum_samples\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     93\u001b[0m             raise ValueError(\"num_samples should be a positive integer \"\n\u001b[0;32m---> 94\u001b[0;31m                              \"value, but got num_samples={}\".format(self.num_samples))\n\u001b[0m\u001b[1;32m     95\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     96\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
--+      "\u001b[0;31mValueError\u001b[0m: num_samples should be a positive integer value, but got num_samples=0"
-+@@ -842,8 +842,75 @@
-+      "output_type": "stream",
-+      "text": [
-+       "\n",
-+-      "Calculating accuracies\n"
-++      "Calculating accuracies\n",
-++      "Train accuracy:  0.258383926343752 ;    Val accuracy:  0.25011820330969264 \n",
-++      "\n",
-++      "Starting epoch 3 / 5\n"
-++     ]
-++    },
-++    {
-++     "data": {
-++      "application/vnd.jupyter.widget-view+json": {
-++       "model_id": "ee8db6d9d3e645098855574b993436d3",
-++       "version_major": 2,
-++       "version_minor": 0
-++      },
-++      "text/plain": [
-++       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-++      ]
-++     },
-++     "metadata": {},
-++     "output_type": "display_data"
-++    },
-++    {
-++     "name": "stdout",
-++     "output_type": "stream",
-++     "text": [
-++      "\n",
-++      "Calculating accuracies\n",
-++      "Train accuracy:  0.2603407873430231 ;    Val accuracy:  0.24964539007092199 \n",
-++      "\n",
-++      "Starting epoch 4 / 5\n"
-       ]
-++    },
-++    {
-++     "data": {
-++      "application/vnd.jupyter.widget-view+json": {
-++       "model_id": "5ba7659d72cc455e9e844b732455ff47",
-++       "version_major": 2,
-++       "version_minor": 0
-++      },
-++      "text/plain": [
-++       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-++      ]
-++     },
-++     "metadata": {},
-++     "output_type": "display_data"
-++    },
-++    {
-++     "name": "stdout",
-++     "output_type": "stream",
-++     "text": [
-++      "\n",
-++      "Calculating accuracies\n",
-++      "Train accuracy:  0.2627868635921119 ;    Val accuracy:  0.26222222222222225 \n",
-++      "\n",
-++      "Starting epoch 5 / 5\n"
-++     ]
-++    },
-++    {
-++     "data": {
-++      "application/vnd.jupyter.widget-view+json": {
-++       "model_id": "f1e1f2aec05f43f6b6fbcbb5851eaa0f",
-++       "version_major": 2,
-++       "version_minor": 0
-++      },
-++      "text/plain": [
-++       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-++      ]
-++     },
-++     "metadata": {},
-++     "output_type": "display_data"
-      }
-     ],
-+    "source": [
-+diff --git a/wandb/run-20200120_081855-gzutdaae/diff.patch b/wandb/run-20200120_081855-gzutdaae/diff.patch
-+index c6015c1..e69de29 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/diff.patch
-++++ b/wandb/run-20200120_081855-gzutdaae/diff.patch
-+@@ -1,201 +0,0 @@
-+-diff --git a/Efficientnet-b3-765.ipynb b/Efficientnet-b3-765.ipynb
-+-index 691c745..9cf4f55 100644
-+---- a/Efficientnet-b3-765.ipynb
-+-+++ b/Efficientnet-b3-765.ipynb
-+-@@ -47,7 +47,7 @@
-+-        "\n",
-+-        "                Logging results to <a href=\"https://wandb.com\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-+-        "                Project page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch</a><br/>\n",
-+--       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm</a><br/>\n",
-+-+       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae</a><br/>\n",
-+-        "            "
-+-       ],
-+-       "text/plain": [
-+-@@ -67,7 +67,7 @@
-+-     {
-+-      "data": {
-+-       "text/plain": [
-+--       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm"
-+-+       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae"
-+-       ]
-+-      },
-+-      "execution_count": 2,
-+-@@ -77,7 +77,16 @@
-+-    ],
-+-    "source": [
-+-     "import wandb\n",
-+--    "wandb.init(project=\"droughtwatch\")"
-+-+    "wandb.init(project='droughtwatch', name='efficentnet-b3-765')"
-+-+   ]
-+-+  },
-+-+  {
-+-+   "cell_type": "code",
-+-+   "execution_count": 3,
-+-+   "metadata": {},
-+-+   "outputs": [],
-+-+   "source": [
-+-+    "os.environ['WANDB_NOTEBOOK_NAME'] = \"efficentnet-b3-765\""
-+-    ]
-+-   },
-+-   {
-+-@@ -89,7 +98,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 3,
-+-+   "execution_count": 4,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -112,7 +121,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 4,
-+-+   "execution_count": 5,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -147,7 +156,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 5,
-+-+   "execution_count": 6,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -188,7 +197,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 6,
-+-+   "execution_count": 7,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -226,7 +235,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 7,
-+-+   "execution_count": 8,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -244,7 +253,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 8,
-+-+   "execution_count": 9,
-+-    "metadata": {},
-+-    "outputs": [
-+-     {
-+-@@ -584,7 +593,7 @@
-+-        ")"
-+-       ]
-+-      },
-+--     "execution_count": 8,
-+-+     "execution_count": 9,
-+-      "metadata": {},
-+-      "output_type": "execute_result"
-+-     }
-+-@@ -597,16 +606,16 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 9,
-+-+   "execution_count": 10,
-+-    "metadata": {},
-+-    "outputs": [
-+-     {
-+-      "data": {
-+-       "text/plain": [
-+--       "[<wandb.wandb_torch.TorchGraph at 0x7f4ae970e6d8>]"
-+-+       "[<wandb.wandb_torch.TorchGraph at 0x7fba6796b390>]"
-+-       ]
-+-      },
-+--     "execution_count": 9,
-+-+     "execution_count": 10,
-+-      "metadata": {},
-+-      "output_type": "execute_result"
-+-     }
-+-@@ -624,7 +633,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 10,
-+-+   "execution_count": 11,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -651,57 +660,20 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 11,
-+--   "metadata": {},
-+--   "outputs": [],
-+--   "source": [
-+--    "class ImageDataset(Dataset):\n",
-+--    "        \n",
-+--    "    def __init__(self, transform=None, limit=None, mode = \"train\", train_dir=\"train\", val_dir=\"val\", weights = [1, 1, 1, 1]):\n",
-+--    "        \n",
-+--    "        self.transform = transform\n",
-+--    "        self.limit = limit\n",
-+--    "        self.mode = mode\n",
-+--    "        self.train_dir = train_dir\n",
-+--    "        self.val_dir = val_dir\n",
-+--    "        self.train_files=[]\n",
-+--    "        for i in range(4):\n",
-+--    "            self.train_files += glob.glob(self.train_dir+\"/*\"+str(i)+\"/*\") * weights[i]\n",
-+--    "        self.val_files=glob.glob(self.val_dir+\"/*/*\")\n",
-+--    "        self.train_sample_count = len(self.train_files)\n",
-+--    "        self.val_sample_count = len(self.val_files)\n",
-+--    "        \n",
-+--    "    def __len__(self):\n",
-+--    "        if self.mode == \"train\":\n",
-+--    "            return (self.train_sample_count)\n",
-+--    "        else:\n",
-+--    "            return(self.val_sample_count)\n",
-+--    "\n",
-+--    "    def __getitem__(self, idx): \n",
-+--    "        if self.mode == \"train\":\n",
-+--    "            return (self.get_img(self.train_files[idx]), int(self.train_files[idx].split('/')[-2].split(\"_\")[-1]))\n",
-+--    "        if self.mode == \"val\":\n",
-+--    "            return (self.get_img(self.val_files[idx]), int(self.val_files[idx].split('/')[-2].split(\"_\")[-1]))\n",
-+--    "        \n",
-+--    "    def get_img(self, img_dir):\n",
-+--    "        img = np.load(img_dir)\n",
-+--    "        #img = img.transpose((1, 2, 0))\n",
-+--    "        img = img[:, :, [6, 5, 4]] ## Select for channels to run\n",
-+--    "        img = self.transform(img)\n",
-+--    "        img = torch.from_numpy(np.moveaxis(img, -1, 0)).float()  \n",
-+--    "        return img"
-+--   ]
-+--  },
-+--  {
-+--   "cell_type": "code",
-+--   "execution_count": 12,
-+-+   "execution_count": 14,
-+-    "metadata": {},
-+-    "outputs": [
-+-     {
-+--     "name": "stdout",
-+--     "output_type": "stream",
-+--     "text": [
-+--      "{'train': 799, 'val': 331}\n"
-+-+     "ename": "ValueError",
-+-+     "evalue": "num_samples should be a positive integer value, but got num_samples=0",
-+-+     "output_type": "error",
-+-+     "traceback": [
-+-+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
-+-+      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
-+-+      "\u001b[0;32m<ipython-input-14-06a69a7d0d7b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      5\u001b[0m                 \u001b[0mshuffle\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m                 \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m256\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m                 \u001b[0mnum_workers\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m             )\n\u001b[1;32m      9\u001b[0m valid_loader = DataLoader(\n",
-+-+      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/torch/utils/data/dataloader.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, dataset, batch_size, shuffle, sampler, batch_sampler, num_workers, collate_fn, pin_memory, drop_last, timeout, worker_init_fn, multiprocessing_context)\u001b[0m\n\u001b[1;32m    211\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# map-style\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    212\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mshuffle\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 213\u001b[0;31m                     \u001b[0msampler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mRandomSampler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    214\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    215\u001b[0m                     \u001b[0msampler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSequentialSampler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
-+-+      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/torch/utils/data/sampler.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data_source, replacement, num_samples)\u001b[0m\n\u001b[1;32m     92\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnum_samples\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnum_samples\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     93\u001b[0m             raise ValueError(\"num_samples should be a positive integer \"\n\u001b[0;32m---> 94\u001b[0;31m                              \"value, but got num_samples={}\".format(self.num_samples))\n\u001b[0m\u001b[1;32m     95\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     96\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
-+-+      "\u001b[0;31mValueError\u001b[0m: num_samples should be a positive integer value, but got num_samples=0"
-+-      ]
-+-     }
-+-    ],
-+diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-+index bebeecd..fbd17e8 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-++++ b/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-+@@ -1,26 +1,10 @@
-+-{"system.network.sent":15797,"system.gpu.0.powerPercent":41.9,"system.network.recv":65303,"system.disk":22.4,"system.gpu.0.powerWatts":29.33,"_wandb":true,"system.gpu.0.temp":61,"system.gpu.0.memory":0,"system.gpu.0.gpu":0,"_runtime":1,"system.proc.memory.rssMB":262.66,"system.proc.memory.availableMB":14300.84,"system.cpu":13.75,"system.proc.cpu.threads":17,"system.memory":4.9,"system.proc.memory.percent":1.75,"system.gpu.0.memoryAllocated":0,"_timestamp":1579508336}
-+-{"system.gpu.0.gpu": 10.2, "system.gpu.0.memory": 7.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 68.0, "system.gpu.0.powerWatts": 37.18, "system.gpu.0.powerPercent": 53.11, "system.cpu": 6.9, "system.memory": 22.68, "system.disk": 22.4, "system.proc.memory.availableMB": 11632.24, "system.proc.memory.rssMB": 2960.92, "system.proc.memory.percent": 19.68, "system.proc.cpu.threads": 27.87, "system.network.sent": 244468, "system.network.recv": 251940, "_wandb": true, "_timestamp": 1579508635, "_runtime": 42}
-+-{"system.gpu.0.gpu": 5.47, "system.gpu.0.memory": 4.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 69.93, "system.gpu.0.powerWatts": 38.27, "system.gpu.0.powerPercent": 54.67, "system.cpu": 6.63, "system.memory": 22.78, "system.disk": 22.4, "system.proc.memory.availableMB": 11615.58, "system.proc.memory.rssMB": 2961.46, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 339293, "system.network.recv": 337753, "_wandb": true, "_timestamp": 1579508665, "_runtime": 73}
-+-{"system.gpu.0.gpu": 8.87, "system.gpu.0.memory": 6.47, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 72.07, "system.gpu.0.powerWatts": 40.58, "system.gpu.0.powerPercent": 57.97, "system.cpu": 7.19, "system.memory": 22.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11605.85, "system.proc.memory.rssMB": 2961.46, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 431682, "system.network.recv": 429114, "_wandb": true, "_timestamp": 1579508695, "_runtime": 103}
-+-{"system.gpu.0.gpu": 8.67, "system.gpu.0.memory": 5.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 73.27, "system.gpu.0.powerWatts": 36.56, "system.gpu.0.powerPercent": 52.23, "system.cpu": 7.94, "system.memory": 22.88, "system.disk": 22.4, "system.proc.memory.availableMB": 11602.32, "system.proc.memory.rssMB": 2961.81, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 534529, "system.network.recv": 530758, "_wandb": true, "_timestamp": 1579508725, "_runtime": 133}
-+-{"system.gpu.0.gpu": 8.87, "system.gpu.0.memory": 5.8, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 74.93, "system.gpu.0.powerWatts": 43.21, "system.gpu.0.powerPercent": 61.73, "system.cpu": 8.45, "system.memory": 22.98, "system.disk": 22.4, "system.proc.memory.availableMB": 11587.51, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 635626, "system.network.recv": 634655, "_wandb": true, "_timestamp": 1579508756, "_runtime": 163}
-+-{"system.gpu.0.gpu": 9.87, "system.gpu.0.memory": 7.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 42.67, "system.gpu.0.powerPercent": 60.96, "system.cpu": 8.79, "system.memory": 23.02, "system.disk": 22.4, "system.proc.memory.availableMB": 11581.47, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 748987, "system.network.recv": 747904, "_wandb": true, "_timestamp": 1579508786, "_runtime": 193}
-+-{"system.gpu.0.gpu": 11.87, "system.gpu.0.memory": 8.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.67, "system.gpu.0.powerWatts": 44.82, "system.gpu.0.powerPercent": 64.03, "system.cpu": 9.73, "system.memory": 23.07, "system.disk": 22.4, "system.proc.memory.availableMB": 11575.17, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 873256, "system.network.recv": 874007, "_wandb": true, "_timestamp": 1579508816, "_runtime": 223}
-+-{"system.gpu.0.gpu": 11.0, "system.gpu.0.memory": 8.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.27, "system.gpu.0.powerWatts": 38.19, "system.gpu.0.powerPercent": 54.55, "system.cpu": 10.57, "system.memory": 23.05, "system.disk": 22.4, "system.proc.memory.availableMB": 11572.48, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1023164, "system.network.recv": 1026940, "_wandb": true, "_timestamp": 1579508846, "_runtime": 253}
-+-{"system.gpu.0.gpu": 14.2, "system.gpu.0.memory": 10.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.27, "system.gpu.0.powerWatts": 42.89, "system.gpu.0.powerPercent": 61.28, "system.cpu": 11.98, "system.memory": 23.15, "system.disk": 22.4, "system.proc.memory.availableMB": 11561.87, "system.proc.memory.rssMB": 2962.21, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1178866, "system.network.recv": 1181511, "_wandb": true, "_timestamp": 1579508876, "_runtime": 283}
-+-{"system.gpu.0.gpu": 13.0, "system.gpu.0.memory": 10.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 78.0, "system.gpu.0.powerWatts": 50.01, "system.gpu.0.powerPercent": 71.45, "system.cpu": 13.59, "system.memory": 23.22, "system.disk": 22.4, "system.proc.memory.availableMB": 11553.44, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1331123, "system.network.recv": 1336366, "_wandb": true, "_timestamp": 1579508906, "_runtime": 314}
-+-{"system.gpu.0.gpu": 25.13, "system.gpu.0.memory": 21.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.33, "system.gpu.0.powerWatts": 45.73, "system.gpu.0.powerPercent": 65.33, "system.cpu": 15.11, "system.memory": 23.2, "system.disk": 22.4, "system.proc.memory.availableMB": 11550.57, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1518597, "system.network.recv": 1523627, "_wandb": true, "_timestamp": 1579508936, "_runtime": 344}
-+-{"system.gpu.0.gpu": 19.67, "system.gpu.0.memory": 16.87, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.53, "system.gpu.0.powerWatts": 49.57, "system.gpu.0.powerPercent": 70.82, "system.cpu": 17.23, "system.memory": 23.21, "system.disk": 22.4, "system.proc.memory.availableMB": 11547.93, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1702121, "system.network.recv": 1710364, "_wandb": true, "_timestamp": 1579508966, "_runtime": 374}
-+-{"system.gpu.0.gpu": 18.4, "system.gpu.0.memory": 15.73, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.2, "system.gpu.0.powerWatts": 51.24, "system.gpu.0.powerPercent": 73.2, "system.cpu": 18.21, "system.memory": 23.35, "system.disk": 22.4, "system.proc.memory.availableMB": 11531.67, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1856007, "system.network.recv": 1863572, "_wandb": true, "_timestamp": 1579508997, "_runtime": 404}
-+-{"system.gpu.0.gpu": 18.8, "system.gpu.0.memory": 16.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.47, "system.gpu.0.powerWatts": 49.62, "system.gpu.0.powerPercent": 70.89, "system.cpu": 19.99, "system.memory": 23.32, "system.disk": 22.4, "system.proc.memory.availableMB": 11535.11, "system.proc.memory.rssMB": 2962.48, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2016161, "system.network.recv": 2023461, "_wandb": true, "_timestamp": 1579509027, "_runtime": 434}
-+-{"system.gpu.0.gpu": 21.0, "system.gpu.0.memory": 18.07, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.13, "system.gpu.0.powerWatts": 50.49, "system.gpu.0.powerPercent": 72.13, "system.cpu": 20.69, "system.memory": 23.18, "system.disk": 22.4, "system.proc.memory.availableMB": 11552.24, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2245090, "system.network.recv": 2255638, "_wandb": true, "_timestamp": 1579509057, "_runtime": 464}
-+-{"system.gpu.0.gpu": 17.07, "system.gpu.0.memory": 14.13, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.13, "system.gpu.0.powerWatts": 51.83, "system.gpu.0.powerPercent": 74.04, "system.cpu": 21.11, "system.memory": 23.25, "system.disk": 22.4, "system.proc.memory.availableMB": 11542.37, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2746309, "system.network.recv": 2487509, "_wandb": true, "_timestamp": 1579509087, "_runtime": 494}
-+-{"system.gpu.0.gpu": 66.47, "system.gpu.0.memory": 44.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 78.4, "system.gpu.0.powerWatts": 64.54, "system.gpu.0.powerPercent": 92.21, "system.cpu": 78.97, "system.memory": 23.2, "system.disk": 22.4, "system.proc.memory.availableMB": 11552.42, "system.proc.memory.rssMB": 2957.19, "system.proc.memory.percent": 19.66, "system.proc.cpu.threads": 27.2, "system.network.sent": 3696180, "system.network.recv": 2568386, "_wandb": true, "_timestamp": 1579509117, "_runtime": 525}
-+-{"system.gpu.0.gpu": 82.13, "system.gpu.0.memory": 53.73, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.33, "system.gpu.0.powerWatts": 67.07, "system.gpu.0.powerPercent": 95.82, "system.cpu": 99.89, "system.memory": 23.25, "system.disk": 22.4, "system.proc.memory.availableMB": 11541.6, "system.proc.memory.rssMB": 2956.42, "system.proc.memory.percent": 19.65, "system.proc.cpu.threads": 27.0, "system.network.sent": 3700982, "system.network.recv": 2571448, "_wandb": true, "_timestamp": 1579509147, "_runtime": 555}
-+-{"system.gpu.0.gpu": 78.07, "system.gpu.0.memory": 50.87, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.0, "system.gpu.0.powerWatts": 62.66, "system.gpu.0.powerPercent": 89.52, "system.cpu": 93.01, "system.memory": 23.62, "system.disk": 22.4, "system.proc.memory.availableMB": 11490.1, "system.proc.memory.rssMB": 2955.65, "system.proc.memory.percent": 19.65, "system.proc.cpu.threads": 27.0, "system.network.sent": 3709404, "system.network.recv": 2574045, "_wandb": true, "_timestamp": 1579509178, "_runtime": 585}
-+-{"system.gpu.0.gpu": 15.07, "system.gpu.0.memory": 3.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 71.73, "system.gpu.0.powerWatts": 34.48, "system.gpu.0.powerPercent": 49.26, "system.cpu": 25.27, "system.memory": 22.4, "system.disk": 22.4, "system.proc.memory.availableMB": 11676.86, "system.proc.memory.rssMB": 2950.69, "system.proc.memory.percent": 19.61, "system.proc.cpu.threads": 27.0, "system.network.sent": 3721790, "system.network.recv": 2631378, "_wandb": true, "_timestamp": 1579509208, "_runtime": 615}
-+-{"system.gpu.0.gpu": 45.27, "system.gpu.0.memory": 29.07, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 74.07, "system.gpu.0.powerWatts": 48.68, "system.gpu.0.powerPercent": 69.55, "system.cpu": 61.3, "system.memory": 22.83, "system.disk": 22.4, "system.proc.memory.availableMB": 11611.68, "system.proc.memory.rssMB": 2958.09, "system.proc.memory.percent": 19.66, "system.proc.cpu.threads": 27.47, "system.network.sent": 4312731, "system.network.recv": 3024984, "_wandb": true, "_timestamp": 1579509238, "_runtime": 645}
-+-{"system.gpu.0.gpu": 85.27, "system.gpu.0.memory": 64.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 80.4, "system.gpu.0.powerWatts": 69.5, "system.gpu.0.powerPercent": 99.29, "system.cpu": 98.87, "system.memory": 23.4, "system.disk": 22.4, "system.proc.memory.availableMB": 11523.09, "system.proc.memory.rssMB": 2965.59, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 28.0, "system.network.sent": 5355584, "system.network.recv": 3684826, "_wandb": true, "_timestamp": 1579509268, "_runtime": 675}
-+-{"system.gpu.0.gpu": 82.67, "system.gpu.0.memory": 63.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.13, "system.gpu.0.powerWatts": 68.41, "system.gpu.0.powerPercent": 97.73, "system.cpu": 97.43, "system.memory": 23.36, "system.disk": 22.4, "system.proc.memory.availableMB": 11527.65, "system.proc.memory.rssMB": 2966.13, "system.proc.memory.percent": 19.72, "system.proc.cpu.threads": 27.93, "system.network.sent": 6262772, "system.network.recv": 4284351, "_wandb": true, "_timestamp": 1579509298, "_runtime": 706}
-+-{"system.gpu.0.gpu": 84.6, "system.gpu.0.memory": 55.33, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.4, "system.gpu.0.powerWatts": 66.84, "system.gpu.0.powerPercent": 95.48, "system.cpu": 99.88, "system.memory": 23.27, "system.disk": 22.4, "system.proc.memory.availableMB": 11542.26, "system.proc.memory.rssMB": 2958.56, "system.proc.memory.percent": 19.67, "system.proc.cpu.threads": 27.0, "system.network.sent": 6275456, "system.network.recv": 4336424, "_wandb": true, "_timestamp": 1579509329, "_runtime": 736}
-+-{"system.gpu.0.gpu": 84.4, "system.gpu.0.memory": 55.13, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.73, "system.gpu.0.powerWatts": 73.68, "system.gpu.0.powerPercent": 105.26, "system.cpu": 99.89, "system.memory": 23.29, "system.disk": 22.4, "system.proc.memory.availableMB": 11538.26, "system.proc.memory.rssMB": 2958.56, "system.proc.memory.percent": 19.67, "system.proc.cpu.threads": 27.0, "system.network.sent": 6279094, "system.network.recv": 4342260, "_wandb": true, "_timestamp": 1579509359, "_runtime": 766}
-++{"system.network.sent":10977141,"system.gpu.0.powerPercent":96.79,"system.network.recv":7409894,"system.disk":22.4,"system.gpu.0.powerWatts":67.75,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":65.33,"system.gpu.0.gpu":85.6,"_runtime":1008,"system.proc.memory.rssMB":2966.29,"system.proc.memory.availableMB":11506.94,"system.cpu":98.25,"system.proc.cpu.threads":28,"system.memory":23.5,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509601}
-++{"system.network.sent":11502749,"system.gpu.0.powerPercent":97.46,"system.network.recv":7764756,"system.disk":22.4,"system.gpu.0.powerWatts":68.23,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":60.73,"system.gpu.0.gpu":85.87,"_runtime":1039,"system.proc.memory.rssMB":2962.16,"system.proc.memory.availableMB":11528.19,"system.cpu":97.55,"system.proc.cpu.threads":27.47,"system.memory":23.37,"system.proc.memory.percent":19.69,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509631}
-++{"system.network.sent":11508976,"system.gpu.0.powerPercent":102.06,"system.network.recv":7771440,"system.disk":22.4,"system.gpu.0.powerWatts":71.44,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.53,"system.gpu.0.gpu":85.6,"_runtime":1069,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11533.16,"system.cpu":99.91,"system.proc.cpu.threads":27,"system.memory":23.34,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509662}
-++{"system.network.sent":11522899,"system.gpu.0.powerPercent":93.89,"system.network.recv":7774171,"system.disk":22.4,"system.gpu.0.powerWatts":65.73,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.8,"_runtime":1099,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11449.37,"system.cpu":99.9,"system.proc.cpu.threads":27,"system.memory":23.89,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509692}
-++{"system.network.sent":12355982,"system.gpu.0.powerPercent":99.47,"system.network.recv":8325343,"system.disk":22.4,"system.gpu.0.powerWatts":69.63,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":53.6,"system.gpu.0.gpu":80.47,"_runtime":1129,"system.proc.memory.rssMB":2962.93,"system.proc.memory.availableMB":11549.31,"system.cpu":91.64,"system.proc.cpu.threads":27.73,"system.memory":23.23,"system.proc.memory.percent":19.7,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509722}
-++{"system.network.sent":13392411,"system.gpu.0.powerPercent":96.5,"system.network.recv":9022410,"system.disk":22.4,"system.gpu.0.powerWatts":67.55,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":66.2,"system.gpu.0.gpu":86.73,"_runtime":1160,"system.proc.memory.rssMB":2966.31,"system.proc.memory.availableMB":11507.02,"system.cpu":96.58,"system.proc.cpu.threads":28,"system.memory":23.51,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509752}
-++{"system.network.sent":14052060,"system.gpu.0.powerPercent":93.62,"system.network.recv":9455229,"system.disk":22.4,"system.gpu.0.powerWatts":65.53,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":62.4,"system.gpu.0.gpu":86.33,"_runtime":1190,"system.proc.memory.rssMB":2964.4,"system.proc.memory.availableMB":11520.81,"system.cpu":96.15,"system.proc.cpu.threads":27.67,"system.memory":23.41,"system.proc.memory.percent":19.71,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509783}
-++{"system.network.sent":14116134,"system.gpu.0.powerPercent":97.24,"system.network.recv":9471018,"system.disk":22.4,"system.gpu.0.powerWatts":68.07,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.13,"_runtime":1220,"system.proc.memory.rssMB":2959.24,"system.proc.memory.availableMB":11527.75,"system.cpu":99.85,"system.proc.cpu.threads":27,"system.memory":23.39,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509813}
-++{"system.network.sent":14129520,"system.gpu.0.powerPercent":102.88,"system.network.recv":9474423,"system.disk":22.4,"system.gpu.0.powerWatts":72.02,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":56.33,"system.gpu.0.gpu":86.27,"_runtime":1250,"system.proc.memory.rssMB":2958.7,"system.proc.memory.availableMB":11472.54,"system.cpu":99.87,"system.proc.cpu.threads":27,"system.memory":23.75,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509843}
-++{"system.network.sent":14134644,"system.gpu.0.powerPercent":87.89,"system.network.recv":9477692,"system.disk":22.4,"system.gpu.0.powerWatts":61.52,"_wandb":true,"system.gpu.0.temp":76.75,"system.gpu.0.memory":39.12,"system.gpu.0.gpu":73.5,"_runtime":1267,"system.proc.memory.rssMB":2956.05,"system.proc.memory.availableMB":11567.16,"system.cpu":86.28,"system.proc.cpu.threads":26.38,"system.memory":23.1,"system.proc.memory.percent":19.65,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509859}
-+diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-+index 6941a0a..e946e56 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-++++ b/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-+@@ -1 +1,5 @@
-+-{"gradients/classifier.bias": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.0654682070016861, -0.06339701265096664, -0.06132581830024719, -0.05925462394952774, -0.05718342587351799, -0.05511223152279854, -0.053041037172079086, -0.050969842821359634, -0.048898644745349884, -0.04682745039463043, -0.04475625604391098, -0.04268506169319153, -0.040613867342472076, -0.038542672991752625, -0.03647147864103317, -0.03440028056502342, -0.03232908621430397, -0.03025789186358452, -0.028186697512865067, -0.026115499436855316, -0.024044305086135864, -0.021973110735416412, -0.01990191638469696, -0.01783072203397751, -0.015759527683258057, -0.013688329607248306, -0.011617135256528854, -0.009545940905809402, -0.0074747465550899506, -0.005403552204370499, -0.0033323541283607483, -0.0012611597776412964, 0.0008100345730781555, 0.0028812289237976074, 0.004952423274517059, 0.007023617625236511, 0.009094811975955963, 0.011166006326675415, 0.013237208127975464, 0.015308402478694916, 0.017379596829414368, 0.01945079118013382, 0.02152198553085327, 0.023593179881572723, 0.025664374232292175, 0.027735568583011627, 0.02980676293373108, 0.03187795728445053, 0.03394915163516998, 0.03602035343647003, 0.038091547787189484, 0.040162742137908936, 0.04223393648862839, 0.04430513083934784, 0.04637632519006729, 0.04844751954078674, 0.050518713891506195, 0.05258990824222565, 0.0546611025929451, 0.05673230439424515, 0.0588034987449646, 0.060874685645103455, 0.0629458874464035, 0.06501707434654236, 0.06708827614784241]}, "gradients/classifier.weight": {"_type": "histogram", "values": [1.0, 1.0, 1.0, 0.0, 3.0, 1.0, 5.0, 2.0, 4.0, 10.0, 9.0, 17.0, 15.0, 21.0, 30.0, 49.0, 53.0, 61.0, 86.0, 96.0, 118.0, 155.0, 170.0, 210.0, 214.0, 249.0, 229.0, 254.0, 272.0, 299.0, 314.0, 295.0, 344.0, 291.0, 277.0, 262.0, 259.0, 239.0, 186.0, 184.0, 169.0, 136.0, 111.0, 97.0, 83.0, 60.0, 47.0, 38.0, 19.0, 23.0, 20.0, 13.0, 17.0, 7.0, 8.0, 4.0, 1.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.09012244641780853, -0.08724749088287354, -0.08437253534793854, -0.08149757981300354, -0.07862262427806854, -0.07574766874313354, -0.07287271320819855, -0.06999775767326355, -0.06712280213832855, -0.06424784660339355, -0.06137289106845856, -0.05849793553352356, -0.05562297999858856, -0.052748024463653564, -0.04987306892871857, -0.04699811339378357, -0.04412315785884857, -0.041248202323913574, -0.03837324678897858, -0.03549829125404358, -0.03262333571910858, -0.029748380184173584, -0.026873424649238586, -0.02399846911430359, -0.02112351357936859, -0.018248558044433594, -0.015373602509498596, -0.012498646974563599, -0.009623691439628601, -0.0067487359046936035, -0.003873780369758606, -0.0009988248348236084, 0.0018761307001113892, 0.004751086235046387, 0.007626041769981384, 0.010500997304916382, 0.01337595283985138, 0.016250908374786377, 0.019125863909721375, 0.022000819444656372, 0.02487577497959137, 0.027750730514526367, 0.030625686049461365, 0.03350064158439636, 0.03637559711933136, 0.03925055265426636, 0.042125508189201355, 0.04500046372413635, 0.04787541925907135, 0.05075037479400635, 0.053625330328941345, 0.05650028586387634, 0.05937524139881134, 0.06225019693374634, 0.06512515246868134, 0.06800010800361633, 0.07087506353855133, 0.07375001907348633, 0.07662497460842133, 0.07949993014335632, 0.08237488567829132, 0.08524984121322632, 0.08812479674816132, 0.09099975228309631, 0.09387470781803131]}, "val_acc": 0.23687943262411348, "train_acc": 0.25812953441384673, "_runtime": 814.0969541072845, "_timestamp": 1579509224.6157851, "_step": 0}
-++{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.0654682070016861,-0.06339701265096664,-0.06132581830024719,-0.05925462394952774,-0.05718342587351799,-0.05511223152279854,-0.053041037172079086,-0.050969842821359634,-0.048898644745349884,-0.04682745039463043,-0.04475625604391098,-0.04268506169319153,-0.040613867342472076,-0.038542672991752625,-0.03647147864103317,-0.03440028056502342,-0.03232908621430397,-0.03025789186358452,-0.028186697512865067,-0.026115499436855316,-0.024044305086135864,-0.021973110735416412,-0.01990191638469696,-0.01783072203397751,-0.015759527683258057,-0.013688329607248306,-0.011617135256528854,-0.009545940905809402,-0.0074747465550899506,-0.005403552204370499,-0.0033323541283607483,-0.0012611597776412964,0.0008100345730781555,0.0028812289237976074,0.004952423274517059,0.007023617625236511,0.009094811975955963,0.011166006326675415,0.013237208127975464,0.015308402478694916,0.017379596829414368,0.01945079118013382,0.02152198553085327,0.023593179881572723,0.025664374232292175,0.027735568583011627,0.02980676293373108,0.03187795728445053,0.03394915163516998,0.03602035343647003,0.038091547787189484,0.040162742137908936,0.04223393648862839,0.04430513083934784,0.04637632519006729,0.04844751954078674,0.050518713891506195,0.05258990824222565,0.0546611025929451,0.05673230439424515,0.0588034987449646,0.060874685645103455,0.0629458874464035,0.06501707434654236,0.06708827614784241]},"gradients/classifier.weight":{"bins":[-0.09012244641780853,-0.08724749088287354,-0.08437253534793854,-0.08149757981300354,-0.07862262427806854,-0.07574766874313354,-0.07287271320819855,-0.06999775767326355,-0.06712280213832855,-0.06424784660339355,-0.06137289106845856,-0.05849793553352356,-0.05562297999858856,-0.052748024463653564,-0.04987306892871857,-0.04699811339378357,-0.04412315785884857,-0.041248202323913574,-0.03837324678897858,-0.03549829125404358,-0.03262333571910858,-0.029748380184173584,-0.026873424649238586,-0.02399846911430359,-0.02112351357936859,-0.018248558044433594,-0.015373602509498596,-0.012498646974563599,-0.009623691439628601,-0.0067487359046936035,-0.003873780369758606,-0.0009988248348236084,0.0018761307001113892,0.004751086235046387,0.007626041769981384,0.010500997304916382,0.01337595283985138,0.016250908374786377,0.019125863909721375,0.022000819444656372,0.02487577497959137,0.027750730514526367,0.030625686049461365,0.03350064158439636,0.03637559711933136,0.03925055265426636,0.042125508189201355,0.04500046372413635,0.04787541925907135,0.05075037479400635,0.053625330328941345,0.05650028586387634,0.05937524139881134,0.06225019693374634,0.06512515246868134,0.06800010800361633,0.07087506353855133,0.07375001907348633,0.07662497460842133,0.07949993014335632,0.08237488567829132,0.08524984121322632,0.08812479674816132,0.09099975228309631,0.09387470781803131],"_type":"histogram","values":[1,1,1,0,3,1,5,2,4,10,9,17,15,21,30,49,53,61,86,96,118,155,170,210,214,249,229,254,272,299,314,295,344,291,277,262,259,239,186,184,169,136,111,97,83,60,47,38,19,23,20,13,17,7,8,4,1,2,2,0,0,0,0,1]},"_step":0,"val_acc":0.23687943262411348,"train_acc":0.25812953441384673,"_runtime":814.0969541072845,"_timestamp":1.5795092246157851e+09}
-++{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1],"bins":[-0.07717597484588623,-0.07544030994176865,-0.07370464503765106,-0.07196898013353348,-0.0702333152294159,-0.06849765032529831,-0.06676198542118073,-0.06502632051706314,-0.06329065561294556,-0.06155499070882797,-0.05981932580471039,-0.058083660900592804,-0.05634799599647522,-0.054612331092357635,-0.05287666618824005,-0.05114100128412247,-0.04940533638000488,-0.0476696714758873,-0.045934006571769714,-0.04419834539294243,-0.042462680488824844,-0.04072701558470726,-0.038991350680589676,-0.03725568577647209,-0.03552002087235451,-0.03378435596823692,-0.03204869106411934,-0.030313026160001755,-0.02857736125588417,-0.026841696351766586,-0.025106031447649002,-0.023370366543531418,-0.021634701639413834,-0.01989903673529625,-0.018163371831178665,-0.01642770692706108,-0.014692042022943497,-0.012956380844116211,-0.011220715939998627,-0.009485051035881042,-0.007749386131763458,-0.006013721227645874,-0.00427805632352829,-0.0025423914194107056,-0.0008067265152931213,0.0009289383888244629,0.002664603292942047,0.004400268197059631,0.006135933101177216,0.0078715980052948,0.009607262909412384,0.011342927813529968,0.013078592717647552,0.014814257621765137,0.01654992252588272,0.018285587430000305,0.02002125233411789,0.021756917238235474,0.023492582142353058,0.025228247046470642,0.026963911950588226,0.02869957685470581,0.030435241758823395,0.03217090666294098,0.03390657156705856]},"gradients/classifier.weight":{"_type":"histogram","values":[1,0,1,0,1,1,3,1,1,2,4,9,11,17,27,29,40,36,67,86,99,128,150,186,242,222,248,298,311,327,349,317,357,337,321,308,284,232,208,178,153,140,97,76,67,43,32,35,19,16,10,6,2,2,3,3,0,0,0,0,0,0,0,1],"bins":[-0.10413810610771179,-0.10082836449146271,-0.09751862287521362,-0.09420888125896454,-0.09089913964271545,-0.08758939802646637,-0.08427965641021729,-0.0809699147939682,-0.07766017317771912,-0.07435043156147003,-0.07104068994522095,-0.06773094832897186,-0.06442121416330338,-0.06111147254705429,-0.057801730930805206,-0.05449198931455612,-0.05118224769830704,-0.04787250608205795,-0.04456276446580887,-0.041253022849559784,-0.0379432812333107,-0.034633539617061615,-0.03132379800081253,-0.028014056384563446,-0.02470432221889496,-0.021394580602645874,-0.01808483898639679,-0.014775097370147705,-0.01146535575389862,-0.008155614137649536,-0.004845872521400452,-0.0015361309051513672,0.0017736107110977173,0.005083352327346802,0.008393093943595886,0.01170283555984497,0.015012577176094055,0.01832231879234314,0.021632060408592224,0.02494180202484131,0.028251543641090393,0.03156128525733948,0.03487102687358856,0.038180768489837646,0.04149051010608673,0.044800251722335815,0.0481099933385849,0.051419734954833984,0.054729461669921875,0.05803920328617096,0.061348944902420044,0.06465868651866913,0.06796842813491821,0.0712781697511673,0.07458791136741638,0.07789765298366547,0.08120739459991455,0.08451713621616364,0.08782687783241272,0.0911366194486618,0.09444636106491089,0.09775610268115997,0.10106584429740906,0.10437558591365814,0.10768532752990723]},"_step":1,"val_acc":0.25011820330969264,"train_acc":0.258383926343752,"_runtime":974.3342196941376,"_timestamp":1.5795093848530507e+09}
-++{"gradients/classifier.bias":{"values":[1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.006489427760243416,-0.006147412117570639,-0.005805396940559149,-0.005463381297886372,-0.0051213656552135944,-0.004779350012540817,-0.004437334835529327,-0.00409531919285655,-0.0037533037830144167,-0.003411288373172283,-0.003069272730499506,-0.0027272573206573725,-0.002385241910815239,-0.0020432262681424618,-0.0017012106254696846,-0.0013591954484581947,-0.0010171798057854176,-0.0006751641631126404,-0.0003331489861011505,8.866656571626663e-06,0.00035088229924440384,0.0006928974762558937,0.0010349131189286709,0.001376928761601448,0.001718943938612938,0.0020609600469470024,0.0024029752239584923,0.002744990400969982,0.0030870065093040466,0.0034290216863155365,0.0037710368633270264,0.004113052971661091,0.004455068148672581,0.004797083325684071,0.005139099434018135,0.005481114611029625,0.005823129788041115,0.006165145896375179,0.006507161073386669,0.006849176250398159,0.0071911923587322235,0.007533207535743713,0.007875222712755203,0.008217238821089268,0.008559253998100758,0.008901269175112247,0.009243285283446312,0.009585300460457802,0.009927315637469292,0.010269330814480782,0.01061134785413742,0.01095336303114891,0.0112953782081604,0.01163739338517189,0.01197940856218338,0.01232142373919487,0.012663440778851509,0.013005455955862999,0.013347471132874489,0.013689486309885979,0.014031501486897469,0.014373516663908958,0.014715533703565598,0.015057548880577087,0.015399564057588577],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.07622425258159637,-0.07385586947202682,-0.07148748636245728,-0.06911909580230713,-0.06675071269273758,-0.06438232958316803,-0.06201394647359848,-0.05964556336402893,-0.05727717652916908,-0.054908789694309235,-0.052540406584739685,-0.050172023475170135,-0.047803640365600586,-0.04543525353074074,-0.04306687042117119,-0.04069848358631134,-0.03833010047674179,-0.03596171736717224,-0.03359333053231239,-0.031224947422742844,-0.028856560587882996,-0.026488177478313446,-0.024119794368743896,-0.02175140753388405,-0.0193830244243145,-0.01701464131474495,-0.014646254479885101,-0.012277871370315552,-0.009909488260746002,-0.007541105151176453,-0.005172714591026306,-0.0028043314814567566,-0.00043594837188720703,0.0019324347376823425,0.004300817847251892,0.006669208407402039,0.009037591516971588,0.011405974626541138,0.013774357736110687,0.016142740845680237,0.018511131405830383,0.020879514515399933,0.023247897624969482,0.025616280734539032,0.02798466384410858,0.03035304695367813,0.03272143751382828,0.03508982062339783,0.03745820373296738,0.039826586842536926,0.042194969952106476,0.04456336051225662,0.04693174362182617,0.049300119280815125,0.05166850984096527,0.05403690040111542,0.05640527606010437,0.05877366662025452,0.06114204227924347,0.06351043283939362,0.06587882339954376,0.06824719905853271,0.07061558961868286,0.07298396527767181,0.07535235583782196],"_type":"histogram","values":[1,2,2,4,0,3,3,1,11,7,15,14,23,25,27,43,59,66,75,106,101,128,148,168,174,206,231,240,275,266,300,299,271,298,285,266,270,214,209,214,192,142,152,94,103,94,63,48,43,36,29,22,19,17,12,8,5,3,1,6,3,1,0,1]},"_step":2,"val_acc":0.24964539007092199,"train_acc":0.2603407873430231,"_runtime":1133.4028816223145,"_timestamp":1.5795095439217126e+09}
-++{"gradients/classifier.bias":{"values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.06606416404247284,-0.06390783190727234,-0.06175149977207184,-0.05959516763687134,-0.05743883550167084,-0.05528250336647034,-0.053126171231269836,-0.050969839096069336,-0.048813506960868835,-0.046657174825668335,-0.044500842690467834,-0.042344510555267334,-0.040188178420066833,-0.03803184628486633,-0.03587551414966583,-0.03371918201446533,-0.03156284987926483,-0.02940651774406433,-0.02725018560886383,-0.02509385347366333,-0.02293752133846283,-0.02078118920326233,-0.01862485706806183,-0.016468524932861328,-0.014312192797660828,-0.012155860662460327,-0.009999528527259827,-0.007843196392059326,-0.005686864256858826,-0.003530532121658325,-0.0013741999864578247,0.0007821321487426758,0.0029384642839431763,0.005094796419143677,0.007251128554344177,0.009407460689544678,0.011563792824745178,0.013720124959945679,0.01587645709514618,0.01803278923034668,0.02018912136554718,0.02234545350074768,0.02450178563594818,0.02665811777114868,0.028814449906349182,0.030970782041549683,0.03312711417675018,0.035283446311950684,0.037439778447151184,0.039596110582351685,0.041752442717552185,0.043908774852752686,0.046065106987953186,0.048221439123153687,0.05037777125835419,0.05253410339355469,0.05469043552875519,0.05684676766395569,0.05900309979915619,0.06115943193435669,0.06331576406955719,0.06547209620475769,0.06762842833995819,0.06978476047515869,0.07194109261035919],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.09906706213951111,-0.09581608325242996,-0.09256510436534882,-0.08931412547826767,-0.08606314659118652,-0.08281217515468597,-0.07956118881702423,-0.07631021738052368,-0.07305923849344254,-0.06980825960636139,-0.06655728071928024,-0.0633063018321991,-0.06005532294511795,-0.056804344058036804,-0.053553368896245956,-0.05030239000916481,-0.047051411122083664,-0.04380043223500252,-0.04054945334792137,-0.037298478186130524,-0.03404749929904938,-0.03079652041196823,-0.027545541524887085,-0.02429456263780594,-0.021043583750724792,-0.017792604863643646,-0.0145416259765625,-0.01129065454006195,-0.008039675652980804,-0.004788696765899658,-0.001537717878818512,0.0017132610082626343,0.0049642398953437805,0.008215218782424927,0.011466197669506073,0.01471717655658722,0.017968155443668365,0.02121913433074951,0.02447010576725006,0.027721092104911804,0.030972063541412354,0.0342230498790741,0.037474021315574646,0.040724992752075195,0.04397597908973694,0.04722695052623749,0.05047793686389923,0.05372890830039978,0.05697989463806152,0.06023086607456207,0.06348185241222382,0.06673282384872437,0.06998381018638611,0.07323478162288666,0.07648575305938721,0.07973673939704895,0.0829877108335495,0.08623869717121124,0.08948966860771179,0.09274065494537354,0.09599162638187408,0.09924261271953583,0.10249358415603638,0.10574457049369812,0.10899554193019867],"_type":"histogram","values":[1,0,0,0,2,2,0,4,3,6,10,11,14,22,31,43,53,58,86,101,112,160,183,225,221,275,317,314,310,329,323,356,343,312,332,263,237,192,175,162,123,83,77,78,50,43,29,27,12,11,6,5,4,3,0,0,1,0,0,1,1,0,1,1]},"_step":3,"val_acc":0.26222222222222225,"train_acc":0.2627868635921119,"_runtime":1291.7072627544403,"_timestamp":1.5795097022260938e+09}
-++{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.037257447838783264,-0.035971060395240784,-0.034684669226408005,-0.033398281782865524,-0.032111890614032745,-0.030825503170490265,-0.029539113864302635,-0.028252724558115005,-0.026966335251927376,-0.025679945945739746,-0.024393556639552116,-0.023107167333364487,-0.021820779889822006,-0.020534390583634377,-0.019248001277446747,-0.017961611971259117,-0.016675222665071487,-0.015388833358883858,-0.014102444052696228,-0.012816054746508598,-0.011529665440320969,-0.010243277996778488,-0.008956888690590858,-0.007670499384403229,-0.006384110078215599,-0.005097720772027969,-0.003811333328485489,-0.00252494215965271,-0.0012385547161102295,4.783645272254944e-05,0.00133422389626503,0.002620615065097809,0.003907002508640289,0.00519338995218277,0.006479781121015549,0.007766168564558029,0.009052559733390808,0.010338947176933289,0.011625338345766068,0.012911725789308548,0.014198116958141327,0.015484504401683807,0.016770891845226288,0.018057283014059067,0.019343670457601547,0.020630061626434326,0.021916449069976807,0.023202840238809586,0.024489227682352066,0.025775618851184845,0.027062006294727325,0.028348393738269806,0.029634781181812286,0.030921176075935364,0.032207563519477844,0.033493950963020325,0.034780338406562805,0.036066725850105286,0.03735312074422836,0.038639508187770844,0.039925895631313324,0.041212283074855804,0.04249867796897888,0.04378506541252136,0.04507145285606384]},"gradients/classifier.weight":{"bins":[-0.0888357013463974,-0.08612215518951416,-0.08340860903263092,-0.08069506287574768,-0.07798151671886444,-0.0752679631114006,-0.07255441695451736,-0.06984087079763412,-0.06712732464075089,-0.06441377848386765,-0.061700232326984406,-0.05898668244481087,-0.05627313628792763,-0.05355959013104439,-0.05084604024887085,-0.04813249409198761,-0.04541894793510437,-0.04270540177822113,-0.03999185562133789,-0.03727830573916435,-0.03456475958228111,-0.03185121342539787,-0.029137663543224335,-0.026424117386341095,-0.023710571229457855,-0.020997025072574615,-0.018283478915691376,-0.015569932758808136,-0.0128563791513443,-0.01014283299446106,-0.00742928683757782,-0.00471574068069458,-0.0020021945238113403,0.0007113516330718994,0.003424897789955139,0.006138443946838379,0.008851990103721619,0.011565543711185455,0.014279089868068695,0.016992636024951935,0.019706182181835175,0.022419728338718414,0.025133274495601654,0.027846820652484894,0.03056037425994873,0.03327392041683197,0.03598746657371521,0.03870101273059845,0.04141455888748169,0.04412810504436493,0.04684165120124817,0.04955519735813141,0.05226874351501465,0.05498228967189789,0.05769583582878113,0.06040938198566437,0.0631229430437088,0.06583648920059204,0.06855003535747528,0.07126358151435852,0.07397712767124176,0.076690673828125,0.07940421998500824,0.08211776614189148,0.08483131229877472],"_type":"histogram","values":[1,0,0,0,2,0,1,0,10,6,9,13,11,18,18,29,47,58,58,70,96,103,104,181,183,180,232,264,280,262,304,320,289,307,281,323,255,289,218,224,185,155,132,132,118,76,65,59,48,22,30,26,17,9,5,3,4,2,3,3,1,2,0,1]},"_step":4,"val_acc":0.262789598108747,"train_acc":0.2653650279586515,"_runtime":1448.6882483959198,"_timestamp":1.5795098592070794e+09}
-+diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json b/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-+index 3724adb..0ce5b0d 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-++++ b/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-+@@ -3,10 +3,10 @@
-+     "program": "<python with no main file>",
-+     "git": {
-+         "remote": "https://github.com/ubamba98/droughtwatch",
-+-        "commit": "fea1daedb6b14125e1dec2c49a5e3b211d016f90"
-++        "commit": "4e7b9b38b8d5d3ec44d43373b8e263f50ead87a3"
-+     },
-+     "email": "ubamba98@gmail.com",
-+-    "startedAt": "2020-01-20T08:23:13.672686",
-++    "startedAt": "2020-01-20T08:44:21.248355",
-+     "host": "ccw-iclr",
-+     "username": "ubamba98",
-+     "executable": "/home/ubamba98/anaconda3/bin/python",
-+@@ -25,5 +25,5 @@
-+     "mode": "run",
-+     "name": "efficentnet-b3-765",
-+     "project": "droughtwatch",
-+-    "heartbeatAt": "2020-01-20T08:36:16.324952"
-++    "heartbeatAt": "2020-01-20T08:44:22.172990"
-+ }
-+diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-summary.json b/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-+index 05e4af4..27d2e55 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-++++ b/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-+@@ -1 +1 @@
-+-{"graph_0": {"_type": "graph", "format": "torch", "nodes": [{"name": "conv_stem", "id": 140438557381128, "class_name": "Conv2dSame(3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False)", "parameters": [["weight", [40, 3, 3, 3]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [1080]}, {"name": "bn1", "id": 140438557383704, "class_name": "BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [40]], ["bias", [40]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [40, 40]}, {"name": "blocks.0.0", "id": 140438557382920, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)\n  (bn1): BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [40, 1, 3, 3]], ["bn1.weight", [40]], ["bn1.bias", [40]], ["se.conv_reduce.weight", [10, 40, 1, 1]], ["se.conv_reduce.bias", [10]], ["se.conv_expand.weight", [40, 10, 1, 1]], ["se.conv_expand.bias", [40]], ["conv_pw.weight", [24, 40, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [360, 40, 40, 400, 10, 400, 40, 960, 24, 24]}, {"name": "blocks.0.1", "id": 140438680665224, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)\n  (bn1): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [24, 1, 3, 3]], ["bn1.weight", [24]], ["bn1.bias", [24]], ["se.conv_reduce.weight", [6, 24, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [24, 6, 1, 1]], ["se.conv_expand.bias", [24]], ["conv_pw.weight", [24, 24, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [216, 24, 24, 144, 6, 144, 24, 576, 24, 24]}, {"name": "blocks.1.0", "id": 140438676598736, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(144, 144, kernel_size=(3, 3), stride=(2, 2), groups=144, bias=False)\n  (bn2): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [144, 24, 1, 1]], ["bn1.weight", [144]], ["bn1.bias", [144]], ["conv_dw.weight", [144, 1, 3, 3]], ["bn2.weight", [144]], ["bn2.bias", [144]], ["se.conv_reduce.weight", [6, 144, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [144, 6, 1, 1]], ["se.conv_expand.bias", [144]], ["conv_pwl.weight", [32, 144, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 4608, 32, 32]}, {"name": "blocks.1.1", "id": 140438557424160, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.1.2", "id": 140438679559640, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.2.0", "id": 140438679470320, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(192, 192, kernel_size=(5, 5), stride=(2, 2), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 5, 5]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [48, 192, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [6144, 192, 192, 4800, 192, 192, 1536, 8, 1536, 192, 9216, 48, 48]}, {"name": "blocks.2.1", "id": 140438557424384, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.2.2", "id": 140438557422704, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.3.0", "id": 140438557421920, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(288, 288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 3, 3]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [96, 288, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [13824, 288, 288, 2592, 288, 288, 3456, 12, 3456, 288, 27648, 96, 96]}, {"name": "blocks.3.1", "id": 140438557422816, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.2", "id": 140438557824392, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.3", "id": 140438557825232, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.4", "id": 140438557825176, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.4.0", "id": 140438557824672, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 5, 5]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [136, 576, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [55296, 576, 576, 14400, 576, 576, 13824, 24, 13824, 576, 78336, 136, 136]}, {"name": "blocks.4.1", "id": 140438557823496, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.2", "id": 140438679158968, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.3", "id": 140438679496744, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.4", "id": 140438679422456, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.5.0", "id": 140438679421448, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(816, 816, kernel_size=(5, 5), stride=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [232, 816, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 189312, 232, 232]}, {"name": "blocks.5.1", "id": 140438679580400, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.2", "id": 140438679115088, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.3", "id": 140438676984832, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.4", "id": 140440670709296, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.5", "id": 140440670710192, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.6.0", "id": 140440670709464, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 3, 3]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [384, 1392, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [322944, 1392, 1392, 12528, 1392, 1392, 80736, 58, 80736, 1392, 534528, 384, 384]}, {"name": "blocks.6.1", "id": 140438679947864, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(384, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)\n  (bn2): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(2304, 96, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(96, 2304, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(2304, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [2304, 384, 1, 1]], ["bn1.weight", [2304]], ["bn1.bias", [2304]], ["conv_dw.weight", [2304, 1, 3, 3]], ["bn2.weight", [2304]], ["bn2.bias", [2304]], ["se.conv_reduce.weight", [96, 2304, 1, 1]], ["se.conv_reduce.bias", [96]], ["se.conv_expand.weight", [2304, 96, 1, 1]], ["se.conv_expand.bias", [2304]], ["conv_pwl.weight", [384, 2304, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [884736, 2304, 2304, 20736, 2304, 2304, 221184, 96, 221184, 2304, 884736, 384, 384]}, {"name": "conv_head", "id": 140438557382584, "class_name": "Conv2d(384, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)", "parameters": [["weight", [1536, 384, 1, 1]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [589824]}, {"name": "bn2", "id": 140438703610848, "class_name": "BatchNorm2d(1536, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [1536]], ["bias", [1536]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [1536, 1536]}, {"name": "global_pool", "id": 140438703610792, "class_name": "SelectAdaptivePool2d (output_size=1, pool_type=avg)", "parameters": [], "output_shape": [[256, 1536, 1, 1]], "num_parameters": []}, {"name": "classifier", "id": 140438679885696, "class_name": "Linear(in_features=1536, out_features=4, bias=True)", "parameters": [["weight", [4, 1536]], ["bias", [4]]], "output_shape": [[256, 4]], "num_parameters": [6144, 4]}], "edges": []}, "train_acc": 0.25812953441384673, "_step": 0, "gradients/classifier.weight": {"_type": "histogram", "values": [1.0, 1.0, 1.0, 0.0, 3.0, 1.0, 5.0, 2.0, 4.0, 10.0, 9.0, 17.0, 15.0, 21.0, 30.0, 49.0, 53.0, 61.0, 86.0, 96.0, 118.0, 155.0, 170.0, 210.0, 214.0, 249.0, 229.0, 254.0, 272.0, 299.0, 314.0, 295.0, 344.0, 291.0, 277.0, 262.0, 259.0, 239.0, 186.0, 184.0, 169.0, 136.0, 111.0, 97.0, 83.0, 60.0, 47.0, 38.0, 19.0, 23.0, 20.0, 13.0, 17.0, 7.0, 8.0, 4.0, 1.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.09012244641780853, -0.08724749088287354, -0.08437253534793854, -0.08149757981300354, -0.07862262427806854, -0.07574766874313354, -0.07287271320819855, -0.06999775767326355, -0.06712280213832855, -0.06424784660339355, -0.06137289106845856, -0.05849793553352356, -0.05562297999858856, -0.052748024463653564, -0.04987306892871857, -0.04699811339378357, -0.04412315785884857, -0.041248202323913574, -0.03837324678897858, -0.03549829125404358, -0.03262333571910858, -0.029748380184173584, -0.026873424649238586, -0.02399846911430359, -0.02112351357936859, -0.018248558044433594, -0.015373602509498596, -0.012498646974563599, -0.009623691439628601, -0.0067487359046936035, -0.003873780369758606, -0.0009988248348236084, 0.0018761307001113892, 0.004751086235046387, 0.007626041769981384, 0.010500997304916382, 0.01337595283985138, 0.016250908374786377, 0.019125863909721375, 0.022000819444656372, 0.02487577497959137, 0.027750730514526367, 0.030625686049461365, 0.03350064158439636, 0.03637559711933136, 0.03925055265426636, 0.042125508189201355, 0.04500046372413635, 0.04787541925907135, 0.05075037479400635, 0.053625330328941345, 0.05650028586387634, 0.05937524139881134, 0.06225019693374634, 0.06512515246868134, 0.06800010800361633, 0.07087506353855133, 0.07375001907348633, 0.07662497460842133, 0.07949993014335632, 0.08237488567829132, 0.08524984121322632, 0.08812479674816132, 0.09099975228309631, 0.09387470781803131]}, "gradients/classifier.bias": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.0654682070016861, -0.06339701265096664, -0.06132581830024719, -0.05925462394952774, -0.05718342587351799, -0.05511223152279854, -0.053041037172079086, -0.050969842821359634, -0.048898644745349884, -0.04682745039463043, -0.04475625604391098, -0.04268506169319153, -0.040613867342472076, -0.038542672991752625, -0.03647147864103317, -0.03440028056502342, -0.03232908621430397, -0.03025789186358452, -0.028186697512865067, -0.026115499436855316, -0.024044305086135864, -0.021973110735416412, -0.01990191638469696, -0.01783072203397751, -0.015759527683258057, -0.013688329607248306, -0.011617135256528854, -0.009545940905809402, -0.0074747465550899506, -0.005403552204370499, -0.0033323541283607483, -0.0012611597776412964, 0.0008100345730781555, 0.0028812289237976074, 0.004952423274517059, 0.007023617625236511, 0.009094811975955963, 0.011166006326675415, 0.013237208127975464, 0.015308402478694916, 0.017379596829414368, 0.01945079118013382, 0.02152198553085327, 0.023593179881572723, 0.025664374232292175, 0.027735568583011627, 0.02980676293373108, 0.03187795728445053, 0.03394915163516998, 0.03602035343647003, 0.038091547787189484, 0.040162742137908936, 0.04223393648862839, 0.04430513083934784, 0.04637632519006729, 0.04844751954078674, 0.050518713891506195, 0.05258990824222565, 0.0546611025929451, 0.05673230439424515, 0.0588034987449646, 0.060874685645103455, 0.0629458874464035, 0.06501707434654236, 0.06708827614784241]}, "val_acc": 0.23687943262411348, "_runtime": 814.0969541072845, "_timestamp": 1579509224.6157851}
-++{"graph_0": {"_type": "graph", "edges": [], "nodes": [{"id": 140438557381128, "name": "conv_stem", "class_name": "Conv2dSame(3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False)", "parameters": [["weight", [40, 3, 3, 3]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [1080]}, {"id": 140438557383704, "name": "bn1", "class_name": "BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [40]], ["bias", [40]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [40, 40]}, {"id": 140438557382920, "name": "blocks.0.0", "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)\n  (bn1): BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [40, 1, 3, 3]], ["bn1.weight", [40]], ["bn1.bias", [40]], ["se.conv_reduce.weight", [10, 40, 1, 1]], ["se.conv_reduce.bias", [10]], ["se.conv_expand.weight", [40, 10, 1, 1]], ["se.conv_expand.bias", [40]], ["conv_pw.weight", [24, 40, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [360, 40, 40, 400, 10, 400, 40, 960, 24, 24]}, {"id": 140438680665224, "name": "blocks.0.1", "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)\n  (bn1): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [24, 1, 3, 3]], ["bn1.weight", [24]], ["bn1.bias", [24]], ["se.conv_reduce.weight", [6, 24, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [24, 6, 1, 1]], ["se.conv_expand.bias", [24]], ["conv_pw.weight", [24, 24, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [216, 24, 24, 144, 6, 144, 24, 576, 24, 24]}, {"id": 140438676598736, "name": "blocks.1.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(144, 144, kernel_size=(3, 3), stride=(2, 2), groups=144, bias=False)\n  (bn2): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [144, 24, 1, 1]], ["bn1.weight", [144]], ["bn1.bias", [144]], ["conv_dw.weight", [144, 1, 3, 3]], ["bn2.weight", [144]], ["bn2.bias", [144]], ["se.conv_reduce.weight", [6, 144, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [144, 6, 1, 1]], ["se.conv_expand.bias", [144]], ["conv_pwl.weight", [32, 144, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 4608, 32, 32]}, {"id": 140438557424160, "name": "blocks.1.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"id": 140438679559640, "name": "blocks.1.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"id": 140438679470320, "name": "blocks.2.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(192, 192, kernel_size=(5, 5), stride=(2, 2), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 5, 5]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [48, 192, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [6144, 192, 192, 4800, 192, 192, 1536, 8, 1536, 192, 9216, 48, 48]}, {"id": 140438557424384, "name": "blocks.2.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"id": 140438557422704, "name": "blocks.2.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"id": 140438557421920, "name": "blocks.3.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(288, 288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 3, 3]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [96, 288, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [13824, 288, 288, 2592, 288, 288, 3456, 12, 3456, 288, 27648, 96, 96]}, {"id": 140438557422816, "name": "blocks.3.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557824392, "name": "blocks.3.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557825232, "name": "blocks.3.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557825176, "name": "blocks.3.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557824672, "name": "blocks.4.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 5, 5]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [136, 576, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [55296, 576, 576, 14400, 576, 576, 13824, 24, 13824, 576, 78336, 136, 136]}, {"id": 140438557823496, "name": "blocks.4.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679158968, "name": "blocks.4.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679496744, "name": "blocks.4.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679422456, "name": "blocks.4.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679421448, "name": "blocks.5.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(816, 816, kernel_size=(5, 5), stride=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [232, 816, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 189312, 232, 232]}, {"id": 140438679580400, "name": "blocks.5.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140438679115088, "name": "blocks.5.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140438676984832, "name": "blocks.5.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140440670709296, "name": "blocks.5.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140440670710192, "name": "blocks.5.5", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140440670709464, "name": "blocks.6.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 3, 3]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [384, 1392, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [322944, 1392, 1392, 12528, 1392, 1392, 80736, 58, 80736, 1392, 534528, 384, 384]}, {"id": 140438679947864, "name": "blocks.6.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(384, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)\n  (bn2): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(2304, 96, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(96, 2304, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(2304, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [2304, 384, 1, 1]], ["bn1.weight", [2304]], ["bn1.bias", [2304]], ["conv_dw.weight", [2304, 1, 3, 3]], ["bn2.weight", [2304]], ["bn2.bias", [2304]], ["se.conv_reduce.weight", [96, 2304, 1, 1]], ["se.conv_reduce.bias", [96]], ["se.conv_expand.weight", [2304, 96, 1, 1]], ["se.conv_expand.bias", [2304]], ["conv_pwl.weight", [384, 2304, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [884736, 2304, 2304, 20736, 2304, 2304, 221184, 96, 221184, 2304, 884736, 384, 384]}, {"id": 140438557382584, "name": "conv_head", "class_name": "Conv2d(384, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)", "parameters": [["weight", [1536, 384, 1, 1]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [589824]}, {"id": 140438703610848, "name": "bn2", "class_name": "BatchNorm2d(1536, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [1536]], ["bias", [1536]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [1536, 1536]}, {"id": 140438703610792, "name": "global_pool", "class_name": "SelectAdaptivePool2d (output_size=1, pool_type=avg)", "parameters": [], "output_shape": [[256, 1536, 1, 1]], "num_parameters": []}, {"id": 140438679885696, "name": "classifier", "class_name": "Linear(in_features=1536, out_features=4, bias=True)", "parameters": [["weight", [4, 1536]], ["bias", [4]]], "output_shape": [[256, 4]], "num_parameters": [6144, 4]}], "format": "torch"}, "train_acc": 0.2653650279586515, "_step": 4, "gradients/classifier.weight": {"bins": [-0.0888357013463974, -0.08612215518951416, -0.08340860903263092, -0.08069506287574768, -0.07798151671886444, -0.0752679631114006, -0.07255441695451736, -0.06984087079763412, -0.06712732464075089, -0.06441377848386765, -0.061700232326984406, -0.05898668244481087, -0.05627313628792763, -0.05355959013104439, -0.05084604024887085, -0.04813249409198761, -0.04541894793510437, -0.04270540177822113, -0.03999185562133789, -0.03727830573916435, -0.03456475958228111, -0.03185121342539787, -0.029137663543224335, -0.026424117386341095, -0.023710571229457855, -0.020997025072574615, -0.018283478915691376, -0.015569932758808136, -0.0128563791513443, -0.01014283299446106, -0.00742928683757782, -0.00471574068069458, -0.0020021945238113403, 0.0007113516330718994, 0.003424897789955139, 0.006138443946838379, 0.008851990103721619, 0.011565543711185455, 0.014279089868068697, 0.016992636024951935, 0.019706182181835175, 0.022419728338718414, 0.025133274495601658, 0.027846820652484897, 0.03056037425994873, 0.03327392041683197, 0.03598746657371521, 0.03870101273059845, 0.04141455888748169, 0.04412810504436493, 0.04684165120124817, 0.04955519735813141, 0.05226874351501465, 0.05498228967189789, 0.05769583582878113, 0.06040938198566437, 0.0631229430437088, 0.06583648920059204, 0.06855003535747528, 0.07126358151435852, 0.07397712767124176, 0.076690673828125, 0.07940421998500824, 0.08211776614189148, 0.08483131229877472], "_type": "histogram", "values": [1, 0, 0, 0, 2, 0, 1, 0, 10, 6, 9, 13, 11, 18, 18, 29, 47, 58, 58, 70, 96, 103, 104, 181, 183, 180, 232, 264, 280, 262, 304, 320, 289, 307, 281, 323, 255, 289, 218, 224, 185, 155, 132, 132, 118, 76, 65, 59, 48, 22, 30, 26, 17, 9, 5, 3, 4, 2, 3, 3, 1, 2, 0, 1]}, "gradients/classifier.bias": {"bins": [-0.037257447838783264, -0.035971060395240784, -0.034684669226408005, -0.033398281782865524, -0.032111890614032745, -0.030825503170490265, -0.029539113864302635, -0.028252724558115005, -0.026966335251927376, -0.025679945945739743, -0.024393556639552116, -0.023107167333364487, -0.02182077988982201, -0.020534390583634377, -0.019248001277446747, -0.017961611971259117, -0.016675222665071487, -0.015388833358883858, -0.014102444052696228, -0.012816054746508598, -0.011529665440320969, -0.010243277996778488, -0.008956888690590858, -0.007670499384403229, -0.006384110078215599, -0.005097720772027969, -0.003811333328485489, -0.00252494215965271, -0.0012385547161102295, 4.783645272254944e-05, 0.00133422389626503, 0.002620615065097809, 0.003907002508640289, 0.00519338995218277, 0.006479781121015549, 0.007766168564558029, 0.009052559733390808, 0.010338947176933289, 0.011625338345766068, 0.012911725789308548, 0.014198116958141329, 0.015484504401683807, 0.016770891845226288, 0.018057283014059067, 0.019343670457601547, 0.02063006162643433, 0.021916449069976807, 0.023202840238809586, 0.024489227682352063, 0.025775618851184845, 0.027062006294727325, 0.02834839373826981, 0.029634781181812286, 0.030921176075935364, 0.032207563519477844, 0.033493950963020325, 0.034780338406562805, 0.036066725850105286, 0.03735312074422836, 0.03863950818777085, 0.03992589563131333, 0.04121228307485581, 0.04249867796897888, 0.04378506541252136, 0.04507145285606384], "_type": "histogram", "values": [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]}, "val_acc": 0.262789598108747, "_runtime": 1448.6882483959198, "_timestamp": 1579509859.2070794}
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-index bebeecd..97ebdd9 100644
---- a/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-@@ -1,26 +1,36 @@
--{"system.network.sent":15797,"system.gpu.0.powerPercent":41.9,"system.network.recv":65303,"system.disk":22.4,"system.gpu.0.powerWatts":29.33,"_wandb":true,"system.gpu.0.temp":61,"system.gpu.0.memory":0,"system.gpu.0.gpu":0,"_runtime":1,"system.proc.memory.rssMB":262.66,"system.proc.memory.availableMB":14300.84,"system.cpu":13.75,"system.proc.cpu.threads":17,"system.memory":4.9,"system.proc.memory.percent":1.75,"system.gpu.0.memoryAllocated":0,"_timestamp":1579508336}
--{"system.gpu.0.gpu": 10.2, "system.gpu.0.memory": 7.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 68.0, "system.gpu.0.powerWatts": 37.18, "system.gpu.0.powerPercent": 53.11, "system.cpu": 6.9, "system.memory": 22.68, "system.disk": 22.4, "system.proc.memory.availableMB": 11632.24, "system.proc.memory.rssMB": 2960.92, "system.proc.memory.percent": 19.68, "system.proc.cpu.threads": 27.87, "system.network.sent": 244468, "system.network.recv": 251940, "_wandb": true, "_timestamp": 1579508635, "_runtime": 42}
--{"system.gpu.0.gpu": 5.47, "system.gpu.0.memory": 4.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 69.93, "system.gpu.0.powerWatts": 38.27, "system.gpu.0.powerPercent": 54.67, "system.cpu": 6.63, "system.memory": 22.78, "system.disk": 22.4, "system.proc.memory.availableMB": 11615.58, "system.proc.memory.rssMB": 2961.46, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 339293, "system.network.recv": 337753, "_wandb": true, "_timestamp": 1579508665, "_runtime": 73}
--{"system.gpu.0.gpu": 8.87, "system.gpu.0.memory": 6.47, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 72.07, "system.gpu.0.powerWatts": 40.58, "system.gpu.0.powerPercent": 57.97, "system.cpu": 7.19, "system.memory": 22.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11605.85, "system.proc.memory.rssMB": 2961.46, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 431682, "system.network.recv": 429114, "_wandb": true, "_timestamp": 1579508695, "_runtime": 103}
--{"system.gpu.0.gpu": 8.67, "system.gpu.0.memory": 5.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 73.27, "system.gpu.0.powerWatts": 36.56, "system.gpu.0.powerPercent": 52.23, "system.cpu": 7.94, "system.memory": 22.88, "system.disk": 22.4, "system.proc.memory.availableMB": 11602.32, "system.proc.memory.rssMB": 2961.81, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 534529, "system.network.recv": 530758, "_wandb": true, "_timestamp": 1579508725, "_runtime": 133}
--{"system.gpu.0.gpu": 8.87, "system.gpu.0.memory": 5.8, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 74.93, "system.gpu.0.powerWatts": 43.21, "system.gpu.0.powerPercent": 61.73, "system.cpu": 8.45, "system.memory": 22.98, "system.disk": 22.4, "system.proc.memory.availableMB": 11587.51, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 635626, "system.network.recv": 634655, "_wandb": true, "_timestamp": 1579508756, "_runtime": 163}
--{"system.gpu.0.gpu": 9.87, "system.gpu.0.memory": 7.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 42.67, "system.gpu.0.powerPercent": 60.96, "system.cpu": 8.79, "system.memory": 23.02, "system.disk": 22.4, "system.proc.memory.availableMB": 11581.47, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 748987, "system.network.recv": 747904, "_wandb": true, "_timestamp": 1579508786, "_runtime": 193}
--{"system.gpu.0.gpu": 11.87, "system.gpu.0.memory": 8.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.67, "system.gpu.0.powerWatts": 44.82, "system.gpu.0.powerPercent": 64.03, "system.cpu": 9.73, "system.memory": 23.07, "system.disk": 22.4, "system.proc.memory.availableMB": 11575.17, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 873256, "system.network.recv": 874007, "_wandb": true, "_timestamp": 1579508816, "_runtime": 223}
--{"system.gpu.0.gpu": 11.0, "system.gpu.0.memory": 8.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.27, "system.gpu.0.powerWatts": 38.19, "system.gpu.0.powerPercent": 54.55, "system.cpu": 10.57, "system.memory": 23.05, "system.disk": 22.4, "system.proc.memory.availableMB": 11572.48, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1023164, "system.network.recv": 1026940, "_wandb": true, "_timestamp": 1579508846, "_runtime": 253}
--{"system.gpu.0.gpu": 14.2, "system.gpu.0.memory": 10.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.27, "system.gpu.0.powerWatts": 42.89, "system.gpu.0.powerPercent": 61.28, "system.cpu": 11.98, "system.memory": 23.15, "system.disk": 22.4, "system.proc.memory.availableMB": 11561.87, "system.proc.memory.rssMB": 2962.21, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1178866, "system.network.recv": 1181511, "_wandb": true, "_timestamp": 1579508876, "_runtime": 283}
--{"system.gpu.0.gpu": 13.0, "system.gpu.0.memory": 10.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 78.0, "system.gpu.0.powerWatts": 50.01, "system.gpu.0.powerPercent": 71.45, "system.cpu": 13.59, "system.memory": 23.22, "system.disk": 22.4, "system.proc.memory.availableMB": 11553.44, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1331123, "system.network.recv": 1336366, "_wandb": true, "_timestamp": 1579508906, "_runtime": 314}
--{"system.gpu.0.gpu": 25.13, "system.gpu.0.memory": 21.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.33, "system.gpu.0.powerWatts": 45.73, "system.gpu.0.powerPercent": 65.33, "system.cpu": 15.11, "system.memory": 23.2, "system.disk": 22.4, "system.proc.memory.availableMB": 11550.57, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1518597, "system.network.recv": 1523627, "_wandb": true, "_timestamp": 1579508936, "_runtime": 344}
--{"system.gpu.0.gpu": 19.67, "system.gpu.0.memory": 16.87, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.53, "system.gpu.0.powerWatts": 49.57, "system.gpu.0.powerPercent": 70.82, "system.cpu": 17.23, "system.memory": 23.21, "system.disk": 22.4, "system.proc.memory.availableMB": 11547.93, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1702121, "system.network.recv": 1710364, "_wandb": true, "_timestamp": 1579508966, "_runtime": 374}
--{"system.gpu.0.gpu": 18.4, "system.gpu.0.memory": 15.73, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.2, "system.gpu.0.powerWatts": 51.24, "system.gpu.0.powerPercent": 73.2, "system.cpu": 18.21, "system.memory": 23.35, "system.disk": 22.4, "system.proc.memory.availableMB": 11531.67, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1856007, "system.network.recv": 1863572, "_wandb": true, "_timestamp": 1579508997, "_runtime": 404}
--{"system.gpu.0.gpu": 18.8, "system.gpu.0.memory": 16.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.47, "system.gpu.0.powerWatts": 49.62, "system.gpu.0.powerPercent": 70.89, "system.cpu": 19.99, "system.memory": 23.32, "system.disk": 22.4, "system.proc.memory.availableMB": 11535.11, "system.proc.memory.rssMB": 2962.48, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2016161, "system.network.recv": 2023461, "_wandb": true, "_timestamp": 1579509027, "_runtime": 434}
--{"system.gpu.0.gpu": 21.0, "system.gpu.0.memory": 18.07, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.13, "system.gpu.0.powerWatts": 50.49, "system.gpu.0.powerPercent": 72.13, "system.cpu": 20.69, "system.memory": 23.18, "system.disk": 22.4, "system.proc.memory.availableMB": 11552.24, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2245090, "system.network.recv": 2255638, "_wandb": true, "_timestamp": 1579509057, "_runtime": 464}
--{"system.gpu.0.gpu": 17.07, "system.gpu.0.memory": 14.13, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.13, "system.gpu.0.powerWatts": 51.83, "system.gpu.0.powerPercent": 74.04, "system.cpu": 21.11, "system.memory": 23.25, "system.disk": 22.4, "system.proc.memory.availableMB": 11542.37, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2746309, "system.network.recv": 2487509, "_wandb": true, "_timestamp": 1579509087, "_runtime": 494}
--{"system.gpu.0.gpu": 66.47, "system.gpu.0.memory": 44.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 78.4, "system.gpu.0.powerWatts": 64.54, "system.gpu.0.powerPercent": 92.21, "system.cpu": 78.97, "system.memory": 23.2, "system.disk": 22.4, "system.proc.memory.availableMB": 11552.42, "system.proc.memory.rssMB": 2957.19, "system.proc.memory.percent": 19.66, "system.proc.cpu.threads": 27.2, "system.network.sent": 3696180, "system.network.recv": 2568386, "_wandb": true, "_timestamp": 1579509117, "_runtime": 525}
--{"system.gpu.0.gpu": 82.13, "system.gpu.0.memory": 53.73, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.33, "system.gpu.0.powerWatts": 67.07, "system.gpu.0.powerPercent": 95.82, "system.cpu": 99.89, "system.memory": 23.25, "system.disk": 22.4, "system.proc.memory.availableMB": 11541.6, "system.proc.memory.rssMB": 2956.42, "system.proc.memory.percent": 19.65, "system.proc.cpu.threads": 27.0, "system.network.sent": 3700982, "system.network.recv": 2571448, "_wandb": true, "_timestamp": 1579509147, "_runtime": 555}
--{"system.gpu.0.gpu": 78.07, "system.gpu.0.memory": 50.87, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.0, "system.gpu.0.powerWatts": 62.66, "system.gpu.0.powerPercent": 89.52, "system.cpu": 93.01, "system.memory": 23.62, "system.disk": 22.4, "system.proc.memory.availableMB": 11490.1, "system.proc.memory.rssMB": 2955.65, "system.proc.memory.percent": 19.65, "system.proc.cpu.threads": 27.0, "system.network.sent": 3709404, "system.network.recv": 2574045, "_wandb": true, "_timestamp": 1579509178, "_runtime": 585}
--{"system.gpu.0.gpu": 15.07, "system.gpu.0.memory": 3.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 71.73, "system.gpu.0.powerWatts": 34.48, "system.gpu.0.powerPercent": 49.26, "system.cpu": 25.27, "system.memory": 22.4, "system.disk": 22.4, "system.proc.memory.availableMB": 11676.86, "system.proc.memory.rssMB": 2950.69, "system.proc.memory.percent": 19.61, "system.proc.cpu.threads": 27.0, "system.network.sent": 3721790, "system.network.recv": 2631378, "_wandb": true, "_timestamp": 1579509208, "_runtime": 615}
--{"system.gpu.0.gpu": 45.27, "system.gpu.0.memory": 29.07, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 74.07, "system.gpu.0.powerWatts": 48.68, "system.gpu.0.powerPercent": 69.55, "system.cpu": 61.3, "system.memory": 22.83, "system.disk": 22.4, "system.proc.memory.availableMB": 11611.68, "system.proc.memory.rssMB": 2958.09, "system.proc.memory.percent": 19.66, "system.proc.cpu.threads": 27.47, "system.network.sent": 4312731, "system.network.recv": 3024984, "_wandb": true, "_timestamp": 1579509238, "_runtime": 645}
--{"system.gpu.0.gpu": 85.27, "system.gpu.0.memory": 64.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 80.4, "system.gpu.0.powerWatts": 69.5, "system.gpu.0.powerPercent": 99.29, "system.cpu": 98.87, "system.memory": 23.4, "system.disk": 22.4, "system.proc.memory.availableMB": 11523.09, "system.proc.memory.rssMB": 2965.59, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 28.0, "system.network.sent": 5355584, "system.network.recv": 3684826, "_wandb": true, "_timestamp": 1579509268, "_runtime": 675}
--{"system.gpu.0.gpu": 82.67, "system.gpu.0.memory": 63.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.13, "system.gpu.0.powerWatts": 68.41, "system.gpu.0.powerPercent": 97.73, "system.cpu": 97.43, "system.memory": 23.36, "system.disk": 22.4, "system.proc.memory.availableMB": 11527.65, "system.proc.memory.rssMB": 2966.13, "system.proc.memory.percent": 19.72, "system.proc.cpu.threads": 27.93, "system.network.sent": 6262772, "system.network.recv": 4284351, "_wandb": true, "_timestamp": 1579509298, "_runtime": 706}
--{"system.gpu.0.gpu": 84.6, "system.gpu.0.memory": 55.33, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.4, "system.gpu.0.powerWatts": 66.84, "system.gpu.0.powerPercent": 95.48, "system.cpu": 99.88, "system.memory": 23.27, "system.disk": 22.4, "system.proc.memory.availableMB": 11542.26, "system.proc.memory.rssMB": 2958.56, "system.proc.memory.percent": 19.67, "system.proc.cpu.threads": 27.0, "system.network.sent": 6275456, "system.network.recv": 4336424, "_wandb": true, "_timestamp": 1579509329, "_runtime": 736}
--{"system.gpu.0.gpu": 84.4, "system.gpu.0.memory": 55.13, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.73, "system.gpu.0.powerWatts": 73.68, "system.gpu.0.powerPercent": 105.26, "system.cpu": 99.89, "system.memory": 23.29, "system.disk": 22.4, "system.proc.memory.availableMB": 11538.26, "system.proc.memory.rssMB": 2958.56, "system.proc.memory.percent": 19.67, "system.proc.cpu.threads": 27.0, "system.network.sent": 6279094, "system.network.recv": 4342260, "_wandb": true, "_timestamp": 1579509359, "_runtime": 766}
-+{"system.network.sent":10977141,"system.gpu.0.powerPercent":96.79,"system.network.recv":7409894,"system.disk":22.4,"system.gpu.0.powerWatts":67.75,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":65.33,"system.gpu.0.gpu":85.6,"_runtime":1008,"system.proc.memory.rssMB":2966.29,"system.proc.memory.availableMB":11506.94,"system.cpu":98.25,"system.proc.cpu.threads":28,"system.memory":23.5,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509601}
-+{"system.network.sent":11502749,"system.gpu.0.powerPercent":97.46,"system.network.recv":7764756,"system.disk":22.4,"system.gpu.0.powerWatts":68.23,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":60.73,"system.gpu.0.gpu":85.87,"_runtime":1039,"system.proc.memory.rssMB":2962.16,"system.proc.memory.availableMB":11528.19,"system.cpu":97.55,"system.proc.cpu.threads":27.47,"system.memory":23.37,"system.proc.memory.percent":19.69,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509631}
-+{"system.network.sent":11508976,"system.gpu.0.powerPercent":102.06,"system.network.recv":7771440,"system.disk":22.4,"system.gpu.0.powerWatts":71.44,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.53,"system.gpu.0.gpu":85.6,"_runtime":1069,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11533.16,"system.cpu":99.91,"system.proc.cpu.threads":27,"system.memory":23.34,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509662}
-+{"system.network.sent":11522899,"system.gpu.0.powerPercent":93.89,"system.network.recv":7774171,"system.disk":22.4,"system.gpu.0.powerWatts":65.73,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.8,"_runtime":1099,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11449.37,"system.cpu":99.9,"system.proc.cpu.threads":27,"system.memory":23.89,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509692}
-+{"system.network.sent":12355982,"system.gpu.0.powerPercent":99.47,"system.network.recv":8325343,"system.disk":22.4,"system.gpu.0.powerWatts":69.63,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":53.6,"system.gpu.0.gpu":80.47,"_runtime":1129,"system.proc.memory.rssMB":2962.93,"system.proc.memory.availableMB":11549.31,"system.cpu":91.64,"system.proc.cpu.threads":27.73,"system.memory":23.23,"system.proc.memory.percent":19.7,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509722}
-+{"system.network.sent":13392411,"system.gpu.0.powerPercent":96.5,"system.network.recv":9022410,"system.disk":22.4,"system.gpu.0.powerWatts":67.55,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":66.2,"system.gpu.0.gpu":86.73,"_runtime":1160,"system.proc.memory.rssMB":2966.31,"system.proc.memory.availableMB":11507.02,"system.cpu":96.58,"system.proc.cpu.threads":28,"system.memory":23.51,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509752}
-+{"system.network.sent":14052060,"system.gpu.0.powerPercent":93.62,"system.network.recv":9455229,"system.disk":22.4,"system.gpu.0.powerWatts":65.53,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":62.4,"system.gpu.0.gpu":86.33,"_runtime":1190,"system.proc.memory.rssMB":2964.4,"system.proc.memory.availableMB":11520.81,"system.cpu":96.15,"system.proc.cpu.threads":27.67,"system.memory":23.41,"system.proc.memory.percent":19.71,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509783}
-+{"system.network.sent":14116134,"system.gpu.0.powerPercent":97.24,"system.network.recv":9471018,"system.disk":22.4,"system.gpu.0.powerWatts":68.07,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.13,"_runtime":1220,"system.proc.memory.rssMB":2959.24,"system.proc.memory.availableMB":11527.75,"system.cpu":99.85,"system.proc.cpu.threads":27,"system.memory":23.39,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509813}
-+{"system.network.sent":14129520,"system.gpu.0.powerPercent":102.88,"system.network.recv":9474423,"system.disk":22.4,"system.gpu.0.powerWatts":72.02,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":56.33,"system.gpu.0.gpu":86.27,"_runtime":1250,"system.proc.memory.rssMB":2958.7,"system.proc.memory.availableMB":11472.54,"system.cpu":99.87,"system.proc.cpu.threads":27,"system.memory":23.75,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509843}
-+{"system.network.sent":14134644,"system.gpu.0.powerPercent":87.89,"system.network.recv":9477692,"system.disk":22.4,"system.gpu.0.powerWatts":61.52,"_wandb":true,"system.gpu.0.temp":76.75,"system.gpu.0.memory":39.12,"system.gpu.0.gpu":73.5,"_runtime":1267,"system.proc.memory.rssMB":2956.05,"system.proc.memory.availableMB":11567.16,"system.cpu":86.28,"system.proc.cpu.threads":26.38,"system.memory":23.1,"system.proc.memory.percent":19.65,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509859}
-+{"system.gpu.0.gpu": 81.67, "system.gpu.0.memory": 48.93, "system.gpu.0.memoryAllocated": 37.81, "system.gpu.0.temp": 76.87, "system.gpu.0.powerWatts": 64.4, "system.gpu.0.powerPercent": 92.01, "system.cpu": 37.97, "system.memory": 23.73, "system.disk": 22.4, "system.proc.memory.availableMB": 11472.72, "system.proc.memory.rssMB": 2972.11, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 27.93, "system.network.sent": 758361, "system.network.recv": 563087, "_wandb": true, "_timestamp": 1579509890, "_runtime": 1296}
-+{"system.gpu.0.gpu": 89.2, "system.gpu.0.memory": 54.2, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 71.05, "system.gpu.0.powerPercent": 101.51, "system.cpu": 38.42, "system.memory": 23.79, "system.disk": 22.4, "system.proc.memory.availableMB": 11462.96, "system.proc.memory.rssMB": 2972.18, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 1227510, "system.network.recv": 875686, "_wandb": true, "_timestamp": 1579509920, "_runtime": 1326}
-+{"system.gpu.0.gpu": 89.33, "system.gpu.0.memory": 53.87, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.2, "system.gpu.0.powerWatts": 68.12, "system.gpu.0.powerPercent": 97.31, "system.cpu": 38.65, "system.memory": 23.81, "system.disk": 22.4, "system.proc.memory.availableMB": 11461.55, "system.proc.memory.rssMB": 2972.18, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 1666981, "system.network.recv": 1169241, "_wandb": true, "_timestamp": 1579509950, "_runtime": 1356}
-+{"system.gpu.0.gpu": 89.6, "system.gpu.0.memory": 54.4, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 76.8, "system.gpu.0.powerWatts": 65.93, "system.gpu.0.powerPercent": 94.19, "system.cpu": 38.85, "system.memory": 23.85, "system.disk": 22.4, "system.proc.memory.availableMB": 11460.04, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 2085510, "system.network.recv": 1447740, "_wandb": true, "_timestamp": 1579509980, "_runtime": 1386}
-+{"system.gpu.0.gpu": 89.53, "system.gpu.0.memory": 54.2, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 61.94, "system.gpu.0.powerPercent": 88.48, "system.cpu": 38.46, "system.memory": 23.84, "system.disk": 22.4, "system.proc.memory.availableMB": 11461.03, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 2506923, "system.network.recv": 1726051, "_wandb": true, "_timestamp": 1579510011, "_runtime": 1416}
-+{"system.gpu.0.gpu": 89.6, "system.gpu.0.memory": 54.4, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.07, "system.gpu.0.powerWatts": 70.87, "system.gpu.0.powerPercent": 101.25, "system.cpu": 38.67, "system.memory": 23.83, "system.disk": 22.4, "system.proc.memory.availableMB": 11460.28, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 2927846, "system.network.recv": 2010982, "_wandb": true, "_timestamp": 1579510041, "_runtime": 1446}
-+{"system.gpu.0.gpu": 90.2, "system.gpu.0.memory": 54.4, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 73.43, "system.gpu.0.powerPercent": 104.9, "system.cpu": 38.77, "system.memory": 23.89, "system.disk": 22.4, "system.proc.memory.availableMB": 11452.43, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 3356480, "system.network.recv": 2290911, "_wandb": true, "_timestamp": 1579510071, "_runtime": 1477}
-+{"system.gpu.0.gpu": 89.67, "system.gpu.0.memory": 54.13, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 75.49, "system.gpu.0.powerPercent": 107.84, "system.cpu": 38.83, "system.memory": 24.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11301.4, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 3779986, "system.network.recv": 2571164, "_wandb": true, "_timestamp": 1579510101, "_runtime": 1507}
-+{"system.gpu.0.gpu": 89.8, "system.gpu.0.memory": 54.4, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 61.33, "system.gpu.0.powerPercent": 87.61, "system.cpu": 38.63, "system.memory": 24.85, "system.disk": 22.4, "system.proc.memory.availableMB": 11302.55, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 4195859, "system.network.recv": 2844061, "_wandb": true, "_timestamp": 1579510131, "_runtime": 1537}
-+{"system.gpu.0.gpu": 85.8, "system.gpu.0.memory": 53.33, "system.gpu.0.memoryAllocated": 37.95, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 62.38, "system.gpu.0.powerPercent": 89.12, "system.cpu": 56.72, "system.memory": 24.3, "system.disk": 22.4, "system.proc.memory.availableMB": 11387.01, "system.proc.memory.rssMB": 2969.03, "system.proc.memory.percent": 19.74, "system.proc.cpu.threads": 27.67, "system.network.sent": 4493831, "system.network.recv": 3041280, "_wandb": true, "_timestamp": 1579510161, "_runtime": 1567}
-+{"system.gpu.0.gpu": 86.2, "system.gpu.0.memory": 56.4, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 71.41, "system.gpu.0.powerPercent": 102.01, "system.cpu": 99.85, "system.memory": 23.4, "system.disk": 22.4, "system.proc.memory.availableMB": 11522.27, "system.proc.memory.rssMB": 2964.5, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 27.0, "system.network.sent": 4498491, "system.network.recv": 3091323, "_wandb": true, "_timestamp": 1579510192, "_runtime": 1597}
-+{"system.gpu.0.gpu": 85.87, "system.gpu.0.memory": 55.8, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 76.67, "system.gpu.0.powerWatts": 71.14, "system.gpu.0.powerPercent": 101.63, "system.cpu": 99.9, "system.memory": 23.45, "system.disk": 22.4, "system.proc.memory.availableMB": 11515.83, "system.proc.memory.rssMB": 2965.05, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 27.0, "system.network.sent": 4501885, "system.network.recv": 3092980, "_wandb": true, "_timestamp": 1579510222, "_runtime": 1628}
-+{"system.gpu.0.gpu": 81.0, "system.gpu.0.memory": 45.8, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 76.8, "system.gpu.0.powerWatts": 69.12, "system.gpu.0.powerPercent": 98.74, "system.cpu": 66.55, "system.memory": 23.26, "system.disk": 22.4, "system.proc.memory.availableMB": 11546.79, "system.proc.memory.rssMB": 2967.48, "system.proc.memory.percent": 19.73, "system.proc.cpu.threads": 27.2, "system.network.sent": 4796843, "system.network.recv": 3293537, "_wandb": true, "_timestamp": 1579510252, "_runtime": 1658}
-+{"system.gpu.0.gpu": 89.4, "system.gpu.0.memory": 54.07, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 66.42, "system.gpu.0.powerPercent": 94.89, "system.cpu": 38.99, "system.memory": 23.73, "system.disk": 22.4, "system.proc.memory.availableMB": 11475.88, "system.proc.memory.rssMB": 2973.86, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 5353158, "system.network.recv": 3638383, "_wandb": true, "_timestamp": 1579510282, "_runtime": 1688}
-+{"system.gpu.0.gpu": 89.47, "system.gpu.0.memory": 54.2, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 72.24, "system.gpu.0.powerPercent": 103.2, "system.cpu": 38.73, "system.memory": 23.75, "system.disk": 22.4, "system.proc.memory.availableMB": 11472.79, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 5835668, "system.network.recv": 4000743, "_wandb": true, "_timestamp": 1579510312, "_runtime": 1718}
-+{"system.gpu.0.gpu": 89.53, "system.gpu.0.memory": 54.13, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.07, "system.gpu.0.powerWatts": 64.27, "system.gpu.0.powerPercent": 91.82, "system.cpu": 38.81, "system.memory": 23.75, "system.disk": 22.4, "system.proc.memory.availableMB": 11471.81, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 6261668, "system.network.recv": 4287637, "_wandb": true, "_timestamp": 1579510343, "_runtime": 1748}
-+{"system.gpu.0.gpu": 89.6, "system.gpu.0.memory": 54.27, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 69.51, "system.gpu.0.powerPercent": 99.3, "system.cpu": 38.54, "system.memory": 23.75, "system.disk": 22.4, "system.proc.memory.availableMB": 11472.59, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 6700788, "system.network.recv": 4577856, "_wandb": true, "_timestamp": 1579510373, "_runtime": 1778}
-+{"system.gpu.0.gpu": 89.8, "system.gpu.0.memory": 54.47, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 71.42, "system.gpu.0.powerPercent": 102.02, "system.cpu": 39.33, "system.memory": 24.39, "system.disk": 22.4, "system.proc.memory.availableMB": 11375.64, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 7142196, "system.network.recv": 4871182, "_wandb": true, "_timestamp": 1579510403, "_runtime": 1809}
-+{"system.gpu.0.gpu": 90.13, "system.gpu.0.memory": 54.6, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 59.28, "system.gpu.0.powerPercent": 84.68, "system.cpu": 38.85, "system.memory": 24.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11302.76, "system.proc.memory.rssMB": 2973.88, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 7583889, "system.network.recv": 5160633, "_wandb": true, "_timestamp": 1579510433, "_runtime": 1839}
-+{"system.gpu.0.gpu": 90.2, "system.gpu.0.memory": 54.53, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 64.21, "system.gpu.0.powerPercent": 91.73, "system.cpu": 38.73, "system.memory": 24.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11302.88, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 8007990, "system.network.recv": 5441264, "_wandb": true, "_timestamp": 1579510463, "_runtime": 1869}
-+{"system.gpu.0.gpu": 90.0, "system.gpu.0.memory": 54.53, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 66.28, "system.gpu.0.powerPercent": 94.68, "system.cpu": 38.74, "system.memory": 24.85, "system.disk": 22.4, "system.proc.memory.availableMB": 11303.79, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 8435309, "system.network.recv": 5727107, "_wandb": true, "_timestamp": 1579510493, "_runtime": 1899}
-+{"system.gpu.0.gpu": 89.6, "system.gpu.0.memory": 54.13, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 72.25, "system.gpu.0.powerPercent": 103.21, "system.cpu": 38.62, "system.memory": 24.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11303.35, "system.proc.memory.rssMB": 2973.88, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 8858885, "system.network.recv": 6006566, "_wandb": true, "_timestamp": 1579510523, "_runtime": 1929}
-+{"system.gpu.0.gpu": 86.67, "system.gpu.0.memory": 55.73, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 63.91, "system.gpu.0.powerPercent": 91.29, "system.cpu": 90.41, "system.memory": 23.54, "system.disk": 22.4, "system.proc.memory.availableMB": 11503.78, "system.proc.memory.rssMB": 2965.76, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 26.8, "system.network.sent": 8947611, "system.network.recv": 6062379, "_wandb": true, "_timestamp": 1579510554, "_runtime": 1959}
-+{"system.gpu.0.gpu": 86.07, "system.gpu.0.memory": 56.47, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 69.9, "system.gpu.0.powerPercent": 99.85, "system.cpu": 99.89, "system.memory": 23.77, "system.disk": 22.4, "system.proc.memory.availableMB": 11469.72, "system.proc.memory.rssMB": 2965.75, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 27.0, "system.network.sent": 8953536, "system.network.recv": 6079245, "_wandb": true, "_timestamp": 1579510584, "_runtime": 1990}
-+{"system.gpu.0.gpu": 78.33, "system.gpu.0.memory": 46.93, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.07, "system.gpu.0.powerWatts": 68.12, "system.gpu.0.powerPercent": 97.31, "system.cpu": 93.19, "system.memory": 24.17, "system.disk": 22.4, "system.proc.memory.availableMB": 11408.62, "system.proc.memory.rssMB": 2965.56, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 27.07, "system.network.sent": 9026902, "system.network.recv": 6145986, "_wandb": true, "_timestamp": 1579510614, "_runtime": 2020}
-+{"system.gpu.0.gpu": 89.53, "system.gpu.0.memory": 54.13, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 66.09, "system.gpu.0.powerPercent": 94.42, "system.cpu": 38.67, "system.memory": 23.71, "system.disk": 22.4, "system.proc.memory.availableMB": 11476.13, "system.proc.memory.rssMB": 2973.94, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 9596877, "system.network.recv": 6501867, "_wandb": true, "_timestamp": 1579510644, "_runtime": 2050}
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-index 6941a0a..f338a22 100644
---- a/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-@@ -1 +1,7 @@
--{"gradients/classifier.bias": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.0654682070016861, -0.06339701265096664, -0.06132581830024719, -0.05925462394952774, -0.05718342587351799, -0.05511223152279854, -0.053041037172079086, -0.050969842821359634, -0.048898644745349884, -0.04682745039463043, -0.04475625604391098, -0.04268506169319153, -0.040613867342472076, -0.038542672991752625, -0.03647147864103317, -0.03440028056502342, -0.03232908621430397, -0.03025789186358452, -0.028186697512865067, -0.026115499436855316, -0.024044305086135864, -0.021973110735416412, -0.01990191638469696, -0.01783072203397751, -0.015759527683258057, -0.013688329607248306, -0.011617135256528854, -0.009545940905809402, -0.0074747465550899506, -0.005403552204370499, -0.0033323541283607483, -0.0012611597776412964, 0.0008100345730781555, 0.0028812289237976074, 0.004952423274517059, 0.007023617625236511, 0.009094811975955963, 0.011166006326675415, 0.013237208127975464, 0.015308402478694916, 0.017379596829414368, 0.01945079118013382, 0.02152198553085327, 0.023593179881572723, 0.025664374232292175, 0.027735568583011627, 0.02980676293373108, 0.03187795728445053, 0.03394915163516998, 0.03602035343647003, 0.038091547787189484, 0.040162742137908936, 0.04223393648862839, 0.04430513083934784, 0.04637632519006729, 0.04844751954078674, 0.050518713891506195, 0.05258990824222565, 0.0546611025929451, 0.05673230439424515, 0.0588034987449646, 0.060874685645103455, 0.0629458874464035, 0.06501707434654236, 0.06708827614784241]}, "gradients/classifier.weight": {"_type": "histogram", "values": [1.0, 1.0, 1.0, 0.0, 3.0, 1.0, 5.0, 2.0, 4.0, 10.0, 9.0, 17.0, 15.0, 21.0, 30.0, 49.0, 53.0, 61.0, 86.0, 96.0, 118.0, 155.0, 170.0, 210.0, 214.0, 249.0, 229.0, 254.0, 272.0, 299.0, 314.0, 295.0, 344.0, 291.0, 277.0, 262.0, 259.0, 239.0, 186.0, 184.0, 169.0, 136.0, 111.0, 97.0, 83.0, 60.0, 47.0, 38.0, 19.0, 23.0, 20.0, 13.0, 17.0, 7.0, 8.0, 4.0, 1.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.09012244641780853, -0.08724749088287354, -0.08437253534793854, -0.08149757981300354, -0.07862262427806854, -0.07574766874313354, -0.07287271320819855, -0.06999775767326355, -0.06712280213832855, -0.06424784660339355, -0.06137289106845856, -0.05849793553352356, -0.05562297999858856, -0.052748024463653564, -0.04987306892871857, -0.04699811339378357, -0.04412315785884857, -0.041248202323913574, -0.03837324678897858, -0.03549829125404358, -0.03262333571910858, -0.029748380184173584, -0.026873424649238586, -0.02399846911430359, -0.02112351357936859, -0.018248558044433594, -0.015373602509498596, -0.012498646974563599, -0.009623691439628601, -0.0067487359046936035, -0.003873780369758606, -0.0009988248348236084, 0.0018761307001113892, 0.004751086235046387, 0.007626041769981384, 0.010500997304916382, 0.01337595283985138, 0.016250908374786377, 0.019125863909721375, 0.022000819444656372, 0.02487577497959137, 0.027750730514526367, 0.030625686049461365, 0.03350064158439636, 0.03637559711933136, 0.03925055265426636, 0.042125508189201355, 0.04500046372413635, 0.04787541925907135, 0.05075037479400635, 0.053625330328941345, 0.05650028586387634, 0.05937524139881134, 0.06225019693374634, 0.06512515246868134, 0.06800010800361633, 0.07087506353855133, 0.07375001907348633, 0.07662497460842133, 0.07949993014335632, 0.08237488567829132, 0.08524984121322632, 0.08812479674816132, 0.09099975228309631, 0.09387470781803131]}, "val_acc": 0.23687943262411348, "train_acc": 0.25812953441384673, "_runtime": 814.0969541072845, "_timestamp": 1579509224.6157851, "_step": 0}
-+{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.0654682070016861,-0.06339701265096664,-0.06132581830024719,-0.05925462394952774,-0.05718342587351799,-0.05511223152279854,-0.053041037172079086,-0.050969842821359634,-0.048898644745349884,-0.04682745039463043,-0.04475625604391098,-0.04268506169319153,-0.040613867342472076,-0.038542672991752625,-0.03647147864103317,-0.03440028056502342,-0.03232908621430397,-0.03025789186358452,-0.028186697512865067,-0.026115499436855316,-0.024044305086135864,-0.021973110735416412,-0.01990191638469696,-0.01783072203397751,-0.015759527683258057,-0.013688329607248306,-0.011617135256528854,-0.009545940905809402,-0.0074747465550899506,-0.005403552204370499,-0.0033323541283607483,-0.0012611597776412964,0.0008100345730781555,0.0028812289237976074,0.004952423274517059,0.007023617625236511,0.009094811975955963,0.011166006326675415,0.013237208127975464,0.015308402478694916,0.017379596829414368,0.01945079118013382,0.02152198553085327,0.023593179881572723,0.025664374232292175,0.027735568583011627,0.02980676293373108,0.03187795728445053,0.03394915163516998,0.03602035343647003,0.038091547787189484,0.040162742137908936,0.04223393648862839,0.04430513083934784,0.04637632519006729,0.04844751954078674,0.050518713891506195,0.05258990824222565,0.0546611025929451,0.05673230439424515,0.0588034987449646,0.060874685645103455,0.0629458874464035,0.06501707434654236,0.06708827614784241]},"gradients/classifier.weight":{"bins":[-0.09012244641780853,-0.08724749088287354,-0.08437253534793854,-0.08149757981300354,-0.07862262427806854,-0.07574766874313354,-0.07287271320819855,-0.06999775767326355,-0.06712280213832855,-0.06424784660339355,-0.06137289106845856,-0.05849793553352356,-0.05562297999858856,-0.052748024463653564,-0.04987306892871857,-0.04699811339378357,-0.04412315785884857,-0.041248202323913574,-0.03837324678897858,-0.03549829125404358,-0.03262333571910858,-0.029748380184173584,-0.026873424649238586,-0.02399846911430359,-0.02112351357936859,-0.018248558044433594,-0.015373602509498596,-0.012498646974563599,-0.009623691439628601,-0.0067487359046936035,-0.003873780369758606,-0.0009988248348236084,0.0018761307001113892,0.004751086235046387,0.007626041769981384,0.010500997304916382,0.01337595283985138,0.016250908374786377,0.019125863909721375,0.022000819444656372,0.02487577497959137,0.027750730514526367,0.030625686049461365,0.03350064158439636,0.03637559711933136,0.03925055265426636,0.042125508189201355,0.04500046372413635,0.04787541925907135,0.05075037479400635,0.053625330328941345,0.05650028586387634,0.05937524139881134,0.06225019693374634,0.06512515246868134,0.06800010800361633,0.07087506353855133,0.07375001907348633,0.07662497460842133,0.07949993014335632,0.08237488567829132,0.08524984121322632,0.08812479674816132,0.09099975228309631,0.09387470781803131],"_type":"histogram","values":[1,1,1,0,3,1,5,2,4,10,9,17,15,21,30,49,53,61,86,96,118,155,170,210,214,249,229,254,272,299,314,295,344,291,277,262,259,239,186,184,169,136,111,97,83,60,47,38,19,23,20,13,17,7,8,4,1,2,2,0,0,0,0,1]},"_step":0,"val_acc":0.23687943262411348,"train_acc":0.25812953441384673,"_runtime":814.0969541072845,"_timestamp":1.5795092246157851e+09}
-+{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1],"bins":[-0.07717597484588623,-0.07544030994176865,-0.07370464503765106,-0.07196898013353348,-0.0702333152294159,-0.06849765032529831,-0.06676198542118073,-0.06502632051706314,-0.06329065561294556,-0.06155499070882797,-0.05981932580471039,-0.058083660900592804,-0.05634799599647522,-0.054612331092357635,-0.05287666618824005,-0.05114100128412247,-0.04940533638000488,-0.0476696714758873,-0.045934006571769714,-0.04419834539294243,-0.042462680488824844,-0.04072701558470726,-0.038991350680589676,-0.03725568577647209,-0.03552002087235451,-0.03378435596823692,-0.03204869106411934,-0.030313026160001755,-0.02857736125588417,-0.026841696351766586,-0.025106031447649002,-0.023370366543531418,-0.021634701639413834,-0.01989903673529625,-0.018163371831178665,-0.01642770692706108,-0.014692042022943497,-0.012956380844116211,-0.011220715939998627,-0.009485051035881042,-0.007749386131763458,-0.006013721227645874,-0.00427805632352829,-0.0025423914194107056,-0.0008067265152931213,0.0009289383888244629,0.002664603292942047,0.004400268197059631,0.006135933101177216,0.0078715980052948,0.009607262909412384,0.011342927813529968,0.013078592717647552,0.014814257621765137,0.01654992252588272,0.018285587430000305,0.02002125233411789,0.021756917238235474,0.023492582142353058,0.025228247046470642,0.026963911950588226,0.02869957685470581,0.030435241758823395,0.03217090666294098,0.03390657156705856]},"gradients/classifier.weight":{"_type":"histogram","values":[1,0,1,0,1,1,3,1,1,2,4,9,11,17,27,29,40,36,67,86,99,128,150,186,242,222,248,298,311,327,349,317,357,337,321,308,284,232,208,178,153,140,97,76,67,43,32,35,19,16,10,6,2,2,3,3,0,0,0,0,0,0,0,1],"bins":[-0.10413810610771179,-0.10082836449146271,-0.09751862287521362,-0.09420888125896454,-0.09089913964271545,-0.08758939802646637,-0.08427965641021729,-0.0809699147939682,-0.07766017317771912,-0.07435043156147003,-0.07104068994522095,-0.06773094832897186,-0.06442121416330338,-0.06111147254705429,-0.057801730930805206,-0.05449198931455612,-0.05118224769830704,-0.04787250608205795,-0.04456276446580887,-0.041253022849559784,-0.0379432812333107,-0.034633539617061615,-0.03132379800081253,-0.028014056384563446,-0.02470432221889496,-0.021394580602645874,-0.01808483898639679,-0.014775097370147705,-0.01146535575389862,-0.008155614137649536,-0.004845872521400452,-0.0015361309051513672,0.0017736107110977173,0.005083352327346802,0.008393093943595886,0.01170283555984497,0.015012577176094055,0.01832231879234314,0.021632060408592224,0.02494180202484131,0.028251543641090393,0.03156128525733948,0.03487102687358856,0.038180768489837646,0.04149051010608673,0.044800251722335815,0.0481099933385849,0.051419734954833984,0.054729461669921875,0.05803920328617096,0.061348944902420044,0.06465868651866913,0.06796842813491821,0.0712781697511673,0.07458791136741638,0.07789765298366547,0.08120739459991455,0.08451713621616364,0.08782687783241272,0.0911366194486618,0.09444636106491089,0.09775610268115997,0.10106584429740906,0.10437558591365814,0.10768532752990723]},"_step":1,"val_acc":0.25011820330969264,"train_acc":0.258383926343752,"_runtime":974.3342196941376,"_timestamp":1.5795093848530507e+09}
-+{"gradients/classifier.bias":{"values":[1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.006489427760243416,-0.006147412117570639,-0.005805396940559149,-0.005463381297886372,-0.0051213656552135944,-0.004779350012540817,-0.004437334835529327,-0.00409531919285655,-0.0037533037830144167,-0.003411288373172283,-0.003069272730499506,-0.0027272573206573725,-0.002385241910815239,-0.0020432262681424618,-0.0017012106254696846,-0.0013591954484581947,-0.0010171798057854176,-0.0006751641631126404,-0.0003331489861011505,8.866656571626663e-06,0.00035088229924440384,0.0006928974762558937,0.0010349131189286709,0.001376928761601448,0.001718943938612938,0.0020609600469470024,0.0024029752239584923,0.002744990400969982,0.0030870065093040466,0.0034290216863155365,0.0037710368633270264,0.004113052971661091,0.004455068148672581,0.004797083325684071,0.005139099434018135,0.005481114611029625,0.005823129788041115,0.006165145896375179,0.006507161073386669,0.006849176250398159,0.0071911923587322235,0.007533207535743713,0.007875222712755203,0.008217238821089268,0.008559253998100758,0.008901269175112247,0.009243285283446312,0.009585300460457802,0.009927315637469292,0.010269330814480782,0.01061134785413742,0.01095336303114891,0.0112953782081604,0.01163739338517189,0.01197940856218338,0.01232142373919487,0.012663440778851509,0.013005455955862999,0.013347471132874489,0.013689486309885979,0.014031501486897469,0.014373516663908958,0.014715533703565598,0.015057548880577087,0.015399564057588577],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.07622425258159637,-0.07385586947202682,-0.07148748636245728,-0.06911909580230713,-0.06675071269273758,-0.06438232958316803,-0.06201394647359848,-0.05964556336402893,-0.05727717652916908,-0.054908789694309235,-0.052540406584739685,-0.050172023475170135,-0.047803640365600586,-0.04543525353074074,-0.04306687042117119,-0.04069848358631134,-0.03833010047674179,-0.03596171736717224,-0.03359333053231239,-0.031224947422742844,-0.028856560587882996,-0.026488177478313446,-0.024119794368743896,-0.02175140753388405,-0.0193830244243145,-0.01701464131474495,-0.014646254479885101,-0.012277871370315552,-0.009909488260746002,-0.007541105151176453,-0.005172714591026306,-0.0028043314814567566,-0.00043594837188720703,0.0019324347376823425,0.004300817847251892,0.006669208407402039,0.009037591516971588,0.011405974626541138,0.013774357736110687,0.016142740845680237,0.018511131405830383,0.020879514515399933,0.023247897624969482,0.025616280734539032,0.02798466384410858,0.03035304695367813,0.03272143751382828,0.03508982062339783,0.03745820373296738,0.039826586842536926,0.042194969952106476,0.04456336051225662,0.04693174362182617,0.049300119280815125,0.05166850984096527,0.05403690040111542,0.05640527606010437,0.05877366662025452,0.06114204227924347,0.06351043283939362,0.06587882339954376,0.06824719905853271,0.07061558961868286,0.07298396527767181,0.07535235583782196],"_type":"histogram","values":[1,2,2,4,0,3,3,1,11,7,15,14,23,25,27,43,59,66,75,106,101,128,148,168,174,206,231,240,275,266,300,299,271,298,285,266,270,214,209,214,192,142,152,94,103,94,63,48,43,36,29,22,19,17,12,8,5,3,1,6,3,1,0,1]},"_step":2,"val_acc":0.24964539007092199,"train_acc":0.2603407873430231,"_runtime":1133.4028816223145,"_timestamp":1.5795095439217126e+09}
-+{"gradients/classifier.bias":{"values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.06606416404247284,-0.06390783190727234,-0.06175149977207184,-0.05959516763687134,-0.05743883550167084,-0.05528250336647034,-0.053126171231269836,-0.050969839096069336,-0.048813506960868835,-0.046657174825668335,-0.044500842690467834,-0.042344510555267334,-0.040188178420066833,-0.03803184628486633,-0.03587551414966583,-0.03371918201446533,-0.03156284987926483,-0.02940651774406433,-0.02725018560886383,-0.02509385347366333,-0.02293752133846283,-0.02078118920326233,-0.01862485706806183,-0.016468524932861328,-0.014312192797660828,-0.012155860662460327,-0.009999528527259827,-0.007843196392059326,-0.005686864256858826,-0.003530532121658325,-0.0013741999864578247,0.0007821321487426758,0.0029384642839431763,0.005094796419143677,0.007251128554344177,0.009407460689544678,0.011563792824745178,0.013720124959945679,0.01587645709514618,0.01803278923034668,0.02018912136554718,0.02234545350074768,0.02450178563594818,0.02665811777114868,0.028814449906349182,0.030970782041549683,0.03312711417675018,0.035283446311950684,0.037439778447151184,0.039596110582351685,0.041752442717552185,0.043908774852752686,0.046065106987953186,0.048221439123153687,0.05037777125835419,0.05253410339355469,0.05469043552875519,0.05684676766395569,0.05900309979915619,0.06115943193435669,0.06331576406955719,0.06547209620475769,0.06762842833995819,0.06978476047515869,0.07194109261035919],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.09906706213951111,-0.09581608325242996,-0.09256510436534882,-0.08931412547826767,-0.08606314659118652,-0.08281217515468597,-0.07956118881702423,-0.07631021738052368,-0.07305923849344254,-0.06980825960636139,-0.06655728071928024,-0.0633063018321991,-0.06005532294511795,-0.056804344058036804,-0.053553368896245956,-0.05030239000916481,-0.047051411122083664,-0.04380043223500252,-0.04054945334792137,-0.037298478186130524,-0.03404749929904938,-0.03079652041196823,-0.027545541524887085,-0.02429456263780594,-0.021043583750724792,-0.017792604863643646,-0.0145416259765625,-0.01129065454006195,-0.008039675652980804,-0.004788696765899658,-0.001537717878818512,0.0017132610082626343,0.0049642398953437805,0.008215218782424927,0.011466197669506073,0.01471717655658722,0.017968155443668365,0.02121913433074951,0.02447010576725006,0.027721092104911804,0.030972063541412354,0.0342230498790741,0.037474021315574646,0.040724992752075195,0.04397597908973694,0.04722695052623749,0.05047793686389923,0.05372890830039978,0.05697989463806152,0.06023086607456207,0.06348185241222382,0.06673282384872437,0.06998381018638611,0.07323478162288666,0.07648575305938721,0.07973673939704895,0.0829877108335495,0.08623869717121124,0.08948966860771179,0.09274065494537354,0.09599162638187408,0.09924261271953583,0.10249358415603638,0.10574457049369812,0.10899554193019867],"_type":"histogram","values":[1,0,0,0,2,2,0,4,3,6,10,11,14,22,31,43,53,58,86,101,112,160,183,225,221,275,317,314,310,329,323,356,343,312,332,263,237,192,175,162,123,83,77,78,50,43,29,27,12,11,6,5,4,3,0,0,1,0,0,1,1,0,1,1]},"_step":3,"val_acc":0.26222222222222225,"train_acc":0.2627868635921119,"_runtime":1291.7072627544403,"_timestamp":1.5795097022260938e+09}
-+{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.037257447838783264,-0.035971060395240784,-0.034684669226408005,-0.033398281782865524,-0.032111890614032745,-0.030825503170490265,-0.029539113864302635,-0.028252724558115005,-0.026966335251927376,-0.025679945945739746,-0.024393556639552116,-0.023107167333364487,-0.021820779889822006,-0.020534390583634377,-0.019248001277446747,-0.017961611971259117,-0.016675222665071487,-0.015388833358883858,-0.014102444052696228,-0.012816054746508598,-0.011529665440320969,-0.010243277996778488,-0.008956888690590858,-0.007670499384403229,-0.006384110078215599,-0.005097720772027969,-0.003811333328485489,-0.00252494215965271,-0.0012385547161102295,4.783645272254944e-05,0.00133422389626503,0.002620615065097809,0.003907002508640289,0.00519338995218277,0.006479781121015549,0.007766168564558029,0.009052559733390808,0.010338947176933289,0.011625338345766068,0.012911725789308548,0.014198116958141327,0.015484504401683807,0.016770891845226288,0.018057283014059067,0.019343670457601547,0.020630061626434326,0.021916449069976807,0.023202840238809586,0.024489227682352066,0.025775618851184845,0.027062006294727325,0.028348393738269806,0.029634781181812286,0.030921176075935364,0.032207563519477844,0.033493950963020325,0.034780338406562805,0.036066725850105286,0.03735312074422836,0.038639508187770844,0.039925895631313324,0.041212283074855804,0.04249867796897888,0.04378506541252136,0.04507145285606384]},"gradients/classifier.weight":{"bins":[-0.0888357013463974,-0.08612215518951416,-0.08340860903263092,-0.08069506287574768,-0.07798151671886444,-0.0752679631114006,-0.07255441695451736,-0.06984087079763412,-0.06712732464075089,-0.06441377848386765,-0.061700232326984406,-0.05898668244481087,-0.05627313628792763,-0.05355959013104439,-0.05084604024887085,-0.04813249409198761,-0.04541894793510437,-0.04270540177822113,-0.03999185562133789,-0.03727830573916435,-0.03456475958228111,-0.03185121342539787,-0.029137663543224335,-0.026424117386341095,-0.023710571229457855,-0.020997025072574615,-0.018283478915691376,-0.015569932758808136,-0.0128563791513443,-0.01014283299446106,-0.00742928683757782,-0.00471574068069458,-0.0020021945238113403,0.0007113516330718994,0.003424897789955139,0.006138443946838379,0.008851990103721619,0.011565543711185455,0.014279089868068695,0.016992636024951935,0.019706182181835175,0.022419728338718414,0.025133274495601654,0.027846820652484894,0.03056037425994873,0.03327392041683197,0.03598746657371521,0.03870101273059845,0.04141455888748169,0.04412810504436493,0.04684165120124817,0.04955519735813141,0.05226874351501465,0.05498228967189789,0.05769583582878113,0.06040938198566437,0.0631229430437088,0.06583648920059204,0.06855003535747528,0.07126358151435852,0.07397712767124176,0.076690673828125,0.07940421998500824,0.08211776614189148,0.08483131229877472],"_type":"histogram","values":[1,0,0,0,2,0,1,0,10,6,9,13,11,18,18,29,47,58,58,70,96,103,104,181,183,180,232,264,280,262,304,320,289,307,281,323,255,289,218,224,185,155,132,132,118,76,65,59,48,22,30,26,17,9,5,3,4,2,3,3,1,2,0,1]},"_step":4,"val_acc":0.262789598108747,"train_acc":0.2653650279586515,"_runtime":1448.6882483959198,"_timestamp":1.5795098592070794e+09}
-+{"val_acc": 0.6363120567375886, "train_acc": 0.5801701490638866, "_runtime": 1825.7496349811554, "_timestamp": 1579510238.3097415, "_step": 5}
-+{"val_acc": 0.6672340425531915, "train_acc": 0.6266651664065672, "_runtime": 2201.1860706806183, "_timestamp": 1579510613.7461772, "_step": 6}
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json b/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-index 3724adb..351938b 100644
---- a/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-@@ -3,10 +3,10 @@
-     "program": "<python with no main file>",
-     "git": {
-         "remote": "https://github.com/ubamba98/droughtwatch",
--        "commit": "fea1daedb6b14125e1dec2c49a5e3b211d016f90"
-+        "commit": "4e7b9b38b8d5d3ec44d43373b8e263f50ead87a3"
-     },
-     "email": "ubamba98@gmail.com",
--    "startedAt": "2020-01-20T08:23:13.672686",
-+    "startedAt": "2020-01-20T08:44:21.248355",
-     "host": "ccw-iclr",
-     "username": "ubamba98",
-     "executable": "/home/ubamba98/anaconda3/bin/python",
-@@ -25,5 +25,5 @@
-     "mode": "run",
-     "name": "efficentnet-b3-765",
-     "project": "droughtwatch",
--    "heartbeatAt": "2020-01-20T08:36:16.324952"
-+    "heartbeatAt": "2020-01-20T08:57:27.146640"
- }
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-summary.json b/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-index 05e4af4..8c87848 100644
---- a/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-@@ -1 +1 @@
--{"graph_0": {"_type": "graph", "format": "torch", "nodes": [{"name": "conv_stem", "id": 140438557381128, "class_name": "Conv2dSame(3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False)", "parameters": [["weight", [40, 3, 3, 3]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [1080]}, {"name": "bn1", "id": 140438557383704, "class_name": "BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [40]], ["bias", [40]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [40, 40]}, {"name": "blocks.0.0", "id": 140438557382920, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)\n  (bn1): BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [40, 1, 3, 3]], ["bn1.weight", [40]], ["bn1.bias", [40]], ["se.conv_reduce.weight", [10, 40, 1, 1]], ["se.conv_reduce.bias", [10]], ["se.conv_expand.weight", [40, 10, 1, 1]], ["se.conv_expand.bias", [40]], ["conv_pw.weight", [24, 40, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [360, 40, 40, 400, 10, 400, 40, 960, 24, 24]}, {"name": "blocks.0.1", "id": 140438680665224, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)\n  (bn1): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [24, 1, 3, 3]], ["bn1.weight", [24]], ["bn1.bias", [24]], ["se.conv_reduce.weight", [6, 24, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [24, 6, 1, 1]], ["se.conv_expand.bias", [24]], ["conv_pw.weight", [24, 24, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [216, 24, 24, 144, 6, 144, 24, 576, 24, 24]}, {"name": "blocks.1.0", "id": 140438676598736, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(144, 144, kernel_size=(3, 3), stride=(2, 2), groups=144, bias=False)\n  (bn2): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [144, 24, 1, 1]], ["bn1.weight", [144]], ["bn1.bias", [144]], ["conv_dw.weight", [144, 1, 3, 3]], ["bn2.weight", [144]], ["bn2.bias", [144]], ["se.conv_reduce.weight", [6, 144, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [144, 6, 1, 1]], ["se.conv_expand.bias", [144]], ["conv_pwl.weight", [32, 144, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 4608, 32, 32]}, {"name": "blocks.1.1", "id": 140438557424160, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.1.2", "id": 140438679559640, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.2.0", "id": 140438679470320, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(192, 192, kernel_size=(5, 5), stride=(2, 2), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 5, 5]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [48, 192, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [6144, 192, 192, 4800, 192, 192, 1536, 8, 1536, 192, 9216, 48, 48]}, {"name": "blocks.2.1", "id": 140438557424384, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.2.2", "id": 140438557422704, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.3.0", "id": 140438557421920, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(288, 288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 3, 3]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [96, 288, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [13824, 288, 288, 2592, 288, 288, 3456, 12, 3456, 288, 27648, 96, 96]}, {"name": "blocks.3.1", "id": 140438557422816, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.2", "id": 140438557824392, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.3", "id": 140438557825232, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.4", "id": 140438557825176, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.4.0", "id": 140438557824672, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 5, 5]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [136, 576, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [55296, 576, 576, 14400, 576, 576, 13824, 24, 13824, 576, 78336, 136, 136]}, {"name": "blocks.4.1", "id": 140438557823496, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.2", "id": 140438679158968, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.3", "id": 140438679496744, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.4", "id": 140438679422456, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.5.0", "id": 140438679421448, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(816, 816, kernel_size=(5, 5), stride=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [232, 816, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 189312, 232, 232]}, {"name": "blocks.5.1", "id": 140438679580400, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.2", "id": 140438679115088, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.3", "id": 140438676984832, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.4", "id": 140440670709296, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.5", "id": 140440670710192, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.6.0", "id": 140440670709464, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 3, 3]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [384, 1392, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [322944, 1392, 1392, 12528, 1392, 1392, 80736, 58, 80736, 1392, 534528, 384, 384]}, {"name": "blocks.6.1", "id": 140438679947864, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(384, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)\n  (bn2): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(2304, 96, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(96, 2304, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(2304, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [2304, 384, 1, 1]], ["bn1.weight", [2304]], ["bn1.bias", [2304]], ["conv_dw.weight", [2304, 1, 3, 3]], ["bn2.weight", [2304]], ["bn2.bias", [2304]], ["se.conv_reduce.weight", [96, 2304, 1, 1]], ["se.conv_reduce.bias", [96]], ["se.conv_expand.weight", [2304, 96, 1, 1]], ["se.conv_expand.bias", [2304]], ["conv_pwl.weight", [384, 2304, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [884736, 2304, 2304, 20736, 2304, 2304, 221184, 96, 221184, 2304, 884736, 384, 384]}, {"name": "conv_head", "id": 140438557382584, "class_name": "Conv2d(384, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)", "parameters": [["weight", [1536, 384, 1, 1]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [589824]}, {"name": "bn2", "id": 140438703610848, "class_name": "BatchNorm2d(1536, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [1536]], ["bias", [1536]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [1536, 1536]}, {"name": "global_pool", "id": 140438703610792, "class_name": "SelectAdaptivePool2d (output_size=1, pool_type=avg)", "parameters": [], "output_shape": [[256, 1536, 1, 1]], "num_parameters": []}, {"name": "classifier", "id": 140438679885696, "class_name": "Linear(in_features=1536, out_features=4, bias=True)", "parameters": [["weight", [4, 1536]], ["bias", [4]]], "output_shape": [[256, 4]], "num_parameters": [6144, 4]}], "edges": []}, "train_acc": 0.25812953441384673, "_step": 0, "gradients/classifier.weight": {"_type": "histogram", "values": [1.0, 1.0, 1.0, 0.0, 3.0, 1.0, 5.0, 2.0, 4.0, 10.0, 9.0, 17.0, 15.0, 21.0, 30.0, 49.0, 53.0, 61.0, 86.0, 96.0, 118.0, 155.0, 170.0, 210.0, 214.0, 249.0, 229.0, 254.0, 272.0, 299.0, 314.0, 295.0, 344.0, 291.0, 277.0, 262.0, 259.0, 239.0, 186.0, 184.0, 169.0, 136.0, 111.0, 97.0, 83.0, 60.0, 47.0, 38.0, 19.0, 23.0, 20.0, 13.0, 17.0, 7.0, 8.0, 4.0, 1.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.09012244641780853, -0.08724749088287354, -0.08437253534793854, -0.08149757981300354, -0.07862262427806854, -0.07574766874313354, -0.07287271320819855, -0.06999775767326355, -0.06712280213832855, -0.06424784660339355, -0.06137289106845856, -0.05849793553352356, -0.05562297999858856, -0.052748024463653564, -0.04987306892871857, -0.04699811339378357, -0.04412315785884857, -0.041248202323913574, -0.03837324678897858, -0.03549829125404358, -0.03262333571910858, -0.029748380184173584, -0.026873424649238586, -0.02399846911430359, -0.02112351357936859, -0.018248558044433594, -0.015373602509498596, -0.012498646974563599, -0.009623691439628601, -0.0067487359046936035, -0.003873780369758606, -0.0009988248348236084, 0.0018761307001113892, 0.004751086235046387, 0.007626041769981384, 0.010500997304916382, 0.01337595283985138, 0.016250908374786377, 0.019125863909721375, 0.022000819444656372, 0.02487577497959137, 0.027750730514526367, 0.030625686049461365, 0.03350064158439636, 0.03637559711933136, 0.03925055265426636, 0.042125508189201355, 0.04500046372413635, 0.04787541925907135, 0.05075037479400635, 0.053625330328941345, 0.05650028586387634, 0.05937524139881134, 0.06225019693374634, 0.06512515246868134, 0.06800010800361633, 0.07087506353855133, 0.07375001907348633, 0.07662497460842133, 0.07949993014335632, 0.08237488567829132, 0.08524984121322632, 0.08812479674816132, 0.09099975228309631, 0.09387470781803131]}, "gradients/classifier.bias": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.0654682070016861, -0.06339701265096664, -0.06132581830024719, -0.05925462394952774, -0.05718342587351799, -0.05511223152279854, -0.053041037172079086, -0.050969842821359634, -0.048898644745349884, -0.04682745039463043, -0.04475625604391098, -0.04268506169319153, -0.040613867342472076, -0.038542672991752625, -0.03647147864103317, -0.03440028056502342, -0.03232908621430397, -0.03025789186358452, -0.028186697512865067, -0.026115499436855316, -0.024044305086135864, -0.021973110735416412, -0.01990191638469696, -0.01783072203397751, -0.015759527683258057, -0.013688329607248306, -0.011617135256528854, -0.009545940905809402, -0.0074747465550899506, -0.005403552204370499, -0.0033323541283607483, -0.0012611597776412964, 0.0008100345730781555, 0.0028812289237976074, 0.004952423274517059, 0.007023617625236511, 0.009094811975955963, 0.011166006326675415, 0.013237208127975464, 0.015308402478694916, 0.017379596829414368, 0.01945079118013382, 0.02152198553085327, 0.023593179881572723, 0.025664374232292175, 0.027735568583011627, 0.02980676293373108, 0.03187795728445053, 0.03394915163516998, 0.03602035343647003, 0.038091547787189484, 0.040162742137908936, 0.04223393648862839, 0.04430513083934784, 0.04637632519006729, 0.04844751954078674, 0.050518713891506195, 0.05258990824222565, 0.0546611025929451, 0.05673230439424515, 0.0588034987449646, 0.060874685645103455, 0.0629458874464035, 0.06501707434654236, 0.06708827614784241]}, "val_acc": 0.23687943262411348, "_runtime": 814.0969541072845, "_timestamp": 1579509224.6157851}
-+{"graph_0": {"_type": "graph", "format": "torch", "nodes": [{"name": "conv_stem", "id": 140438557381128, "class_name": "Conv2dSame(3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False)", "parameters": [["weight", [40, 3, 3, 3]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [1080]}, {"name": "bn1", "id": 140438557383704, "class_name": "BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [40]], ["bias", [40]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [40, 40]}, {"name": "blocks.0.0", "id": 140438557382920, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)\n  (bn1): BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [40, 1, 3, 3]], ["bn1.weight", [40]], ["bn1.bias", [40]], ["se.conv_reduce.weight", [10, 40, 1, 1]], ["se.conv_reduce.bias", [10]], ["se.conv_expand.weight", [40, 10, 1, 1]], ["se.conv_expand.bias", [40]], ["conv_pw.weight", [24, 40, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [360, 40, 40, 400, 10, 400, 40, 960, 24, 24]}, {"name": "blocks.0.1", "id": 140438680665224, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)\n  (bn1): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [24, 1, 3, 3]], ["bn1.weight", [24]], ["bn1.bias", [24]], ["se.conv_reduce.weight", [6, 24, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [24, 6, 1, 1]], ["se.conv_expand.bias", [24]], ["conv_pw.weight", [24, 24, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [216, 24, 24, 144, 6, 144, 24, 576, 24, 24]}, {"name": "blocks.1.0", "id": 140438676598736, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(144, 144, kernel_size=(3, 3), stride=(2, 2), groups=144, bias=False)\n  (bn2): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [144, 24, 1, 1]], ["bn1.weight", [144]], ["bn1.bias", [144]], ["conv_dw.weight", [144, 1, 3, 3]], ["bn2.weight", [144]], ["bn2.bias", [144]], ["se.conv_reduce.weight", [6, 144, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [144, 6, 1, 1]], ["se.conv_expand.bias", [144]], ["conv_pwl.weight", [32, 144, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 4608, 32, 32]}, {"name": "blocks.1.1", "id": 140438557424160, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.1.2", "id": 140438679559640, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.2.0", "id": 140438679470320, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(192, 192, kernel_size=(5, 5), stride=(2, 2), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 5, 5]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [48, 192, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [6144, 192, 192, 4800, 192, 192, 1536, 8, 1536, 192, 9216, 48, 48]}, {"name": "blocks.2.1", "id": 140438557424384, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.2.2", "id": 140438557422704, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.3.0", "id": 140438557421920, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(288, 288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 3, 3]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [96, 288, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [13824, 288, 288, 2592, 288, 288, 3456, 12, 3456, 288, 27648, 96, 96]}, {"name": "blocks.3.1", "id": 140438557422816, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.2", "id": 140438557824392, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.3", "id": 140438557825232, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.4", "id": 140438557825176, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.4.0", "id": 140438557824672, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 5, 5]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [136, 576, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [55296, 576, 576, 14400, 576, 576, 13824, 24, 13824, 576, 78336, 136, 136]}, {"name": "blocks.4.1", "id": 140438557823496, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.2", "id": 140438679158968, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.3", "id": 140438679496744, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.4", "id": 140438679422456, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.5.0", "id": 140438679421448, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(816, 816, kernel_size=(5, 5), stride=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [232, 816, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 189312, 232, 232]}, {"name": "blocks.5.1", "id": 140438679580400, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.2", "id": 140438679115088, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.3", "id": 140438676984832, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.4", "id": 140440670709296, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.5", "id": 140440670710192, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.6.0", "id": 140440670709464, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 3, 3]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [384, 1392, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [322944, 1392, 1392, 12528, 1392, 1392, 80736, 58, 80736, 1392, 534528, 384, 384]}, {"name": "blocks.6.1", "id": 140438679947864, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(384, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)\n  (bn2): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(2304, 96, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(96, 2304, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(2304, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [2304, 384, 1, 1]], ["bn1.weight", [2304]], ["bn1.bias", [2304]], ["conv_dw.weight", [2304, 1, 3, 3]], ["bn2.weight", [2304]], ["bn2.bias", [2304]], ["se.conv_reduce.weight", [96, 2304, 1, 1]], ["se.conv_reduce.bias", [96]], ["se.conv_expand.weight", [2304, 96, 1, 1]], ["se.conv_expand.bias", [2304]], ["conv_pwl.weight", [384, 2304, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [884736, 2304, 2304, 20736, 2304, 2304, 221184, 96, 221184, 2304, 884736, 384, 384]}, {"name": "conv_head", "id": 140438557382584, "class_name": "Conv2d(384, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)", "parameters": [["weight", [1536, 384, 1, 1]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [589824]}, {"name": "bn2", "id": 140438703610848, "class_name": "BatchNorm2d(1536, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [1536]], ["bias", [1536]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [1536, 1536]}, {"name": "global_pool", "id": 140438703610792, "class_name": "SelectAdaptivePool2d (output_size=1, pool_type=avg)", "parameters": [], "output_shape": [[256, 1536, 1, 1]], "num_parameters": []}, {"name": "classifier", "id": 140438679885696, "class_name": "Linear(in_features=1536, out_features=4, bias=True)", "parameters": [["weight", [4, 1536]], ["bias", [4]]], "output_shape": [[256, 4]], "num_parameters": [6144, 4]}], "edges": []}, "train_acc": 0.2653650279586515, "_step": 4, "gradients/classifier.weight": {"bins": [-0.0888357013463974, -0.08612215518951416, -0.08340860903263092, -0.08069506287574768, -0.07798151671886444, -0.0752679631114006, -0.07255441695451736, -0.06984087079763412, -0.06712732464075089, -0.06441377848386765, -0.061700232326984406, -0.05898668244481087, -0.05627313628792763, -0.05355959013104439, -0.05084604024887085, -0.04813249409198761, -0.04541894793510437, -0.04270540177822113, -0.03999185562133789, -0.03727830573916435, -0.03456475958228111, -0.03185121342539787, -0.029137663543224335, -0.026424117386341095, -0.023710571229457855, -0.020997025072574615, -0.018283478915691376, -0.015569932758808136, -0.0128563791513443, -0.01014283299446106, -0.00742928683757782, -0.00471574068069458, -0.0020021945238113403, 0.0007113516330718994, 0.003424897789955139, 0.006138443946838379, 0.008851990103721619, 0.011565543711185455, 0.014279089868068697, 0.016992636024951935, 0.019706182181835175, 0.022419728338718414, 0.025133274495601658, 0.027846820652484897, 0.03056037425994873, 0.03327392041683197, 0.03598746657371521, 0.03870101273059845, 0.04141455888748169, 0.04412810504436493, 0.04684165120124817, 0.04955519735813141, 0.05226874351501465, 0.05498228967189789, 0.05769583582878113, 0.06040938198566437, 0.0631229430437088, 0.06583648920059204, 0.06855003535747528, 0.07126358151435852, 0.07397712767124176, 0.076690673828125, 0.07940421998500824, 0.08211776614189148, 0.08483131229877472], "_type": "histogram", "values": [1, 0, 0, 0, 2, 0, 1, 0, 10, 6, 9, 13, 11, 18, 18, 29, 47, 58, 58, 70, 96, 103, 104, 181, 183, 180, 232, 264, 280, 262, 304, 320, 289, 307, 281, 323, 255, 289, 218, 224, 185, 155, 132, 132, 118, 76, 65, 59, 48, 22, 30, 26, 17, 9, 5, 3, 4, 2, 3, 3, 1, 2, 0, 1]}, "gradients/classifier.bias": {"bins": [-0.037257447838783264, -0.035971060395240784, -0.034684669226408005, -0.033398281782865524, -0.032111890614032745, -0.030825503170490265, -0.029539113864302635, -0.028252724558115005, -0.026966335251927376, -0.025679945945739743, -0.024393556639552116, -0.023107167333364487, -0.02182077988982201, -0.020534390583634377, -0.019248001277446747, -0.017961611971259117, -0.016675222665071487, -0.015388833358883858, -0.014102444052696228, -0.012816054746508598, -0.011529665440320969, -0.010243277996778488, -0.008956888690590858, -0.007670499384403229, -0.006384110078215599, -0.005097720772027969, -0.003811333328485489, -0.00252494215965271, -0.0012385547161102295, 4.783645272254944e-05, 0.00133422389626503, 0.002620615065097809, 0.003907002508640289, 0.00519338995218277, 0.006479781121015549, 0.007766168564558029, 0.009052559733390808, 0.010338947176933289, 0.011625338345766068, 0.012911725789308548, 0.014198116958141329, 0.015484504401683807, 0.016770891845226288, 0.018057283014059067, 0.019343670457601547, 0.02063006162643433, 0.021916449069976807, 0.023202840238809586, 0.024489227682352063, 0.025775618851184845, 0.027062006294727325, 0.02834839373826981, 0.029634781181812286, 0.030921176075935364, 0.032207563519477844, 0.033493950963020325, 0.034780338406562805, 0.036066725850105286, 0.03735312074422836, 0.03863950818777085, 0.03992589563131333, 0.04121228307485581, 0.04249867796897888, 0.04378506541252136, 0.04507145285606384], "_type": "histogram", "values": [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]}, "val_acc": 0.262789598108747, "_runtime": 1448.6882483959198, "_timestamp": 1579509859.2070794}
diff --git a/wandb/run-20200120_085945-17rqrqo6/requirements.txt b/wandb/run-20200120_085945-17rqrqo6/requirements.txt
deleted file mode 100644
index 2143393..0000000
--- a/wandb/run-20200120_085945-17rqrqo6/requirements.txt
+++ /dev/null
@@ -1,267 +0,0 @@
-absl-py==0.9.0
-alabaster==0.7.12
-albumentations==0.4.3
-anaconda-client==1.7.2
-anaconda-navigator==1.9.7
-anaconda-project==0.8.3
-argh==0.26.2
-asn1crypto==1.3.0
-astroid==2.3.3
-astropy==4.0
-atomicwrites==1.3.0
-attrs==19.3.0
-autopep8==1.4.4
-babel==2.8.0
-backcall==0.1.0
-backports.os==0.1.1
-backports.shutil-get-terminal-size==1.0.0
-beautifulsoup4==4.8.2
-bitarray==1.2.0
-bkcharts==0.2
-bleach==3.1.0
-bokeh==1.4.0
-boto==2.49.0
-bottleneck==1.3.1
-cachetools==4.0.0
-catalyst==20.1
-certifi==2019.11.28
-cffi==1.13.2
-chardet==3.0.4
-click==7.0
-cloudpickle==1.2.2
-clyent==1.2.2
-colorama==0.4.3
-conda-build==3.17.8
-conda-package-handling==1.6.0
-conda-verify==3.1.1
-conda==4.8.1
-configparser==4.0.2
-contextlib2==0.6.0.post1
-crc32c==2.0
-cryptography==2.8
-cycler==0.10.0
-cython==0.29.14
-cytoolz==0.10.1
-dask==2.9.1
-decorator==4.4.1
-defusedxml==0.6.0
-diff-match-patch==20181111
-distributed==2.9.1
-docker-pycreds==0.4.0
-docutils==0.15.2
-entrypoints==0.3
-et-xmlfile==1.0.1
-fastcache==1.1.0
-filelock==3.0.12
-flake8==3.7.9
-flask==1.1.1
-fsspec==0.6.2
-future==0.18.2
-gevent==1.4.0
-gitdb2==2.0.6
-gitpython==3.0.5
-glob2==0.7
-gmpy2==2.0.8
-google-auth-oauthlib==0.4.1
-google-auth==1.10.1
-gql==0.2.0
-graphql-core==1.1
-greenlet==0.4.15
-grpcio==1.26.0
-h5py==2.9.0
-heapdict==1.0.1
-html5lib==1.0.1
-hypothesis==4.54.2
-idna==2.8
-imageio==2.6.1
-imagesize==1.2.0
-imgaug==0.2.6
-importlib-metadata==1.3.0
-intervaltree==3.0.2
-ipykernel==5.1.3
-ipython-genutils==0.2.0
-ipython==7.11.1
-ipywidgets==7.5.1
-isort==4.3.21
-itsdangerous==1.1.0
-jdcal==1.4.1
-jedi==0.14.1
-jeepney==0.4.2
-jinja2==2.10.3
-joblib==0.14.1
-json5==0.8.5
-jsonschema==3.2.0
-jupyter-client==5.3.4
-jupyter-console==6.0.0
-jupyter-core==4.6.1
-jupyter==1.0.0
-jupyterlab-server==1.0.6
-jupyterlab==1.2.4
-keyring==20.0.0
-kiwisolver==1.1.0
-lazy-object-proxy==1.4.3
-libarchive-c==2.8
-lief==0.9.0
-llvmlite==0.31.0
-locket==0.2.0
-lxml==4.4.2
-markdown==3.1.1
-markupsafe==1.1.1
-matplotlib==3.1.1
-mccabe==0.6.1
-mistune==0.8.4
-mkl-fft==1.0.15
-mkl-random==1.1.0
-mkl-service==2.3.0
-mock==3.0.5
-more-itertools==8.0.2
-mpmath==1.1.0
-msgpack==0.6.1
-multipledispatch==0.6.0
-navigator-updater==0.2.1
-nbconvert==5.6.1
-nbformat==4.4.0
-networkx==2.4
-nltk==3.4.5
-nose==1.3.7
-notebook==6.0.2
-numba==0.47.0
-numexpr==2.7.0
-numpy==1.18.1
-numpydoc==0.9.2
-nvidia-ml-py3==7.352.0
-oauthlib==3.1.0
-olefile==0.46
-opencv-python-headless==4.1.2.30
-opencv-python==4.1.2.30
-openpyxl==3.0.2
-packaging==20.0
-pandas==0.25.3
-pandocfilters==1.4.2
-parso==0.5.2
-partd==1.1.0
-path==13.1.0
-pathlib2==2.3.5
-pathtools==0.1.2
-patsy==0.5.1
-pep8==1.7.1
-pexpect==4.7.0
-pickleshare==0.7.5
-pillow==6.2.1
-pip==19.3.1
-pkginfo==1.5.0.1
-plotly==4.4.1
-pluggy==0.13.1
-ply==3.11
-prometheus-client==0.7.1
-promise==2.3
-prompt-toolkit==2.0.10
-protobuf==3.11.2
-psutil==5.6.7
-ptyprocess==0.6.0
-py==1.8.1
-pyasn1-modules==0.2.8
-pyasn1==0.4.8
-pycodestyle==2.5.0
-pycosat==0.6.3
-pycparser==2.19
-pycrypto==2.6.1
-pycurl==7.43.0.3
-pydocstyle==4.0.1
-pyflakes==2.1.1
-pygments==2.5.2
-pylint==2.4.4
-pyodbc==4.0.27
-pyopenssl==19.1.0
-pyparsing==2.4.6
-pyrsistent==0.15.6
-pysocks==1.7.1
-pytest-arraydiff==0.3
-pytest-astropy-header==0.1.1
-pytest-astropy==0.7.0
-pytest-doctestplus==0.5.0
-pytest-openfiles==0.4.0
-pytest-remotedata==0.3.2
-pytest==5.3.2
-python-dateutil==2.8.1
-python-jsonrpc-server==0.3.2
-python-language-server==0.31.2
-pytz==2019.3
-pywavelets==1.1.1
-pyxdg==0.26
-pyyaml==5.2
-pyzmq==18.1.0
-qdarkstyle==2.7
-qtawesome==0.6.0
-qtconsole==4.6.0
-qtpy==1.9.0
-requests-oauthlib==1.3.0
-requests==2.22.0
-retrying==1.3.3
-rope==0.14.0
-rsa==4.0
-rtree==0.8.3
-ruamel-yaml==0.15.87
-safitty==1.3
-scikit-image==0.15.0
-scikit-learn==0.22.1
-scipy==1.3.2
-seaborn==0.9.0
-secretstorage==3.1.1
-send2trash==1.5.0
-sentry-sdk==0.14.0
-setuptools==45.0.0
-shortuuid==0.5.0
-simplegeneric==0.8.1
-singledispatch==3.4.0.3
-six==1.13.0
-smmap2==2.0.5
-snowballstemmer==2.0.0
-sortedcollections==1.1.2
-sortedcontainers==2.1.0
-soupsieve==1.9.5
-sphinx==2.3.1
-sphinxcontrib-applehelp==1.0.1
-sphinxcontrib-devhelp==1.0.1
-sphinxcontrib-htmlhelp==1.0.2
-sphinxcontrib-jsmath==1.0.1
-sphinxcontrib-qthelp==1.0.2
-sphinxcontrib-serializinghtml==1.1.3
-sphinxcontrib-websupport==1.1.2
-spyder-kernels==1.8.1
-spyder==4.0.1
-sqlalchemy==1.3.12
-statsmodels==0.10.1
-subprocess32==3.5.4
-sympy==1.5.1
-tables==3.6.1
-tblib==1.6.0
-tensorboard==2.1.0
-tensorboardx==2.0
-terminado==0.8.3
-testpath==0.4.4
-timm==0.1.14
-toolz==0.10.0
-torch==1.2.0
-torchvision==0.4.0a0
-tornado==6.0.3
-tqdm==4.41.1
-traitlets==4.3.3
-ujson==1.35
-unicodecsv==0.14.1
-urllib3==1.25.7
-wandb==0.8.21
-watchdog==0.9.0
-wcwidth==0.1.7
-webencodings==0.5.1
-werkzeug==0.16.0
-wheel==0.33.6
-widgetsnbextension==3.5.1
-wrapt==1.11.2
-wurlitzer==2.0.0
-xlrd==1.2.0
-xlsxwriter==1.2.7
-xlwt==1.3.0
-yapf==0.28.0
-zict==1.0.0
-zipp==0.6.0
\ No newline at end of file
diff --git a/wandb/run-20200120_085945-17rqrqo6/upstream_diff_fea1daedb6b14125e1dec2c49a5e3b211d016f90.patch b/wandb/run-20200120_085945-17rqrqo6/upstream_diff_fea1daedb6b14125e1dec2c49a5e3b211d016f90.patch
deleted file mode 100644
index bca32c8..0000000
--- a/wandb/run-20200120_085945-17rqrqo6/upstream_diff_fea1daedb6b14125e1dec2c49a5e3b211d016f90.patch
+++ /dev/null
@@ -1,1209 +0,0 @@
-diff --git a/Efficientnet-b3-765.ipynb b/Efficientnet-b3-765.ipynb
-index 691c745..6593068 100644
---- a/Efficientnet-b3-765.ipynb
-+++ b/Efficientnet-b3-765.ipynb
-@@ -47,7 +47,7 @@
-        "\n",
-        "                Logging results to <a href=\"https://wandb.com\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-        "                Project page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch</a><br/>\n",
--       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm</a><br/>\n",
-+       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/17rqrqo6\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/17rqrqo6</a><br/>\n",
-        "            "
-       ],
-       "text/plain": [
-@@ -67,7 +67,7 @@
-     {
-      "data": {
-       "text/plain": [
--       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm"
-+       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/17rqrqo6"
-       ]
-      },
-      "execution_count": 2,
-@@ -77,7 +77,16 @@
-    ],
-    "source": [
-     "import wandb\n",
--    "wandb.init(project=\"droughtwatch\")"
-+    "wandb.init(project='droughtwatch', name='efficentnet-b3-765')"
-+   ]
-+  },
-+  {
-+   "cell_type": "code",
-+   "execution_count": 3,
-+   "metadata": {},
-+   "outputs": [],
-+   "source": [
-+    "os.environ['WANDB_NOTEBOOK_NAME'] = \"efficentnet-b3-765\""
-    ]
-   },
-   {
-@@ -89,7 +98,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 3,
-+   "execution_count": 4,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -112,7 +121,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 4,
-+   "execution_count": 5,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -147,7 +156,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 5,
-+   "execution_count": 6,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -170,7 +179,6 @@
-     "            #print(\"x:\" ,x_var.shape)\n",
-     "            #print(\"y: \",y_var)\n",
-     "        \n",
--    "            \n",
-     "            x_var = x_var.to(device)\n",
-     "            y_var = y_var.to(device)\n",
-     "            # Run the model forward to compute scores and loss.\n",
-@@ -188,7 +196,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 6,
-+   "execution_count": 7,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -226,7 +234,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 7,
-+   "execution_count": 8,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -244,7 +252,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 8,
-+   "execution_count": 9,
-    "metadata": {},
-    "outputs": [
-     {
-@@ -584,7 +592,7 @@
-        ")"
-       ]
-      },
--     "execution_count": 8,
-+     "execution_count": 9,
-      "metadata": {},
-      "output_type": "execute_result"
-     }
-@@ -597,16 +605,16 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 9,
-+   "execution_count": 10,
-    "metadata": {},
-    "outputs": [
-     {
-      "data": {
-       "text/plain": [
--       "[<wandb.wandb_torch.TorchGraph at 0x7f4ae970e6d8>]"
-+       "[<wandb.wandb_torch.TorchGraph at 0x7f228afc5d30>]"
-       ]
-      },
--     "execution_count": 9,
-+     "execution_count": 10,
-      "metadata": {},
-      "output_type": "execute_result"
-     }
-@@ -624,7 +632,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 10,
-+   "execution_count": 11,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -651,7 +659,24 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 11,
-+   "execution_count": 12,
-+   "metadata": {},
-+   "outputs": [
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "/home/ubamba98\n"
-+     ]
-+    }
-+   ],
-+   "source": [
-+    "cd .."
-+   ]
-+  },
-+  {
-+   "cell_type": "code",
-+   "execution_count": 13,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -694,7 +719,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 12,
-+   "execution_count": 14,
-    "metadata": {},
-    "outputs": [
-     {
-@@ -741,7 +766,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 13,
-+   "execution_count": 15,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -751,7 +776,7 @@
-   },
-   {
-    "cell_type": "code",
--   "execution_count": 14,
-+   "execution_count": 16,
-    "metadata": {},
-    "outputs": [],
-    "source": [
-@@ -775,7 +800,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "a613a74c934e4455b2b7bda8092750f6",
-+       "model_id": "8d810d63e16c408da628a99fea7c2ed6",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -787,13 +812,6 @@
-      "output_type": "display_data"
-     },
-     {
--     "name": "stderr",
--     "output_type": "stream",
--     "text": [
--      "Failed to query for notebook name, you can set it manually with the WANDB_NOTEBOOK_NAME environment variable\n"
--     ]
--    },
--    {
-      "name": "stdout",
-      "output_type": "stream",
-      "text": [
-@@ -807,7 +825,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "c6559d9040414ad69b56af72a1ce0a07",
-+       "model_id": "c6b7f436057946c1bb6328021db6d842",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -832,7 +850,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "eaee7f0b96914505a2d230b29921dd64",
-+       "model_id": "9064e4c4df6e4021ab5875d64c6466ed",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -857,7 +875,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "87af1df00f004a05a4be631530bc1798",
-+       "model_id": "050ca6562e75419d9ee9a6cf1c047bee",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -882,7 +900,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "b78d43a2bd3b4bba9c9a7d60a572a916",
-+       "model_id": "9c245188cf204171973be920214d3789",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -928,9 +946,9 @@
-     "    val_acc_list.append(val_acc)\n",
-     "    print('Train accuracy: ', train_acc, ';    Val accuracy: ', val_acc, \"\\n\")\n",
-     "    df_data=np.array([train_acc_list, val_acc_list]).T\n",
--    "    wandb.log({\n",
--    "        \"Test Accuracy\": val_acc,\n",
--    "        \"Train accuracy\": train_acc})\n",
-+    "#     wandb.log({\n",
-+    "#         \"val_acc\": val_acc,\n",
-+    "#         \"train_acc\": train_acc})\n",
-     "    df = pd.DataFrame(df_data,columns = ['train_accuracy','test_accuracy'])\n",
-     "    df.to_csv('logs/b3-765.csv')\n",
-     "model_wgt = \"models/b3-765_1_e\" + str(epoch+1) + \".pth\"\n",
-@@ -963,7 +981,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "16450c2e6a644a40855ec79d4250f97d",
-+       "model_id": "4102bf77807247b3ac7945cc64495569",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -975,13 +993,6 @@
-      "output_type": "display_data"
-     },
-     {
--     "name": "stderr",
--     "output_type": "stream",
--     "text": [
--      "Failed to query for notebook name, you can set it manually with the WANDB_NOTEBOOK_NAME environment variable\n"
--     ]
--    },
--    {
-      "name": "stdout",
-      "output_type": "stream",
-      "text": [
-@@ -995,7 +1006,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "6d41a72300af4dff9d0d056e1346b049",
-+       "model_id": "42cb3b3d2255480b87fbbeb3a5cbc9e5",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -1020,7 +1031,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "ebdaf6842b37444b9b84d94b336324ac",
-+       "model_id": "44fd0595c206488a8b3931442d48b77b",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -1044,7 +1055,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "5ddcea86ad1f4e33bca80f7d8d4f0ed6",
-+       "model_id": "18b353ad464b41d8a77ba073859c2250",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -1069,7 +1080,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "d6f0bf6c69204257b4b188493814ef3f",
-+       "model_id": "f2b7deccfd654de7a1b3493fc05039ef",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -1093,7 +1104,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "3ccebae05875450aaa1062b6a58bafeb",
-+       "model_id": "5ffa3775134444b2b27ecba844943292",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -1117,7 +1128,7 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "ecfdae4c32ac4e3c90bfafb35a74898c",
-+       "model_id": "e9fd6e73c66c447eaeb751d73b6e5932",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -1142,7 +1153,55 @@
-     {
-      "data": {
-       "application/vnd.jupyter.widget-view+json": {
--       "model_id": "aaeca08757e84300b77429b26c30ac78",
-+       "model_id": "58206d6ea045486ba6619ccce291de08",
-+       "version_major": 2,
-+       "version_minor": 0
-+      },
-+      "text/plain": [
-+       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-+      ]
-+     },
-+     "metadata": {},
-+     "output_type": "display_data"
-+    },
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "\n",
-+      "Calculating accuracies\n",
-+      "Train accuracy:  0.7135351183167081 ;    Val accuracy:  0.6553191489361702\n",
-+      "Starting epoch 9 / 10\n"
-+     ]
-+    },
-+    {
-+     "data": {
-+      "application/vnd.jupyter.widget-view+json": {
-+       "model_id": "77ef77fb3fc94e85aaf8ab463af9772f",
-+       "version_major": 2,
-+       "version_minor": 0
-+      },
-+      "text/plain": [
-+       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-+      ]
-+     },
-+     "metadata": {},
-+     "output_type": "display_data"
-+    },
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "\n",
-+      "Calculating accuracies\n",
-+      "Train accuracy:  0.7369049308005029 ;    Val accuracy:  0.6692198581560284\n",
-+      "Starting epoch 10 / 10\n"
-+     ]
-+    },
-+    {
-+     "data": {
-+      "application/vnd.jupyter.widget-view+json": {
-+       "model_id": "ed58c7ced5124a7bbacef133613c3514",
-        "version_major": 2,
-        "version_minor": 0
-       },
-@@ -1152,6 +1211,14 @@
-      },
-      "metadata": {},
-      "output_type": "display_data"
-+    },
-+    {
-+     "name": "stdout",
-+     "output_type": "stream",
-+     "text": [
-+      "\n",
-+      "Calculating accuracies\n"
-+     ]
-     }
-    ],
-    "source": [
-@@ -1181,9 +1248,9 @@
-     "    val_acc_list.append(val_acc)\n",
-     "    \n",
-     "    print('Train accuracy: ', train_acc, ';    Val accuracy: ', val_acc)\n",
--    "    wandb.log({\n",
--    "        \"Test Accuracy\": val_acc,\n",
--    "        \"Train accuracy\": train_acc})\n",
-+    "#     wandb.log({\n",
-+    "#         \"val_acc\": val_acc,\n",
-+    "#         \"train_acc\": train_acc})\n",
-     "    df_data=np.array([train_acc_list, val_acc_list]).T\n",
-     "    df = pd.DataFrame(df_data,columns = ['train_accuracy','test_accuracy'])\n",
-     "    df.to_csv('logs/b3-765.csv')\n",
-@@ -1271,8 +1338,8 @@
-     "    \n",
-     "    print('Train accuracy: ', train_acc, ';    Val accuracy: ', val_acc)\n",
-     "    wandb.log({\n",
--    "        \"Test Accuracy\": val_acc,\n",
--    "        \"Train accuracy\": train_acc})\n",
-+    "        \"val_acc\": val_acc,\n",
-+    "        \"train_acc\": train_acc})\n",
-     "    df_data=np.array([train_acc_list, val_acc_list]).T\n",
-     "    df = pd.DataFrame(df_data,columns = ['train_accuracy','test_accuracy'])\n",
-     "    df.to_csv('logs/b3-765.csv')\n",
-diff --git a/wandb/run-20200120_081855-gzutdaae/config.yaml b/wandb/run-20200120_081855-gzutdaae/config.yaml
-new file mode 100644
-index 0000000..1189525
---- /dev/null
-+++ b/wandb/run-20200120_081855-gzutdaae/config.yaml
-@@ -0,0 +1,8 @@
-+wandb_version: 1
-+
-+_wandb:
-+  desc: null
-+  value:
-+    cli_version: 0.8.21
-+    is_jupyter_run: true
-+    python_version: 3.7.3
-diff --git a/wandb/run-20200120_081855-gzutdaae/diff.patch b/wandb/run-20200120_081855-gzutdaae/diff.patch
-new file mode 100644
-index 0000000..1aee41d
---- /dev/null
-+++ b/wandb/run-20200120_081855-gzutdaae/diff.patch
-@@ -0,0 +1,370 @@
-+diff --git a/Efficientnet-b3-765.ipynb b/Efficientnet-b3-765.ipynb
-+index e21879d..451f688 100644
-+--- a/Efficientnet-b3-765.ipynb
-++++ b/Efficientnet-b3-765.ipynb
-+@@ -842,8 +842,75 @@
-+      "output_type": "stream",
-+      "text": [
-+       "\n",
-+-      "Calculating accuracies\n"
-++      "Calculating accuracies\n",
-++      "Train accuracy:  0.258383926343752 ;    Val accuracy:  0.25011820330969264 \n",
-++      "\n",
-++      "Starting epoch 3 / 5\n"
-++     ]
-++    },
-++    {
-++     "data": {
-++      "application/vnd.jupyter.widget-view+json": {
-++       "model_id": "ee8db6d9d3e645098855574b993436d3",
-++       "version_major": 2,
-++       "version_minor": 0
-++      },
-++      "text/plain": [
-++       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-++      ]
-++     },
-++     "metadata": {},
-++     "output_type": "display_data"
-++    },
-++    {
-++     "name": "stdout",
-++     "output_type": "stream",
-++     "text": [
-++      "\n",
-++      "Calculating accuracies\n",
-++      "Train accuracy:  0.2603407873430231 ;    Val accuracy:  0.24964539007092199 \n",
-++      "\n",
-++      "Starting epoch 4 / 5\n"
-+      ]
-++    },
-++    {
-++     "data": {
-++      "application/vnd.jupyter.widget-view+json": {
-++       "model_id": "5ba7659d72cc455e9e844b732455ff47",
-++       "version_major": 2,
-++       "version_minor": 0
-++      },
-++      "text/plain": [
-++       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-++      ]
-++     },
-++     "metadata": {},
-++     "output_type": "display_data"
-++    },
-++    {
-++     "name": "stdout",
-++     "output_type": "stream",
-++     "text": [
-++      "\n",
-++      "Calculating accuracies\n",
-++      "Train accuracy:  0.2627868635921119 ;    Val accuracy:  0.26222222222222225 \n",
-++      "\n",
-++      "Starting epoch 5 / 5\n"
-++     ]
-++    },
-++    {
-++     "data": {
-++      "application/vnd.jupyter.widget-view+json": {
-++       "model_id": "f1e1f2aec05f43f6b6fbcbb5851eaa0f",
-++       "version_major": 2,
-++       "version_minor": 0
-++      },
-++      "text/plain": [
-++       "HBox(children=(FloatProgress(value=0.0, max=799.0), HTML(value='')))"
-++      ]
-++     },
-++     "metadata": {},
-++     "output_type": "display_data"
-+     }
-+    ],
-+    "source": [
-+diff --git a/wandb/run-20200120_081855-gzutdaae/diff.patch b/wandb/run-20200120_081855-gzutdaae/diff.patch
-+index c6015c1..e69de29 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/diff.patch
-++++ b/wandb/run-20200120_081855-gzutdaae/diff.patch
-+@@ -1,201 +0,0 @@
-+-diff --git a/Efficientnet-b3-765.ipynb b/Efficientnet-b3-765.ipynb
-+-index 691c745..9cf4f55 100644
-+---- a/Efficientnet-b3-765.ipynb
-+-+++ b/Efficientnet-b3-765.ipynb
-+-@@ -47,7 +47,7 @@
-+-        "\n",
-+-        "                Logging results to <a href=\"https://wandb.com\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-+-        "                Project page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch</a><br/>\n",
-+--       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm</a><br/>\n",
-+-+       "                Run page: <a href=\"https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae\" target=\"_blank\">https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae</a><br/>\n",
-+-        "            "
-+-       ],
-+-       "text/plain": [
-+-@@ -67,7 +67,7 @@
-+-     {
-+-      "data": {
-+-       "text/plain": [
-+--       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/j9gqs3hm"
-+-+       "W&B Run: https://app.wandb.ai/ubamba98/droughtwatch/runs/gzutdaae"
-+-       ]
-+-      },
-+-      "execution_count": 2,
-+-@@ -77,7 +77,16 @@
-+-    ],
-+-    "source": [
-+-     "import wandb\n",
-+--    "wandb.init(project=\"droughtwatch\")"
-+-+    "wandb.init(project='droughtwatch', name='efficentnet-b3-765')"
-+-+   ]
-+-+  },
-+-+  {
-+-+   "cell_type": "code",
-+-+   "execution_count": 3,
-+-+   "metadata": {},
-+-+   "outputs": [],
-+-+   "source": [
-+-+    "os.environ['WANDB_NOTEBOOK_NAME'] = \"efficentnet-b3-765\""
-+-    ]
-+-   },
-+-   {
-+-@@ -89,7 +98,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 3,
-+-+   "execution_count": 4,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -112,7 +121,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 4,
-+-+   "execution_count": 5,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -147,7 +156,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 5,
-+-+   "execution_count": 6,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -188,7 +197,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 6,
-+-+   "execution_count": 7,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -226,7 +235,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 7,
-+-+   "execution_count": 8,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -244,7 +253,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 8,
-+-+   "execution_count": 9,
-+-    "metadata": {},
-+-    "outputs": [
-+-     {
-+-@@ -584,7 +593,7 @@
-+-        ")"
-+-       ]
-+-      },
-+--     "execution_count": 8,
-+-+     "execution_count": 9,
-+-      "metadata": {},
-+-      "output_type": "execute_result"
-+-     }
-+-@@ -597,16 +606,16 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 9,
-+-+   "execution_count": 10,
-+-    "metadata": {},
-+-    "outputs": [
-+-     {
-+-      "data": {
-+-       "text/plain": [
-+--       "[<wandb.wandb_torch.TorchGraph at 0x7f4ae970e6d8>]"
-+-+       "[<wandb.wandb_torch.TorchGraph at 0x7fba6796b390>]"
-+-       ]
-+-      },
-+--     "execution_count": 9,
-+-+     "execution_count": 10,
-+-      "metadata": {},
-+-      "output_type": "execute_result"
-+-     }
-+-@@ -624,7 +633,7 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 10,
-+-+   "execution_count": 11,
-+-    "metadata": {},
-+-    "outputs": [],
-+-    "source": [
-+-@@ -651,57 +660,20 @@
-+-   },
-+-   {
-+-    "cell_type": "code",
-+--   "execution_count": 11,
-+--   "metadata": {},
-+--   "outputs": [],
-+--   "source": [
-+--    "class ImageDataset(Dataset):\n",
-+--    "        \n",
-+--    "    def __init__(self, transform=None, limit=None, mode = \"train\", train_dir=\"train\", val_dir=\"val\", weights = [1, 1, 1, 1]):\n",
-+--    "        \n",
-+--    "        self.transform = transform\n",
-+--    "        self.limit = limit\n",
-+--    "        self.mode = mode\n",
-+--    "        self.train_dir = train_dir\n",
-+--    "        self.val_dir = val_dir\n",
-+--    "        self.train_files=[]\n",
-+--    "        for i in range(4):\n",
-+--    "            self.train_files += glob.glob(self.train_dir+\"/*\"+str(i)+\"/*\") * weights[i]\n",
-+--    "        self.val_files=glob.glob(self.val_dir+\"/*/*\")\n",
-+--    "        self.train_sample_count = len(self.train_files)\n",
-+--    "        self.val_sample_count = len(self.val_files)\n",
-+--    "        \n",
-+--    "    def __len__(self):\n",
-+--    "        if self.mode == \"train\":\n",
-+--    "            return (self.train_sample_count)\n",
-+--    "        else:\n",
-+--    "            return(self.val_sample_count)\n",
-+--    "\n",
-+--    "    def __getitem__(self, idx): \n",
-+--    "        if self.mode == \"train\":\n",
-+--    "            return (self.get_img(self.train_files[idx]), int(self.train_files[idx].split('/')[-2].split(\"_\")[-1]))\n",
-+--    "        if self.mode == \"val\":\n",
-+--    "            return (self.get_img(self.val_files[idx]), int(self.val_files[idx].split('/')[-2].split(\"_\")[-1]))\n",
-+--    "        \n",
-+--    "    def get_img(self, img_dir):\n",
-+--    "        img = np.load(img_dir)\n",
-+--    "        #img = img.transpose((1, 2, 0))\n",
-+--    "        img = img[:, :, [6, 5, 4]] ## Select for channels to run\n",
-+--    "        img = self.transform(img)\n",
-+--    "        img = torch.from_numpy(np.moveaxis(img, -1, 0)).float()  \n",
-+--    "        return img"
-+--   ]
-+--  },
-+--  {
-+--   "cell_type": "code",
-+--   "execution_count": 12,
-+-+   "execution_count": 14,
-+-    "metadata": {},
-+-    "outputs": [
-+-     {
-+--     "name": "stdout",
-+--     "output_type": "stream",
-+--     "text": [
-+--      "{'train': 799, 'val': 331}\n"
-+-+     "ename": "ValueError",
-+-+     "evalue": "num_samples should be a positive integer value, but got num_samples=0",
-+-+     "output_type": "error",
-+-+     "traceback": [
-+-+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
-+-+      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
-+-+      "\u001b[0;32m<ipython-input-14-06a69a7d0d7b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      5\u001b[0m                 \u001b[0mshuffle\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m                 \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m256\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m                 \u001b[0mnum_workers\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m             )\n\u001b[1;32m      9\u001b[0m valid_loader = DataLoader(\n",
-+-+      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/torch/utils/data/dataloader.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, dataset, batch_size, shuffle, sampler, batch_sampler, num_workers, collate_fn, pin_memory, drop_last, timeout, worker_init_fn, multiprocessing_context)\u001b[0m\n\u001b[1;32m    211\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# map-style\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    212\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mshuffle\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 213\u001b[0;31m                     \u001b[0msampler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mRandomSampler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    214\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    215\u001b[0m                     \u001b[0msampler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSequentialSampler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
-+-+      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/torch/utils/data/sampler.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data_source, replacement, num_samples)\u001b[0m\n\u001b[1;32m     92\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnum_samples\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnum_samples\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     93\u001b[0m             raise ValueError(\"num_samples should be a positive integer \"\n\u001b[0;32m---> 94\u001b[0;31m                              \"value, but got num_samples={}\".format(self.num_samples))\n\u001b[0m\u001b[1;32m     95\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     96\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
-+-+      "\u001b[0;31mValueError\u001b[0m: num_samples should be a positive integer value, but got num_samples=0"
-+-      ]
-+-     }
-+-    ],
-+diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-+index bebeecd..fbd17e8 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-++++ b/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-+@@ -1,26 +1,10 @@
-+-{"system.network.sent":15797,"system.gpu.0.powerPercent":41.9,"system.network.recv":65303,"system.disk":22.4,"system.gpu.0.powerWatts":29.33,"_wandb":true,"system.gpu.0.temp":61,"system.gpu.0.memory":0,"system.gpu.0.gpu":0,"_runtime":1,"system.proc.memory.rssMB":262.66,"system.proc.memory.availableMB":14300.84,"system.cpu":13.75,"system.proc.cpu.threads":17,"system.memory":4.9,"system.proc.memory.percent":1.75,"system.gpu.0.memoryAllocated":0,"_timestamp":1579508336}
-+-{"system.gpu.0.gpu": 10.2, "system.gpu.0.memory": 7.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 68.0, "system.gpu.0.powerWatts": 37.18, "system.gpu.0.powerPercent": 53.11, "system.cpu": 6.9, "system.memory": 22.68, "system.disk": 22.4, "system.proc.memory.availableMB": 11632.24, "system.proc.memory.rssMB": 2960.92, "system.proc.memory.percent": 19.68, "system.proc.cpu.threads": 27.87, "system.network.sent": 244468, "system.network.recv": 251940, "_wandb": true, "_timestamp": 1579508635, "_runtime": 42}
-+-{"system.gpu.0.gpu": 5.47, "system.gpu.0.memory": 4.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 69.93, "system.gpu.0.powerWatts": 38.27, "system.gpu.0.powerPercent": 54.67, "system.cpu": 6.63, "system.memory": 22.78, "system.disk": 22.4, "system.proc.memory.availableMB": 11615.58, "system.proc.memory.rssMB": 2961.46, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 339293, "system.network.recv": 337753, "_wandb": true, "_timestamp": 1579508665, "_runtime": 73}
-+-{"system.gpu.0.gpu": 8.87, "system.gpu.0.memory": 6.47, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 72.07, "system.gpu.0.powerWatts": 40.58, "system.gpu.0.powerPercent": 57.97, "system.cpu": 7.19, "system.memory": 22.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11605.85, "system.proc.memory.rssMB": 2961.46, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 431682, "system.network.recv": 429114, "_wandb": true, "_timestamp": 1579508695, "_runtime": 103}
-+-{"system.gpu.0.gpu": 8.67, "system.gpu.0.memory": 5.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 73.27, "system.gpu.0.powerWatts": 36.56, "system.gpu.0.powerPercent": 52.23, "system.cpu": 7.94, "system.memory": 22.88, "system.disk": 22.4, "system.proc.memory.availableMB": 11602.32, "system.proc.memory.rssMB": 2961.81, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 534529, "system.network.recv": 530758, "_wandb": true, "_timestamp": 1579508725, "_runtime": 133}
-+-{"system.gpu.0.gpu": 8.87, "system.gpu.0.memory": 5.8, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 74.93, "system.gpu.0.powerWatts": 43.21, "system.gpu.0.powerPercent": 61.73, "system.cpu": 8.45, "system.memory": 22.98, "system.disk": 22.4, "system.proc.memory.availableMB": 11587.51, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 635626, "system.network.recv": 634655, "_wandb": true, "_timestamp": 1579508756, "_runtime": 163}
-+-{"system.gpu.0.gpu": 9.87, "system.gpu.0.memory": 7.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 42.67, "system.gpu.0.powerPercent": 60.96, "system.cpu": 8.79, "system.memory": 23.02, "system.disk": 22.4, "system.proc.memory.availableMB": 11581.47, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 748987, "system.network.recv": 747904, "_wandb": true, "_timestamp": 1579508786, "_runtime": 193}
-+-{"system.gpu.0.gpu": 11.87, "system.gpu.0.memory": 8.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.67, "system.gpu.0.powerWatts": 44.82, "system.gpu.0.powerPercent": 64.03, "system.cpu": 9.73, "system.memory": 23.07, "system.disk": 22.4, "system.proc.memory.availableMB": 11575.17, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 873256, "system.network.recv": 874007, "_wandb": true, "_timestamp": 1579508816, "_runtime": 223}
-+-{"system.gpu.0.gpu": 11.0, "system.gpu.0.memory": 8.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.27, "system.gpu.0.powerWatts": 38.19, "system.gpu.0.powerPercent": 54.55, "system.cpu": 10.57, "system.memory": 23.05, "system.disk": 22.4, "system.proc.memory.availableMB": 11572.48, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1023164, "system.network.recv": 1026940, "_wandb": true, "_timestamp": 1579508846, "_runtime": 253}
-+-{"system.gpu.0.gpu": 14.2, "system.gpu.0.memory": 10.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.27, "system.gpu.0.powerWatts": 42.89, "system.gpu.0.powerPercent": 61.28, "system.cpu": 11.98, "system.memory": 23.15, "system.disk": 22.4, "system.proc.memory.availableMB": 11561.87, "system.proc.memory.rssMB": 2962.21, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1178866, "system.network.recv": 1181511, "_wandb": true, "_timestamp": 1579508876, "_runtime": 283}
-+-{"system.gpu.0.gpu": 13.0, "system.gpu.0.memory": 10.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 78.0, "system.gpu.0.powerWatts": 50.01, "system.gpu.0.powerPercent": 71.45, "system.cpu": 13.59, "system.memory": 23.22, "system.disk": 22.4, "system.proc.memory.availableMB": 11553.44, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1331123, "system.network.recv": 1336366, "_wandb": true, "_timestamp": 1579508906, "_runtime": 314}
-+-{"system.gpu.0.gpu": 25.13, "system.gpu.0.memory": 21.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.33, "system.gpu.0.powerWatts": 45.73, "system.gpu.0.powerPercent": 65.33, "system.cpu": 15.11, "system.memory": 23.2, "system.disk": 22.4, "system.proc.memory.availableMB": 11550.57, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1518597, "system.network.recv": 1523627, "_wandb": true, "_timestamp": 1579508936, "_runtime": 344}
-+-{"system.gpu.0.gpu": 19.67, "system.gpu.0.memory": 16.87, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.53, "system.gpu.0.powerWatts": 49.57, "system.gpu.0.powerPercent": 70.82, "system.cpu": 17.23, "system.memory": 23.21, "system.disk": 22.4, "system.proc.memory.availableMB": 11547.93, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1702121, "system.network.recv": 1710364, "_wandb": true, "_timestamp": 1579508966, "_runtime": 374}
-+-{"system.gpu.0.gpu": 18.4, "system.gpu.0.memory": 15.73, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.2, "system.gpu.0.powerWatts": 51.24, "system.gpu.0.powerPercent": 73.2, "system.cpu": 18.21, "system.memory": 23.35, "system.disk": 22.4, "system.proc.memory.availableMB": 11531.67, "system.proc.memory.rssMB": 2962.49, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 1856007, "system.network.recv": 1863572, "_wandb": true, "_timestamp": 1579508997, "_runtime": 404}
-+-{"system.gpu.0.gpu": 18.8, "system.gpu.0.memory": 16.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.47, "system.gpu.0.powerWatts": 49.62, "system.gpu.0.powerPercent": 70.89, "system.cpu": 19.99, "system.memory": 23.32, "system.disk": 22.4, "system.proc.memory.availableMB": 11535.11, "system.proc.memory.rssMB": 2962.48, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2016161, "system.network.recv": 2023461, "_wandb": true, "_timestamp": 1579509027, "_runtime": 434}
-+-{"system.gpu.0.gpu": 21.0, "system.gpu.0.memory": 18.07, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.13, "system.gpu.0.powerWatts": 50.49, "system.gpu.0.powerPercent": 72.13, "system.cpu": 20.69, "system.memory": 23.18, "system.disk": 22.4, "system.proc.memory.availableMB": 11552.24, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2245090, "system.network.recv": 2255638, "_wandb": true, "_timestamp": 1579509057, "_runtime": 464}
-+-{"system.gpu.0.gpu": 17.07, "system.gpu.0.memory": 14.13, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.13, "system.gpu.0.powerWatts": 51.83, "system.gpu.0.powerPercent": 74.04, "system.cpu": 21.11, "system.memory": 23.25, "system.disk": 22.4, "system.proc.memory.availableMB": 11542.37, "system.proc.memory.rssMB": 2962.5, "system.proc.memory.percent": 19.69, "system.proc.cpu.threads": 28.0, "system.network.sent": 2746309, "system.network.recv": 2487509, "_wandb": true, "_timestamp": 1579509087, "_runtime": 494}
-+-{"system.gpu.0.gpu": 66.47, "system.gpu.0.memory": 44.4, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 78.4, "system.gpu.0.powerWatts": 64.54, "system.gpu.0.powerPercent": 92.21, "system.cpu": 78.97, "system.memory": 23.2, "system.disk": 22.4, "system.proc.memory.availableMB": 11552.42, "system.proc.memory.rssMB": 2957.19, "system.proc.memory.percent": 19.66, "system.proc.cpu.threads": 27.2, "system.network.sent": 3696180, "system.network.recv": 2568386, "_wandb": true, "_timestamp": 1579509117, "_runtime": 525}
-+-{"system.gpu.0.gpu": 82.13, "system.gpu.0.memory": 53.73, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.33, "system.gpu.0.powerWatts": 67.07, "system.gpu.0.powerPercent": 95.82, "system.cpu": 99.89, "system.memory": 23.25, "system.disk": 22.4, "system.proc.memory.availableMB": 11541.6, "system.proc.memory.rssMB": 2956.42, "system.proc.memory.percent": 19.65, "system.proc.cpu.threads": 27.0, "system.network.sent": 3700982, "system.network.recv": 2571448, "_wandb": true, "_timestamp": 1579509147, "_runtime": 555}
-+-{"system.gpu.0.gpu": 78.07, "system.gpu.0.memory": 50.87, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.0, "system.gpu.0.powerWatts": 62.66, "system.gpu.0.powerPercent": 89.52, "system.cpu": 93.01, "system.memory": 23.62, "system.disk": 22.4, "system.proc.memory.availableMB": 11490.1, "system.proc.memory.rssMB": 2955.65, "system.proc.memory.percent": 19.65, "system.proc.cpu.threads": 27.0, "system.network.sent": 3709404, "system.network.recv": 2574045, "_wandb": true, "_timestamp": 1579509178, "_runtime": 585}
-+-{"system.gpu.0.gpu": 15.07, "system.gpu.0.memory": 3.27, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 71.73, "system.gpu.0.powerWatts": 34.48, "system.gpu.0.powerPercent": 49.26, "system.cpu": 25.27, "system.memory": 22.4, "system.disk": 22.4, "system.proc.memory.availableMB": 11676.86, "system.proc.memory.rssMB": 2950.69, "system.proc.memory.percent": 19.61, "system.proc.cpu.threads": 27.0, "system.network.sent": 3721790, "system.network.recv": 2631378, "_wandb": true, "_timestamp": 1579509208, "_runtime": 615}
-+-{"system.gpu.0.gpu": 45.27, "system.gpu.0.memory": 29.07, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 74.07, "system.gpu.0.powerWatts": 48.68, "system.gpu.0.powerPercent": 69.55, "system.cpu": 61.3, "system.memory": 22.83, "system.disk": 22.4, "system.proc.memory.availableMB": 11611.68, "system.proc.memory.rssMB": 2958.09, "system.proc.memory.percent": 19.66, "system.proc.cpu.threads": 27.47, "system.network.sent": 4312731, "system.network.recv": 3024984, "_wandb": true, "_timestamp": 1579509238, "_runtime": 645}
-+-{"system.gpu.0.gpu": 85.27, "system.gpu.0.memory": 64.2, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 80.4, "system.gpu.0.powerWatts": 69.5, "system.gpu.0.powerPercent": 99.29, "system.cpu": 98.87, "system.memory": 23.4, "system.disk": 22.4, "system.proc.memory.availableMB": 11523.09, "system.proc.memory.rssMB": 2965.59, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 28.0, "system.network.sent": 5355584, "system.network.recv": 3684826, "_wandb": true, "_timestamp": 1579509268, "_runtime": 675}
-+-{"system.gpu.0.gpu": 82.67, "system.gpu.0.memory": 63.0, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.13, "system.gpu.0.powerWatts": 68.41, "system.gpu.0.powerPercent": 97.73, "system.cpu": 97.43, "system.memory": 23.36, "system.disk": 22.4, "system.proc.memory.availableMB": 11527.65, "system.proc.memory.rssMB": 2966.13, "system.proc.memory.percent": 19.72, "system.proc.cpu.threads": 27.93, "system.network.sent": 6262772, "system.network.recv": 4284351, "_wandb": true, "_timestamp": 1579509298, "_runtime": 706}
-+-{"system.gpu.0.gpu": 84.6, "system.gpu.0.memory": 55.33, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 76.4, "system.gpu.0.powerWatts": 66.84, "system.gpu.0.powerPercent": 95.48, "system.cpu": 99.88, "system.memory": 23.27, "system.disk": 22.4, "system.proc.memory.availableMB": 11542.26, "system.proc.memory.rssMB": 2958.56, "system.proc.memory.percent": 19.67, "system.proc.cpu.threads": 27.0, "system.network.sent": 6275456, "system.network.recv": 4336424, "_wandb": true, "_timestamp": 1579509329, "_runtime": 736}
-+-{"system.gpu.0.gpu": 84.4, "system.gpu.0.memory": 55.13, "system.gpu.0.memoryAllocated": 9.38, "system.gpu.0.temp": 77.73, "system.gpu.0.powerWatts": 73.68, "system.gpu.0.powerPercent": 105.26, "system.cpu": 99.89, "system.memory": 23.29, "system.disk": 22.4, "system.proc.memory.availableMB": 11538.26, "system.proc.memory.rssMB": 2958.56, "system.proc.memory.percent": 19.67, "system.proc.cpu.threads": 27.0, "system.network.sent": 6279094, "system.network.recv": 4342260, "_wandb": true, "_timestamp": 1579509359, "_runtime": 766}
-++{"system.network.sent":10977141,"system.gpu.0.powerPercent":96.79,"system.network.recv":7409894,"system.disk":22.4,"system.gpu.0.powerWatts":67.75,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":65.33,"system.gpu.0.gpu":85.6,"_runtime":1008,"system.proc.memory.rssMB":2966.29,"system.proc.memory.availableMB":11506.94,"system.cpu":98.25,"system.proc.cpu.threads":28,"system.memory":23.5,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509601}
-++{"system.network.sent":11502749,"system.gpu.0.powerPercent":97.46,"system.network.recv":7764756,"system.disk":22.4,"system.gpu.0.powerWatts":68.23,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":60.73,"system.gpu.0.gpu":85.87,"_runtime":1039,"system.proc.memory.rssMB":2962.16,"system.proc.memory.availableMB":11528.19,"system.cpu":97.55,"system.proc.cpu.threads":27.47,"system.memory":23.37,"system.proc.memory.percent":19.69,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509631}
-++{"system.network.sent":11508976,"system.gpu.0.powerPercent":102.06,"system.network.recv":7771440,"system.disk":22.4,"system.gpu.0.powerWatts":71.44,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.53,"system.gpu.0.gpu":85.6,"_runtime":1069,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11533.16,"system.cpu":99.91,"system.proc.cpu.threads":27,"system.memory":23.34,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509662}
-++{"system.network.sent":11522899,"system.gpu.0.powerPercent":93.89,"system.network.recv":7774171,"system.disk":22.4,"system.gpu.0.powerWatts":65.73,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.8,"_runtime":1099,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11449.37,"system.cpu":99.9,"system.proc.cpu.threads":27,"system.memory":23.89,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509692}
-++{"system.network.sent":12355982,"system.gpu.0.powerPercent":99.47,"system.network.recv":8325343,"system.disk":22.4,"system.gpu.0.powerWatts":69.63,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":53.6,"system.gpu.0.gpu":80.47,"_runtime":1129,"system.proc.memory.rssMB":2962.93,"system.proc.memory.availableMB":11549.31,"system.cpu":91.64,"system.proc.cpu.threads":27.73,"system.memory":23.23,"system.proc.memory.percent":19.7,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509722}
-++{"system.network.sent":13392411,"system.gpu.0.powerPercent":96.5,"system.network.recv":9022410,"system.disk":22.4,"system.gpu.0.powerWatts":67.55,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":66.2,"system.gpu.0.gpu":86.73,"_runtime":1160,"system.proc.memory.rssMB":2966.31,"system.proc.memory.availableMB":11507.02,"system.cpu":96.58,"system.proc.cpu.threads":28,"system.memory":23.51,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509752}
-++{"system.network.sent":14052060,"system.gpu.0.powerPercent":93.62,"system.network.recv":9455229,"system.disk":22.4,"system.gpu.0.powerWatts":65.53,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":62.4,"system.gpu.0.gpu":86.33,"_runtime":1190,"system.proc.memory.rssMB":2964.4,"system.proc.memory.availableMB":11520.81,"system.cpu":96.15,"system.proc.cpu.threads":27.67,"system.memory":23.41,"system.proc.memory.percent":19.71,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509783}
-++{"system.network.sent":14116134,"system.gpu.0.powerPercent":97.24,"system.network.recv":9471018,"system.disk":22.4,"system.gpu.0.powerWatts":68.07,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.13,"_runtime":1220,"system.proc.memory.rssMB":2959.24,"system.proc.memory.availableMB":11527.75,"system.cpu":99.85,"system.proc.cpu.threads":27,"system.memory":23.39,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509813}
-++{"system.network.sent":14129520,"system.gpu.0.powerPercent":102.88,"system.network.recv":9474423,"system.disk":22.4,"system.gpu.0.powerWatts":72.02,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":56.33,"system.gpu.0.gpu":86.27,"_runtime":1250,"system.proc.memory.rssMB":2958.7,"system.proc.memory.availableMB":11472.54,"system.cpu":99.87,"system.proc.cpu.threads":27,"system.memory":23.75,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509843}
-++{"system.network.sent":14134644,"system.gpu.0.powerPercent":87.89,"system.network.recv":9477692,"system.disk":22.4,"system.gpu.0.powerWatts":61.52,"_wandb":true,"system.gpu.0.temp":76.75,"system.gpu.0.memory":39.12,"system.gpu.0.gpu":73.5,"_runtime":1267,"system.proc.memory.rssMB":2956.05,"system.proc.memory.availableMB":11567.16,"system.cpu":86.28,"system.proc.cpu.threads":26.38,"system.memory":23.1,"system.proc.memory.percent":19.65,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509859}
-+diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-+index 6941a0a..e946e56 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-++++ b/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-+@@ -1 +1,5 @@
-+-{"gradients/classifier.bias": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.0654682070016861, -0.06339701265096664, -0.06132581830024719, -0.05925462394952774, -0.05718342587351799, -0.05511223152279854, -0.053041037172079086, -0.050969842821359634, -0.048898644745349884, -0.04682745039463043, -0.04475625604391098, -0.04268506169319153, -0.040613867342472076, -0.038542672991752625, -0.03647147864103317, -0.03440028056502342, -0.03232908621430397, -0.03025789186358452, -0.028186697512865067, -0.026115499436855316, -0.024044305086135864, -0.021973110735416412, -0.01990191638469696, -0.01783072203397751, -0.015759527683258057, -0.013688329607248306, -0.011617135256528854, -0.009545940905809402, -0.0074747465550899506, -0.005403552204370499, -0.0033323541283607483, -0.0012611597776412964, 0.0008100345730781555, 0.0028812289237976074, 0.004952423274517059, 0.007023617625236511, 0.009094811975955963, 0.011166006326675415, 0.013237208127975464, 0.015308402478694916, 0.017379596829414368, 0.01945079118013382, 0.02152198553085327, 0.023593179881572723, 0.025664374232292175, 0.027735568583011627, 0.02980676293373108, 0.03187795728445053, 0.03394915163516998, 0.03602035343647003, 0.038091547787189484, 0.040162742137908936, 0.04223393648862839, 0.04430513083934784, 0.04637632519006729, 0.04844751954078674, 0.050518713891506195, 0.05258990824222565, 0.0546611025929451, 0.05673230439424515, 0.0588034987449646, 0.060874685645103455, 0.0629458874464035, 0.06501707434654236, 0.06708827614784241]}, "gradients/classifier.weight": {"_type": "histogram", "values": [1.0, 1.0, 1.0, 0.0, 3.0, 1.0, 5.0, 2.0, 4.0, 10.0, 9.0, 17.0, 15.0, 21.0, 30.0, 49.0, 53.0, 61.0, 86.0, 96.0, 118.0, 155.0, 170.0, 210.0, 214.0, 249.0, 229.0, 254.0, 272.0, 299.0, 314.0, 295.0, 344.0, 291.0, 277.0, 262.0, 259.0, 239.0, 186.0, 184.0, 169.0, 136.0, 111.0, 97.0, 83.0, 60.0, 47.0, 38.0, 19.0, 23.0, 20.0, 13.0, 17.0, 7.0, 8.0, 4.0, 1.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.09012244641780853, -0.08724749088287354, -0.08437253534793854, -0.08149757981300354, -0.07862262427806854, -0.07574766874313354, -0.07287271320819855, -0.06999775767326355, -0.06712280213832855, -0.06424784660339355, -0.06137289106845856, -0.05849793553352356, -0.05562297999858856, -0.052748024463653564, -0.04987306892871857, -0.04699811339378357, -0.04412315785884857, -0.041248202323913574, -0.03837324678897858, -0.03549829125404358, -0.03262333571910858, -0.029748380184173584, -0.026873424649238586, -0.02399846911430359, -0.02112351357936859, -0.018248558044433594, -0.015373602509498596, -0.012498646974563599, -0.009623691439628601, -0.0067487359046936035, -0.003873780369758606, -0.0009988248348236084, 0.0018761307001113892, 0.004751086235046387, 0.007626041769981384, 0.010500997304916382, 0.01337595283985138, 0.016250908374786377, 0.019125863909721375, 0.022000819444656372, 0.02487577497959137, 0.027750730514526367, 0.030625686049461365, 0.03350064158439636, 0.03637559711933136, 0.03925055265426636, 0.042125508189201355, 0.04500046372413635, 0.04787541925907135, 0.05075037479400635, 0.053625330328941345, 0.05650028586387634, 0.05937524139881134, 0.06225019693374634, 0.06512515246868134, 0.06800010800361633, 0.07087506353855133, 0.07375001907348633, 0.07662497460842133, 0.07949993014335632, 0.08237488567829132, 0.08524984121322632, 0.08812479674816132, 0.09099975228309631, 0.09387470781803131]}, "val_acc": 0.23687943262411348, "train_acc": 0.25812953441384673, "_runtime": 814.0969541072845, "_timestamp": 1579509224.6157851, "_step": 0}
-++{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.0654682070016861,-0.06339701265096664,-0.06132581830024719,-0.05925462394952774,-0.05718342587351799,-0.05511223152279854,-0.053041037172079086,-0.050969842821359634,-0.048898644745349884,-0.04682745039463043,-0.04475625604391098,-0.04268506169319153,-0.040613867342472076,-0.038542672991752625,-0.03647147864103317,-0.03440028056502342,-0.03232908621430397,-0.03025789186358452,-0.028186697512865067,-0.026115499436855316,-0.024044305086135864,-0.021973110735416412,-0.01990191638469696,-0.01783072203397751,-0.015759527683258057,-0.013688329607248306,-0.011617135256528854,-0.009545940905809402,-0.0074747465550899506,-0.005403552204370499,-0.0033323541283607483,-0.0012611597776412964,0.0008100345730781555,0.0028812289237976074,0.004952423274517059,0.007023617625236511,0.009094811975955963,0.011166006326675415,0.013237208127975464,0.015308402478694916,0.017379596829414368,0.01945079118013382,0.02152198553085327,0.023593179881572723,0.025664374232292175,0.027735568583011627,0.02980676293373108,0.03187795728445053,0.03394915163516998,0.03602035343647003,0.038091547787189484,0.040162742137908936,0.04223393648862839,0.04430513083934784,0.04637632519006729,0.04844751954078674,0.050518713891506195,0.05258990824222565,0.0546611025929451,0.05673230439424515,0.0588034987449646,0.060874685645103455,0.0629458874464035,0.06501707434654236,0.06708827614784241]},"gradients/classifier.weight":{"bins":[-0.09012244641780853,-0.08724749088287354,-0.08437253534793854,-0.08149757981300354,-0.07862262427806854,-0.07574766874313354,-0.07287271320819855,-0.06999775767326355,-0.06712280213832855,-0.06424784660339355,-0.06137289106845856,-0.05849793553352356,-0.05562297999858856,-0.052748024463653564,-0.04987306892871857,-0.04699811339378357,-0.04412315785884857,-0.041248202323913574,-0.03837324678897858,-0.03549829125404358,-0.03262333571910858,-0.029748380184173584,-0.026873424649238586,-0.02399846911430359,-0.02112351357936859,-0.018248558044433594,-0.015373602509498596,-0.012498646974563599,-0.009623691439628601,-0.0067487359046936035,-0.003873780369758606,-0.0009988248348236084,0.0018761307001113892,0.004751086235046387,0.007626041769981384,0.010500997304916382,0.01337595283985138,0.016250908374786377,0.019125863909721375,0.022000819444656372,0.02487577497959137,0.027750730514526367,0.030625686049461365,0.03350064158439636,0.03637559711933136,0.03925055265426636,0.042125508189201355,0.04500046372413635,0.04787541925907135,0.05075037479400635,0.053625330328941345,0.05650028586387634,0.05937524139881134,0.06225019693374634,0.06512515246868134,0.06800010800361633,0.07087506353855133,0.07375001907348633,0.07662497460842133,0.07949993014335632,0.08237488567829132,0.08524984121322632,0.08812479674816132,0.09099975228309631,0.09387470781803131],"_type":"histogram","values":[1,1,1,0,3,1,5,2,4,10,9,17,15,21,30,49,53,61,86,96,118,155,170,210,214,249,229,254,272,299,314,295,344,291,277,262,259,239,186,184,169,136,111,97,83,60,47,38,19,23,20,13,17,7,8,4,1,2,2,0,0,0,0,1]},"_step":0,"val_acc":0.23687943262411348,"train_acc":0.25812953441384673,"_runtime":814.0969541072845,"_timestamp":1.5795092246157851e+09}
-++{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1],"bins":[-0.07717597484588623,-0.07544030994176865,-0.07370464503765106,-0.07196898013353348,-0.0702333152294159,-0.06849765032529831,-0.06676198542118073,-0.06502632051706314,-0.06329065561294556,-0.06155499070882797,-0.05981932580471039,-0.058083660900592804,-0.05634799599647522,-0.054612331092357635,-0.05287666618824005,-0.05114100128412247,-0.04940533638000488,-0.0476696714758873,-0.045934006571769714,-0.04419834539294243,-0.042462680488824844,-0.04072701558470726,-0.038991350680589676,-0.03725568577647209,-0.03552002087235451,-0.03378435596823692,-0.03204869106411934,-0.030313026160001755,-0.02857736125588417,-0.026841696351766586,-0.025106031447649002,-0.023370366543531418,-0.021634701639413834,-0.01989903673529625,-0.018163371831178665,-0.01642770692706108,-0.014692042022943497,-0.012956380844116211,-0.011220715939998627,-0.009485051035881042,-0.007749386131763458,-0.006013721227645874,-0.00427805632352829,-0.0025423914194107056,-0.0008067265152931213,0.0009289383888244629,0.002664603292942047,0.004400268197059631,0.006135933101177216,0.0078715980052948,0.009607262909412384,0.011342927813529968,0.013078592717647552,0.014814257621765137,0.01654992252588272,0.018285587430000305,0.02002125233411789,0.021756917238235474,0.023492582142353058,0.025228247046470642,0.026963911950588226,0.02869957685470581,0.030435241758823395,0.03217090666294098,0.03390657156705856]},"gradients/classifier.weight":{"_type":"histogram","values":[1,0,1,0,1,1,3,1,1,2,4,9,11,17,27,29,40,36,67,86,99,128,150,186,242,222,248,298,311,327,349,317,357,337,321,308,284,232,208,178,153,140,97,76,67,43,32,35,19,16,10,6,2,2,3,3,0,0,0,0,0,0,0,1],"bins":[-0.10413810610771179,-0.10082836449146271,-0.09751862287521362,-0.09420888125896454,-0.09089913964271545,-0.08758939802646637,-0.08427965641021729,-0.0809699147939682,-0.07766017317771912,-0.07435043156147003,-0.07104068994522095,-0.06773094832897186,-0.06442121416330338,-0.06111147254705429,-0.057801730930805206,-0.05449198931455612,-0.05118224769830704,-0.04787250608205795,-0.04456276446580887,-0.041253022849559784,-0.0379432812333107,-0.034633539617061615,-0.03132379800081253,-0.028014056384563446,-0.02470432221889496,-0.021394580602645874,-0.01808483898639679,-0.014775097370147705,-0.01146535575389862,-0.008155614137649536,-0.004845872521400452,-0.0015361309051513672,0.0017736107110977173,0.005083352327346802,0.008393093943595886,0.01170283555984497,0.015012577176094055,0.01832231879234314,0.021632060408592224,0.02494180202484131,0.028251543641090393,0.03156128525733948,0.03487102687358856,0.038180768489837646,0.04149051010608673,0.044800251722335815,0.0481099933385849,0.051419734954833984,0.054729461669921875,0.05803920328617096,0.061348944902420044,0.06465868651866913,0.06796842813491821,0.0712781697511673,0.07458791136741638,0.07789765298366547,0.08120739459991455,0.08451713621616364,0.08782687783241272,0.0911366194486618,0.09444636106491089,0.09775610268115997,0.10106584429740906,0.10437558591365814,0.10768532752990723]},"_step":1,"val_acc":0.25011820330969264,"train_acc":0.258383926343752,"_runtime":974.3342196941376,"_timestamp":1.5795093848530507e+09}
-++{"gradients/classifier.bias":{"values":[1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.006489427760243416,-0.006147412117570639,-0.005805396940559149,-0.005463381297886372,-0.0051213656552135944,-0.004779350012540817,-0.004437334835529327,-0.00409531919285655,-0.0037533037830144167,-0.003411288373172283,-0.003069272730499506,-0.0027272573206573725,-0.002385241910815239,-0.0020432262681424618,-0.0017012106254696846,-0.0013591954484581947,-0.0010171798057854176,-0.0006751641631126404,-0.0003331489861011505,8.866656571626663e-06,0.00035088229924440384,0.0006928974762558937,0.0010349131189286709,0.001376928761601448,0.001718943938612938,0.0020609600469470024,0.0024029752239584923,0.002744990400969982,0.0030870065093040466,0.0034290216863155365,0.0037710368633270264,0.004113052971661091,0.004455068148672581,0.004797083325684071,0.005139099434018135,0.005481114611029625,0.005823129788041115,0.006165145896375179,0.006507161073386669,0.006849176250398159,0.0071911923587322235,0.007533207535743713,0.007875222712755203,0.008217238821089268,0.008559253998100758,0.008901269175112247,0.009243285283446312,0.009585300460457802,0.009927315637469292,0.010269330814480782,0.01061134785413742,0.01095336303114891,0.0112953782081604,0.01163739338517189,0.01197940856218338,0.01232142373919487,0.012663440778851509,0.013005455955862999,0.013347471132874489,0.013689486309885979,0.014031501486897469,0.014373516663908958,0.014715533703565598,0.015057548880577087,0.015399564057588577],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.07622425258159637,-0.07385586947202682,-0.07148748636245728,-0.06911909580230713,-0.06675071269273758,-0.06438232958316803,-0.06201394647359848,-0.05964556336402893,-0.05727717652916908,-0.054908789694309235,-0.052540406584739685,-0.050172023475170135,-0.047803640365600586,-0.04543525353074074,-0.04306687042117119,-0.04069848358631134,-0.03833010047674179,-0.03596171736717224,-0.03359333053231239,-0.031224947422742844,-0.028856560587882996,-0.026488177478313446,-0.024119794368743896,-0.02175140753388405,-0.0193830244243145,-0.01701464131474495,-0.014646254479885101,-0.012277871370315552,-0.009909488260746002,-0.007541105151176453,-0.005172714591026306,-0.0028043314814567566,-0.00043594837188720703,0.0019324347376823425,0.004300817847251892,0.006669208407402039,0.009037591516971588,0.011405974626541138,0.013774357736110687,0.016142740845680237,0.018511131405830383,0.020879514515399933,0.023247897624969482,0.025616280734539032,0.02798466384410858,0.03035304695367813,0.03272143751382828,0.03508982062339783,0.03745820373296738,0.039826586842536926,0.042194969952106476,0.04456336051225662,0.04693174362182617,0.049300119280815125,0.05166850984096527,0.05403690040111542,0.05640527606010437,0.05877366662025452,0.06114204227924347,0.06351043283939362,0.06587882339954376,0.06824719905853271,0.07061558961868286,0.07298396527767181,0.07535235583782196],"_type":"histogram","values":[1,2,2,4,0,3,3,1,11,7,15,14,23,25,27,43,59,66,75,106,101,128,148,168,174,206,231,240,275,266,300,299,271,298,285,266,270,214,209,214,192,142,152,94,103,94,63,48,43,36,29,22,19,17,12,8,5,3,1,6,3,1,0,1]},"_step":2,"val_acc":0.24964539007092199,"train_acc":0.2603407873430231,"_runtime":1133.4028816223145,"_timestamp":1.5795095439217126e+09}
-++{"gradients/classifier.bias":{"values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.06606416404247284,-0.06390783190727234,-0.06175149977207184,-0.05959516763687134,-0.05743883550167084,-0.05528250336647034,-0.053126171231269836,-0.050969839096069336,-0.048813506960868835,-0.046657174825668335,-0.044500842690467834,-0.042344510555267334,-0.040188178420066833,-0.03803184628486633,-0.03587551414966583,-0.03371918201446533,-0.03156284987926483,-0.02940651774406433,-0.02725018560886383,-0.02509385347366333,-0.02293752133846283,-0.02078118920326233,-0.01862485706806183,-0.016468524932861328,-0.014312192797660828,-0.012155860662460327,-0.009999528527259827,-0.007843196392059326,-0.005686864256858826,-0.003530532121658325,-0.0013741999864578247,0.0007821321487426758,0.0029384642839431763,0.005094796419143677,0.007251128554344177,0.009407460689544678,0.011563792824745178,0.013720124959945679,0.01587645709514618,0.01803278923034668,0.02018912136554718,0.02234545350074768,0.02450178563594818,0.02665811777114868,0.028814449906349182,0.030970782041549683,0.03312711417675018,0.035283446311950684,0.037439778447151184,0.039596110582351685,0.041752442717552185,0.043908774852752686,0.046065106987953186,0.048221439123153687,0.05037777125835419,0.05253410339355469,0.05469043552875519,0.05684676766395569,0.05900309979915619,0.06115943193435669,0.06331576406955719,0.06547209620475769,0.06762842833995819,0.06978476047515869,0.07194109261035919],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.09906706213951111,-0.09581608325242996,-0.09256510436534882,-0.08931412547826767,-0.08606314659118652,-0.08281217515468597,-0.07956118881702423,-0.07631021738052368,-0.07305923849344254,-0.06980825960636139,-0.06655728071928024,-0.0633063018321991,-0.06005532294511795,-0.056804344058036804,-0.053553368896245956,-0.05030239000916481,-0.047051411122083664,-0.04380043223500252,-0.04054945334792137,-0.037298478186130524,-0.03404749929904938,-0.03079652041196823,-0.027545541524887085,-0.02429456263780594,-0.021043583750724792,-0.017792604863643646,-0.0145416259765625,-0.01129065454006195,-0.008039675652980804,-0.004788696765899658,-0.001537717878818512,0.0017132610082626343,0.0049642398953437805,0.008215218782424927,0.011466197669506073,0.01471717655658722,0.017968155443668365,0.02121913433074951,0.02447010576725006,0.027721092104911804,0.030972063541412354,0.0342230498790741,0.037474021315574646,0.040724992752075195,0.04397597908973694,0.04722695052623749,0.05047793686389923,0.05372890830039978,0.05697989463806152,0.06023086607456207,0.06348185241222382,0.06673282384872437,0.06998381018638611,0.07323478162288666,0.07648575305938721,0.07973673939704895,0.0829877108335495,0.08623869717121124,0.08948966860771179,0.09274065494537354,0.09599162638187408,0.09924261271953583,0.10249358415603638,0.10574457049369812,0.10899554193019867],"_type":"histogram","values":[1,0,0,0,2,2,0,4,3,6,10,11,14,22,31,43,53,58,86,101,112,160,183,225,221,275,317,314,310,329,323,356,343,312,332,263,237,192,175,162,123,83,77,78,50,43,29,27,12,11,6,5,4,3,0,0,1,0,0,1,1,0,1,1]},"_step":3,"val_acc":0.26222222222222225,"train_acc":0.2627868635921119,"_runtime":1291.7072627544403,"_timestamp":1.5795097022260938e+09}
-++{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.037257447838783264,-0.035971060395240784,-0.034684669226408005,-0.033398281782865524,-0.032111890614032745,-0.030825503170490265,-0.029539113864302635,-0.028252724558115005,-0.026966335251927376,-0.025679945945739746,-0.024393556639552116,-0.023107167333364487,-0.021820779889822006,-0.020534390583634377,-0.019248001277446747,-0.017961611971259117,-0.016675222665071487,-0.015388833358883858,-0.014102444052696228,-0.012816054746508598,-0.011529665440320969,-0.010243277996778488,-0.008956888690590858,-0.007670499384403229,-0.006384110078215599,-0.005097720772027969,-0.003811333328485489,-0.00252494215965271,-0.0012385547161102295,4.783645272254944e-05,0.00133422389626503,0.002620615065097809,0.003907002508640289,0.00519338995218277,0.006479781121015549,0.007766168564558029,0.009052559733390808,0.010338947176933289,0.011625338345766068,0.012911725789308548,0.014198116958141327,0.015484504401683807,0.016770891845226288,0.018057283014059067,0.019343670457601547,0.020630061626434326,0.021916449069976807,0.023202840238809586,0.024489227682352066,0.025775618851184845,0.027062006294727325,0.028348393738269806,0.029634781181812286,0.030921176075935364,0.032207563519477844,0.033493950963020325,0.034780338406562805,0.036066725850105286,0.03735312074422836,0.038639508187770844,0.039925895631313324,0.041212283074855804,0.04249867796897888,0.04378506541252136,0.04507145285606384]},"gradients/classifier.weight":{"bins":[-0.0888357013463974,-0.08612215518951416,-0.08340860903263092,-0.08069506287574768,-0.07798151671886444,-0.0752679631114006,-0.07255441695451736,-0.06984087079763412,-0.06712732464075089,-0.06441377848386765,-0.061700232326984406,-0.05898668244481087,-0.05627313628792763,-0.05355959013104439,-0.05084604024887085,-0.04813249409198761,-0.04541894793510437,-0.04270540177822113,-0.03999185562133789,-0.03727830573916435,-0.03456475958228111,-0.03185121342539787,-0.029137663543224335,-0.026424117386341095,-0.023710571229457855,-0.020997025072574615,-0.018283478915691376,-0.015569932758808136,-0.0128563791513443,-0.01014283299446106,-0.00742928683757782,-0.00471574068069458,-0.0020021945238113403,0.0007113516330718994,0.003424897789955139,0.006138443946838379,0.008851990103721619,0.011565543711185455,0.014279089868068695,0.016992636024951935,0.019706182181835175,0.022419728338718414,0.025133274495601654,0.027846820652484894,0.03056037425994873,0.03327392041683197,0.03598746657371521,0.03870101273059845,0.04141455888748169,0.04412810504436493,0.04684165120124817,0.04955519735813141,0.05226874351501465,0.05498228967189789,0.05769583582878113,0.06040938198566437,0.0631229430437088,0.06583648920059204,0.06855003535747528,0.07126358151435852,0.07397712767124176,0.076690673828125,0.07940421998500824,0.08211776614189148,0.08483131229877472],"_type":"histogram","values":[1,0,0,0,2,0,1,0,10,6,9,13,11,18,18,29,47,58,58,70,96,103,104,181,183,180,232,264,280,262,304,320,289,307,281,323,255,289,218,224,185,155,132,132,118,76,65,59,48,22,30,26,17,9,5,3,4,2,3,3,1,2,0,1]},"_step":4,"val_acc":0.262789598108747,"train_acc":0.2653650279586515,"_runtime":1448.6882483959198,"_timestamp":1.5795098592070794e+09}
-+diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json b/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-+index 3724adb..0ce5b0d 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-++++ b/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-+@@ -3,10 +3,10 @@
-+     "program": "<python with no main file>",
-+     "git": {
-+         "remote": "https://github.com/ubamba98/droughtwatch",
-+-        "commit": "fea1daedb6b14125e1dec2c49a5e3b211d016f90"
-++        "commit": "4e7b9b38b8d5d3ec44d43373b8e263f50ead87a3"
-+     },
-+     "email": "ubamba98@gmail.com",
-+-    "startedAt": "2020-01-20T08:23:13.672686",
-++    "startedAt": "2020-01-20T08:44:21.248355",
-+     "host": "ccw-iclr",
-+     "username": "ubamba98",
-+     "executable": "/home/ubamba98/anaconda3/bin/python",
-+@@ -25,5 +25,5 @@
-+     "mode": "run",
-+     "name": "efficentnet-b3-765",
-+     "project": "droughtwatch",
-+-    "heartbeatAt": "2020-01-20T08:36:16.324952"
-++    "heartbeatAt": "2020-01-20T08:44:22.172990"
-+ }
-+diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-summary.json b/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-+index 05e4af4..27d2e55 100644
-+--- a/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-++++ b/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-+@@ -1 +1 @@
-+-{"graph_0": {"_type": "graph", "format": "torch", "nodes": [{"name": "conv_stem", "id": 140438557381128, "class_name": "Conv2dSame(3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False)", "parameters": [["weight", [40, 3, 3, 3]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [1080]}, {"name": "bn1", "id": 140438557383704, "class_name": "BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [40]], ["bias", [40]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [40, 40]}, {"name": "blocks.0.0", "id": 140438557382920, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)\n  (bn1): BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [40, 1, 3, 3]], ["bn1.weight", [40]], ["bn1.bias", [40]], ["se.conv_reduce.weight", [10, 40, 1, 1]], ["se.conv_reduce.bias", [10]], ["se.conv_expand.weight", [40, 10, 1, 1]], ["se.conv_expand.bias", [40]], ["conv_pw.weight", [24, 40, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [360, 40, 40, 400, 10, 400, 40, 960, 24, 24]}, {"name": "blocks.0.1", "id": 140438680665224, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)\n  (bn1): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [24, 1, 3, 3]], ["bn1.weight", [24]], ["bn1.bias", [24]], ["se.conv_reduce.weight", [6, 24, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [24, 6, 1, 1]], ["se.conv_expand.bias", [24]], ["conv_pw.weight", [24, 24, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [216, 24, 24, 144, 6, 144, 24, 576, 24, 24]}, {"name": "blocks.1.0", "id": 140438676598736, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(144, 144, kernel_size=(3, 3), stride=(2, 2), groups=144, bias=False)\n  (bn2): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [144, 24, 1, 1]], ["bn1.weight", [144]], ["bn1.bias", [144]], ["conv_dw.weight", [144, 1, 3, 3]], ["bn2.weight", [144]], ["bn2.bias", [144]], ["se.conv_reduce.weight", [6, 144, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [144, 6, 1, 1]], ["se.conv_expand.bias", [144]], ["conv_pwl.weight", [32, 144, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 4608, 32, 32]}, {"name": "blocks.1.1", "id": 140438557424160, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.1.2", "id": 140438679559640, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.2.0", "id": 140438679470320, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(192, 192, kernel_size=(5, 5), stride=(2, 2), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 5, 5]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [48, 192, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [6144, 192, 192, 4800, 192, 192, 1536, 8, 1536, 192, 9216, 48, 48]}, {"name": "blocks.2.1", "id": 140438557424384, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.2.2", "id": 140438557422704, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.3.0", "id": 140438557421920, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(288, 288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 3, 3]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [96, 288, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [13824, 288, 288, 2592, 288, 288, 3456, 12, 3456, 288, 27648, 96, 96]}, {"name": "blocks.3.1", "id": 140438557422816, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.2", "id": 140438557824392, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.3", "id": 140438557825232, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.4", "id": 140438557825176, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.4.0", "id": 140438557824672, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 5, 5]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [136, 576, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [55296, 576, 576, 14400, 576, 576, 13824, 24, 13824, 576, 78336, 136, 136]}, {"name": "blocks.4.1", "id": 140438557823496, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.2", "id": 140438679158968, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.3", "id": 140438679496744, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.4", "id": 140438679422456, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.5.0", "id": 140438679421448, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(816, 816, kernel_size=(5, 5), stride=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [232, 816, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 189312, 232, 232]}, {"name": "blocks.5.1", "id": 140438679580400, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.2", "id": 140438679115088, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.3", "id": 140438676984832, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.4", "id": 140440670709296, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.5", "id": 140440670710192, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.6.0", "id": 140440670709464, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 3, 3]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [384, 1392, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [322944, 1392, 1392, 12528, 1392, 1392, 80736, 58, 80736, 1392, 534528, 384, 384]}, {"name": "blocks.6.1", "id": 140438679947864, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(384, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)\n  (bn2): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(2304, 96, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(96, 2304, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(2304, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [2304, 384, 1, 1]], ["bn1.weight", [2304]], ["bn1.bias", [2304]], ["conv_dw.weight", [2304, 1, 3, 3]], ["bn2.weight", [2304]], ["bn2.bias", [2304]], ["se.conv_reduce.weight", [96, 2304, 1, 1]], ["se.conv_reduce.bias", [96]], ["se.conv_expand.weight", [2304, 96, 1, 1]], ["se.conv_expand.bias", [2304]], ["conv_pwl.weight", [384, 2304, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [884736, 2304, 2304, 20736, 2304, 2304, 221184, 96, 221184, 2304, 884736, 384, 384]}, {"name": "conv_head", "id": 140438557382584, "class_name": "Conv2d(384, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)", "parameters": [["weight", [1536, 384, 1, 1]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [589824]}, {"name": "bn2", "id": 140438703610848, "class_name": "BatchNorm2d(1536, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [1536]], ["bias", [1536]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [1536, 1536]}, {"name": "global_pool", "id": 140438703610792, "class_name": "SelectAdaptivePool2d (output_size=1, pool_type=avg)", "parameters": [], "output_shape": [[256, 1536, 1, 1]], "num_parameters": []}, {"name": "classifier", "id": 140438679885696, "class_name": "Linear(in_features=1536, out_features=4, bias=True)", "parameters": [["weight", [4, 1536]], ["bias", [4]]], "output_shape": [[256, 4]], "num_parameters": [6144, 4]}], "edges": []}, "train_acc": 0.25812953441384673, "_step": 0, "gradients/classifier.weight": {"_type": "histogram", "values": [1.0, 1.0, 1.0, 0.0, 3.0, 1.0, 5.0, 2.0, 4.0, 10.0, 9.0, 17.0, 15.0, 21.0, 30.0, 49.0, 53.0, 61.0, 86.0, 96.0, 118.0, 155.0, 170.0, 210.0, 214.0, 249.0, 229.0, 254.0, 272.0, 299.0, 314.0, 295.0, 344.0, 291.0, 277.0, 262.0, 259.0, 239.0, 186.0, 184.0, 169.0, 136.0, 111.0, 97.0, 83.0, 60.0, 47.0, 38.0, 19.0, 23.0, 20.0, 13.0, 17.0, 7.0, 8.0, 4.0, 1.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.09012244641780853, -0.08724749088287354, -0.08437253534793854, -0.08149757981300354, -0.07862262427806854, -0.07574766874313354, -0.07287271320819855, -0.06999775767326355, -0.06712280213832855, -0.06424784660339355, -0.06137289106845856, -0.05849793553352356, -0.05562297999858856, -0.052748024463653564, -0.04987306892871857, -0.04699811339378357, -0.04412315785884857, -0.041248202323913574, -0.03837324678897858, -0.03549829125404358, -0.03262333571910858, -0.029748380184173584, -0.026873424649238586, -0.02399846911430359, -0.02112351357936859, -0.018248558044433594, -0.015373602509498596, -0.012498646974563599, -0.009623691439628601, -0.0067487359046936035, -0.003873780369758606, -0.0009988248348236084, 0.0018761307001113892, 0.004751086235046387, 0.007626041769981384, 0.010500997304916382, 0.01337595283985138, 0.016250908374786377, 0.019125863909721375, 0.022000819444656372, 0.02487577497959137, 0.027750730514526367, 0.030625686049461365, 0.03350064158439636, 0.03637559711933136, 0.03925055265426636, 0.042125508189201355, 0.04500046372413635, 0.04787541925907135, 0.05075037479400635, 0.053625330328941345, 0.05650028586387634, 0.05937524139881134, 0.06225019693374634, 0.06512515246868134, 0.06800010800361633, 0.07087506353855133, 0.07375001907348633, 0.07662497460842133, 0.07949993014335632, 0.08237488567829132, 0.08524984121322632, 0.08812479674816132, 0.09099975228309631, 0.09387470781803131]}, "gradients/classifier.bias": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.0654682070016861, -0.06339701265096664, -0.06132581830024719, -0.05925462394952774, -0.05718342587351799, -0.05511223152279854, -0.053041037172079086, -0.050969842821359634, -0.048898644745349884, -0.04682745039463043, -0.04475625604391098, -0.04268506169319153, -0.040613867342472076, -0.038542672991752625, -0.03647147864103317, -0.03440028056502342, -0.03232908621430397, -0.03025789186358452, -0.028186697512865067, -0.026115499436855316, -0.024044305086135864, -0.021973110735416412, -0.01990191638469696, -0.01783072203397751, -0.015759527683258057, -0.013688329607248306, -0.011617135256528854, -0.009545940905809402, -0.0074747465550899506, -0.005403552204370499, -0.0033323541283607483, -0.0012611597776412964, 0.0008100345730781555, 0.0028812289237976074, 0.004952423274517059, 0.007023617625236511, 0.009094811975955963, 0.011166006326675415, 0.013237208127975464, 0.015308402478694916, 0.017379596829414368, 0.01945079118013382, 0.02152198553085327, 0.023593179881572723, 0.025664374232292175, 0.027735568583011627, 0.02980676293373108, 0.03187795728445053, 0.03394915163516998, 0.03602035343647003, 0.038091547787189484, 0.040162742137908936, 0.04223393648862839, 0.04430513083934784, 0.04637632519006729, 0.04844751954078674, 0.050518713891506195, 0.05258990824222565, 0.0546611025929451, 0.05673230439424515, 0.0588034987449646, 0.060874685645103455, 0.0629458874464035, 0.06501707434654236, 0.06708827614784241]}, "val_acc": 0.23687943262411348, "_runtime": 814.0969541072845, "_timestamp": 1579509224.6157851}
-++{"graph_0": {"_type": "graph", "edges": [], "nodes": [{"id": 140438557381128, "name": "conv_stem", "class_name": "Conv2dSame(3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False)", "parameters": [["weight", [40, 3, 3, 3]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [1080]}, {"id": 140438557383704, "name": "bn1", "class_name": "BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [40]], ["bias", [40]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [40, 40]}, {"id": 140438557382920, "name": "blocks.0.0", "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)\n  (bn1): BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [40, 1, 3, 3]], ["bn1.weight", [40]], ["bn1.bias", [40]], ["se.conv_reduce.weight", [10, 40, 1, 1]], ["se.conv_reduce.bias", [10]], ["se.conv_expand.weight", [40, 10, 1, 1]], ["se.conv_expand.bias", [40]], ["conv_pw.weight", [24, 40, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [360, 40, 40, 400, 10, 400, 40, 960, 24, 24]}, {"id": 140438680665224, "name": "blocks.0.1", "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)\n  (bn1): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [24, 1, 3, 3]], ["bn1.weight", [24]], ["bn1.bias", [24]], ["se.conv_reduce.weight", [6, 24, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [24, 6, 1, 1]], ["se.conv_expand.bias", [24]], ["conv_pw.weight", [24, 24, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [216, 24, 24, 144, 6, 144, 24, 576, 24, 24]}, {"id": 140438676598736, "name": "blocks.1.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(144, 144, kernel_size=(3, 3), stride=(2, 2), groups=144, bias=False)\n  (bn2): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [144, 24, 1, 1]], ["bn1.weight", [144]], ["bn1.bias", [144]], ["conv_dw.weight", [144, 1, 3, 3]], ["bn2.weight", [144]], ["bn2.bias", [144]], ["se.conv_reduce.weight", [6, 144, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [144, 6, 1, 1]], ["se.conv_expand.bias", [144]], ["conv_pwl.weight", [32, 144, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 4608, 32, 32]}, {"id": 140438557424160, "name": "blocks.1.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"id": 140438679559640, "name": "blocks.1.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"id": 140438679470320, "name": "blocks.2.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(192, 192, kernel_size=(5, 5), stride=(2, 2), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 5, 5]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [48, 192, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [6144, 192, 192, 4800, 192, 192, 1536, 8, 1536, 192, 9216, 48, 48]}, {"id": 140438557424384, "name": "blocks.2.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"id": 140438557422704, "name": "blocks.2.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"id": 140438557421920, "name": "blocks.3.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(288, 288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 3, 3]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [96, 288, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [13824, 288, 288, 2592, 288, 288, 3456, 12, 3456, 288, 27648, 96, 96]}, {"id": 140438557422816, "name": "blocks.3.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557824392, "name": "blocks.3.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557825232, "name": "blocks.3.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557825176, "name": "blocks.3.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 140438557824672, "name": "blocks.4.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 5, 5]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [136, 576, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [55296, 576, 576, 14400, 576, 576, 13824, 24, 13824, 576, 78336, 136, 136]}, {"id": 140438557823496, "name": "blocks.4.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679158968, "name": "blocks.4.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679496744, "name": "blocks.4.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679422456, "name": "blocks.4.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 140438679421448, "name": "blocks.5.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(816, 816, kernel_size=(5, 5), stride=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [232, 816, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 189312, 232, 232]}, {"id": 140438679580400, "name": "blocks.5.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140438679115088, "name": "blocks.5.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140438676984832, "name": "blocks.5.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140440670709296, "name": "blocks.5.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140440670710192, "name": "blocks.5.5", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 140440670709464, "name": "blocks.6.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 3, 3]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [384, 1392, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [322944, 1392, 1392, 12528, 1392, 1392, 80736, 58, 80736, 1392, 534528, 384, 384]}, {"id": 140438679947864, "name": "blocks.6.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(384, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)\n  (bn2): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(2304, 96, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(96, 2304, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(2304, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [2304, 384, 1, 1]], ["bn1.weight", [2304]], ["bn1.bias", [2304]], ["conv_dw.weight", [2304, 1, 3, 3]], ["bn2.weight", [2304]], ["bn2.bias", [2304]], ["se.conv_reduce.weight", [96, 2304, 1, 1]], ["se.conv_reduce.bias", [96]], ["se.conv_expand.weight", [2304, 96, 1, 1]], ["se.conv_expand.bias", [2304]], ["conv_pwl.weight", [384, 2304, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [884736, 2304, 2304, 20736, 2304, 2304, 221184, 96, 221184, 2304, 884736, 384, 384]}, {"id": 140438557382584, "name": "conv_head", "class_name": "Conv2d(384, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)", "parameters": [["weight", [1536, 384, 1, 1]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [589824]}, {"id": 140438703610848, "name": "bn2", "class_name": "BatchNorm2d(1536, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [1536]], ["bias", [1536]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [1536, 1536]}, {"id": 140438703610792, "name": "global_pool", "class_name": "SelectAdaptivePool2d (output_size=1, pool_type=avg)", "parameters": [], "output_shape": [[256, 1536, 1, 1]], "num_parameters": []}, {"id": 140438679885696, "name": "classifier", "class_name": "Linear(in_features=1536, out_features=4, bias=True)", "parameters": [["weight", [4, 1536]], ["bias", [4]]], "output_shape": [[256, 4]], "num_parameters": [6144, 4]}], "format": "torch"}, "train_acc": 0.2653650279586515, "_step": 4, "gradients/classifier.weight": {"bins": [-0.0888357013463974, -0.08612215518951416, -0.08340860903263092, -0.08069506287574768, -0.07798151671886444, -0.0752679631114006, -0.07255441695451736, -0.06984087079763412, -0.06712732464075089, -0.06441377848386765, -0.061700232326984406, -0.05898668244481087, -0.05627313628792763, -0.05355959013104439, -0.05084604024887085, -0.04813249409198761, -0.04541894793510437, -0.04270540177822113, -0.03999185562133789, -0.03727830573916435, -0.03456475958228111, -0.03185121342539787, -0.029137663543224335, -0.026424117386341095, -0.023710571229457855, -0.020997025072574615, -0.018283478915691376, -0.015569932758808136, -0.0128563791513443, -0.01014283299446106, -0.00742928683757782, -0.00471574068069458, -0.0020021945238113403, 0.0007113516330718994, 0.003424897789955139, 0.006138443946838379, 0.008851990103721619, 0.011565543711185455, 0.014279089868068697, 0.016992636024951935, 0.019706182181835175, 0.022419728338718414, 0.025133274495601658, 0.027846820652484897, 0.03056037425994873, 0.03327392041683197, 0.03598746657371521, 0.03870101273059845, 0.04141455888748169, 0.04412810504436493, 0.04684165120124817, 0.04955519735813141, 0.05226874351501465, 0.05498228967189789, 0.05769583582878113, 0.06040938198566437, 0.0631229430437088, 0.06583648920059204, 0.06855003535747528, 0.07126358151435852, 0.07397712767124176, 0.076690673828125, 0.07940421998500824, 0.08211776614189148, 0.08483131229877472], "_type": "histogram", "values": [1, 0, 0, 0, 2, 0, 1, 0, 10, 6, 9, 13, 11, 18, 18, 29, 47, 58, 58, 70, 96, 103, 104, 181, 183, 180, 232, 264, 280, 262, 304, 320, 289, 307, 281, 323, 255, 289, 218, 224, 185, 155, 132, 132, 118, 76, 65, 59, 48, 22, 30, 26, 17, 9, 5, 3, 4, 2, 3, 3, 1, 2, 0, 1]}, "gradients/classifier.bias": {"bins": [-0.037257447838783264, -0.035971060395240784, -0.034684669226408005, -0.033398281782865524, -0.032111890614032745, -0.030825503170490265, -0.029539113864302635, -0.028252724558115005, -0.026966335251927376, -0.025679945945739743, -0.024393556639552116, -0.023107167333364487, -0.02182077988982201, -0.020534390583634377, -0.019248001277446747, -0.017961611971259117, -0.016675222665071487, -0.015388833358883858, -0.014102444052696228, -0.012816054746508598, -0.011529665440320969, -0.010243277996778488, -0.008956888690590858, -0.007670499384403229, -0.006384110078215599, -0.005097720772027969, -0.003811333328485489, -0.00252494215965271, -0.0012385547161102295, 4.783645272254944e-05, 0.00133422389626503, 0.002620615065097809, 0.003907002508640289, 0.00519338995218277, 0.006479781121015549, 0.007766168564558029, 0.009052559733390808, 0.010338947176933289, 0.011625338345766068, 0.012911725789308548, 0.014198116958141329, 0.015484504401683807, 0.016770891845226288, 0.018057283014059067, 0.019343670457601547, 0.02063006162643433, 0.021916449069976807, 0.023202840238809586, 0.024489227682352063, 0.025775618851184845, 0.027062006294727325, 0.02834839373826981, 0.029634781181812286, 0.030921176075935364, 0.032207563519477844, 0.033493950963020325, 0.034780338406562805, 0.036066725850105286, 0.03735312074422836, 0.03863950818777085, 0.03992589563131333, 0.04121228307485581, 0.04249867796897888, 0.04378506541252136, 0.04507145285606384], "_type": "histogram", "values": [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]}, "val_acc": 0.262789598108747, "_runtime": 1448.6882483959198, "_timestamp": 1579509859.2070794}
-diff --git a/wandb/run-20200120_081855-gzutdaae/requirements.txt b/wandb/run-20200120_081855-gzutdaae/requirements.txt
-new file mode 100644
-index 0000000..2143393
---- /dev/null
-+++ b/wandb/run-20200120_081855-gzutdaae/requirements.txt
-@@ -0,0 +1,267 @@
-+absl-py==0.9.0
-+alabaster==0.7.12
-+albumentations==0.4.3
-+anaconda-client==1.7.2
-+anaconda-navigator==1.9.7
-+anaconda-project==0.8.3
-+argh==0.26.2
-+asn1crypto==1.3.0
-+astroid==2.3.3
-+astropy==4.0
-+atomicwrites==1.3.0
-+attrs==19.3.0
-+autopep8==1.4.4
-+babel==2.8.0
-+backcall==0.1.0
-+backports.os==0.1.1
-+backports.shutil-get-terminal-size==1.0.0
-+beautifulsoup4==4.8.2
-+bitarray==1.2.0
-+bkcharts==0.2
-+bleach==3.1.0
-+bokeh==1.4.0
-+boto==2.49.0
-+bottleneck==1.3.1
-+cachetools==4.0.0
-+catalyst==20.1
-+certifi==2019.11.28
-+cffi==1.13.2
-+chardet==3.0.4
-+click==7.0
-+cloudpickle==1.2.2
-+clyent==1.2.2
-+colorama==0.4.3
-+conda-build==3.17.8
-+conda-package-handling==1.6.0
-+conda-verify==3.1.1
-+conda==4.8.1
-+configparser==4.0.2
-+contextlib2==0.6.0.post1
-+crc32c==2.0
-+cryptography==2.8
-+cycler==0.10.0
-+cython==0.29.14
-+cytoolz==0.10.1
-+dask==2.9.1
-+decorator==4.4.1
-+defusedxml==0.6.0
-+diff-match-patch==20181111
-+distributed==2.9.1
-+docker-pycreds==0.4.0
-+docutils==0.15.2
-+entrypoints==0.3
-+et-xmlfile==1.0.1
-+fastcache==1.1.0
-+filelock==3.0.12
-+flake8==3.7.9
-+flask==1.1.1
-+fsspec==0.6.2
-+future==0.18.2
-+gevent==1.4.0
-+gitdb2==2.0.6
-+gitpython==3.0.5
-+glob2==0.7
-+gmpy2==2.0.8
-+google-auth-oauthlib==0.4.1
-+google-auth==1.10.1
-+gql==0.2.0
-+graphql-core==1.1
-+greenlet==0.4.15
-+grpcio==1.26.0
-+h5py==2.9.0
-+heapdict==1.0.1
-+html5lib==1.0.1
-+hypothesis==4.54.2
-+idna==2.8
-+imageio==2.6.1
-+imagesize==1.2.0
-+imgaug==0.2.6
-+importlib-metadata==1.3.0
-+intervaltree==3.0.2
-+ipykernel==5.1.3
-+ipython-genutils==0.2.0
-+ipython==7.11.1
-+ipywidgets==7.5.1
-+isort==4.3.21
-+itsdangerous==1.1.0
-+jdcal==1.4.1
-+jedi==0.14.1
-+jeepney==0.4.2
-+jinja2==2.10.3
-+joblib==0.14.1
-+json5==0.8.5
-+jsonschema==3.2.0
-+jupyter-client==5.3.4
-+jupyter-console==6.0.0
-+jupyter-core==4.6.1
-+jupyter==1.0.0
-+jupyterlab-server==1.0.6
-+jupyterlab==1.2.4
-+keyring==20.0.0
-+kiwisolver==1.1.0
-+lazy-object-proxy==1.4.3
-+libarchive-c==2.8
-+lief==0.9.0
-+llvmlite==0.31.0
-+locket==0.2.0
-+lxml==4.4.2
-+markdown==3.1.1
-+markupsafe==1.1.1
-+matplotlib==3.1.1
-+mccabe==0.6.1
-+mistune==0.8.4
-+mkl-fft==1.0.15
-+mkl-random==1.1.0
-+mkl-service==2.3.0
-+mock==3.0.5
-+more-itertools==8.0.2
-+mpmath==1.1.0
-+msgpack==0.6.1
-+multipledispatch==0.6.0
-+navigator-updater==0.2.1
-+nbconvert==5.6.1
-+nbformat==4.4.0
-+networkx==2.4
-+nltk==3.4.5
-+nose==1.3.7
-+notebook==6.0.2
-+numba==0.47.0
-+numexpr==2.7.0
-+numpy==1.18.1
-+numpydoc==0.9.2
-+nvidia-ml-py3==7.352.0
-+oauthlib==3.1.0
-+olefile==0.46
-+opencv-python-headless==4.1.2.30
-+opencv-python==4.1.2.30
-+openpyxl==3.0.2
-+packaging==20.0
-+pandas==0.25.3
-+pandocfilters==1.4.2
-+parso==0.5.2
-+partd==1.1.0
-+path==13.1.0
-+pathlib2==2.3.5
-+pathtools==0.1.2
-+patsy==0.5.1
-+pep8==1.7.1
-+pexpect==4.7.0
-+pickleshare==0.7.5
-+pillow==6.2.1
-+pip==19.3.1
-+pkginfo==1.5.0.1
-+plotly==4.4.1
-+pluggy==0.13.1
-+ply==3.11
-+prometheus-client==0.7.1
-+promise==2.3
-+prompt-toolkit==2.0.10
-+protobuf==3.11.2
-+psutil==5.6.7
-+ptyprocess==0.6.0
-+py==1.8.1
-+pyasn1-modules==0.2.8
-+pyasn1==0.4.8
-+pycodestyle==2.5.0
-+pycosat==0.6.3
-+pycparser==2.19
-+pycrypto==2.6.1
-+pycurl==7.43.0.3
-+pydocstyle==4.0.1
-+pyflakes==2.1.1
-+pygments==2.5.2
-+pylint==2.4.4
-+pyodbc==4.0.27
-+pyopenssl==19.1.0
-+pyparsing==2.4.6
-+pyrsistent==0.15.6
-+pysocks==1.7.1
-+pytest-arraydiff==0.3
-+pytest-astropy-header==0.1.1
-+pytest-astropy==0.7.0
-+pytest-doctestplus==0.5.0
-+pytest-openfiles==0.4.0
-+pytest-remotedata==0.3.2
-+pytest==5.3.2
-+python-dateutil==2.8.1
-+python-jsonrpc-server==0.3.2
-+python-language-server==0.31.2
-+pytz==2019.3
-+pywavelets==1.1.1
-+pyxdg==0.26
-+pyyaml==5.2
-+pyzmq==18.1.0
-+qdarkstyle==2.7
-+qtawesome==0.6.0
-+qtconsole==4.6.0
-+qtpy==1.9.0
-+requests-oauthlib==1.3.0
-+requests==2.22.0
-+retrying==1.3.3
-+rope==0.14.0
-+rsa==4.0
-+rtree==0.8.3
-+ruamel-yaml==0.15.87
-+safitty==1.3
-+scikit-image==0.15.0
-+scikit-learn==0.22.1
-+scipy==1.3.2
-+seaborn==0.9.0
-+secretstorage==3.1.1
-+send2trash==1.5.0
-+sentry-sdk==0.14.0
-+setuptools==45.0.0
-+shortuuid==0.5.0
-+simplegeneric==0.8.1
-+singledispatch==3.4.0.3
-+six==1.13.0
-+smmap2==2.0.5
-+snowballstemmer==2.0.0
-+sortedcollections==1.1.2
-+sortedcontainers==2.1.0
-+soupsieve==1.9.5
-+sphinx==2.3.1
-+sphinxcontrib-applehelp==1.0.1
-+sphinxcontrib-devhelp==1.0.1
-+sphinxcontrib-htmlhelp==1.0.2
-+sphinxcontrib-jsmath==1.0.1
-+sphinxcontrib-qthelp==1.0.2
-+sphinxcontrib-serializinghtml==1.1.3
-+sphinxcontrib-websupport==1.1.2
-+spyder-kernels==1.8.1
-+spyder==4.0.1
-+sqlalchemy==1.3.12
-+statsmodels==0.10.1
-+subprocess32==3.5.4
-+sympy==1.5.1
-+tables==3.6.1
-+tblib==1.6.0
-+tensorboard==2.1.0
-+tensorboardx==2.0
-+terminado==0.8.3
-+testpath==0.4.4
-+timm==0.1.14
-+toolz==0.10.0
-+torch==1.2.0
-+torchvision==0.4.0a0
-+tornado==6.0.3
-+tqdm==4.41.1
-+traitlets==4.3.3
-+ujson==1.35
-+unicodecsv==0.14.1
-+urllib3==1.25.7
-+wandb==0.8.21
-+watchdog==0.9.0
-+wcwidth==0.1.7
-+webencodings==0.5.1
-+werkzeug==0.16.0
-+wheel==0.33.6
-+widgetsnbextension==3.5.1
-+wrapt==1.11.2
-+wurlitzer==2.0.0
-+xlrd==1.2.0
-+xlsxwriter==1.2.7
-+xlwt==1.3.0
-+yapf==0.28.0
-+zict==1.0.0
-+zipp==0.6.0
-\ No newline at end of file
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-new file mode 100644
-index 0000000..97ebdd9
---- /dev/null
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-events.jsonl
-@@ -0,0 +1,36 @@
-+{"system.network.sent":10977141,"system.gpu.0.powerPercent":96.79,"system.network.recv":7409894,"system.disk":22.4,"system.gpu.0.powerWatts":67.75,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":65.33,"system.gpu.0.gpu":85.6,"_runtime":1008,"system.proc.memory.rssMB":2966.29,"system.proc.memory.availableMB":11506.94,"system.cpu":98.25,"system.proc.cpu.threads":28,"system.memory":23.5,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509601}
-+{"system.network.sent":11502749,"system.gpu.0.powerPercent":97.46,"system.network.recv":7764756,"system.disk":22.4,"system.gpu.0.powerWatts":68.23,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":60.73,"system.gpu.0.gpu":85.87,"_runtime":1039,"system.proc.memory.rssMB":2962.16,"system.proc.memory.availableMB":11528.19,"system.cpu":97.55,"system.proc.cpu.threads":27.47,"system.memory":23.37,"system.proc.memory.percent":19.69,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509631}
-+{"system.network.sent":11508976,"system.gpu.0.powerPercent":102.06,"system.network.recv":7771440,"system.disk":22.4,"system.gpu.0.powerWatts":71.44,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.53,"system.gpu.0.gpu":85.6,"_runtime":1069,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11533.16,"system.cpu":99.91,"system.proc.cpu.threads":27,"system.memory":23.34,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509662}
-+{"system.network.sent":11522899,"system.gpu.0.powerPercent":93.89,"system.network.recv":7774171,"system.disk":22.4,"system.gpu.0.powerWatts":65.73,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.8,"_runtime":1099,"system.proc.memory.rssMB":2958.67,"system.proc.memory.availableMB":11449.37,"system.cpu":99.9,"system.proc.cpu.threads":27,"system.memory":23.89,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509692}
-+{"system.network.sent":12355982,"system.gpu.0.powerPercent":99.47,"system.network.recv":8325343,"system.disk":22.4,"system.gpu.0.powerWatts":69.63,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":53.6,"system.gpu.0.gpu":80.47,"_runtime":1129,"system.proc.memory.rssMB":2962.93,"system.proc.memory.availableMB":11549.31,"system.cpu":91.64,"system.proc.cpu.threads":27.73,"system.memory":23.23,"system.proc.memory.percent":19.7,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509722}
-+{"system.network.sent":13392411,"system.gpu.0.powerPercent":96.5,"system.network.recv":9022410,"system.disk":22.4,"system.gpu.0.powerWatts":67.55,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":66.2,"system.gpu.0.gpu":86.73,"_runtime":1160,"system.proc.memory.rssMB":2966.31,"system.proc.memory.availableMB":11507.02,"system.cpu":96.58,"system.proc.cpu.threads":28,"system.memory":23.51,"system.proc.memory.percent":19.72,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509752}
-+{"system.network.sent":14052060,"system.gpu.0.powerPercent":93.62,"system.network.recv":9455229,"system.disk":22.4,"system.gpu.0.powerWatts":65.53,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":62.4,"system.gpu.0.gpu":86.33,"_runtime":1190,"system.proc.memory.rssMB":2964.4,"system.proc.memory.availableMB":11520.81,"system.cpu":96.15,"system.proc.cpu.threads":27.67,"system.memory":23.41,"system.proc.memory.percent":19.71,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509783}
-+{"system.network.sent":14116134,"system.gpu.0.powerPercent":97.24,"system.network.recv":9471018,"system.disk":22.4,"system.gpu.0.powerWatts":68.07,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":55.8,"system.gpu.0.gpu":85.13,"_runtime":1220,"system.proc.memory.rssMB":2959.24,"system.proc.memory.availableMB":11527.75,"system.cpu":99.85,"system.proc.cpu.threads":27,"system.memory":23.39,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509813}
-+{"system.network.sent":14129520,"system.gpu.0.powerPercent":102.88,"system.network.recv":9474423,"system.disk":22.4,"system.gpu.0.powerWatts":72.02,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":56.33,"system.gpu.0.gpu":86.27,"_runtime":1250,"system.proc.memory.rssMB":2958.7,"system.proc.memory.availableMB":11472.54,"system.cpu":99.87,"system.proc.cpu.threads":27,"system.memory":23.75,"system.proc.memory.percent":19.67,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509843}
-+{"system.network.sent":14134644,"system.gpu.0.powerPercent":87.89,"system.network.recv":9477692,"system.disk":22.4,"system.gpu.0.powerWatts":61.52,"_wandb":true,"system.gpu.0.temp":76.75,"system.gpu.0.memory":39.12,"system.gpu.0.gpu":73.5,"_runtime":1267,"system.proc.memory.rssMB":2956.05,"system.proc.memory.availableMB":11567.16,"system.cpu":86.28,"system.proc.cpu.threads":26.38,"system.memory":23.1,"system.proc.memory.percent":19.65,"system.gpu.0.memoryAllocated":9.38,"_timestamp":1579509859}
-+{"system.gpu.0.gpu": 81.67, "system.gpu.0.memory": 48.93, "system.gpu.0.memoryAllocated": 37.81, "system.gpu.0.temp": 76.87, "system.gpu.0.powerWatts": 64.4, "system.gpu.0.powerPercent": 92.01, "system.cpu": 37.97, "system.memory": 23.73, "system.disk": 22.4, "system.proc.memory.availableMB": 11472.72, "system.proc.memory.rssMB": 2972.11, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 27.93, "system.network.sent": 758361, "system.network.recv": 563087, "_wandb": true, "_timestamp": 1579509890, "_runtime": 1296}
-+{"system.gpu.0.gpu": 89.2, "system.gpu.0.memory": 54.2, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 71.05, "system.gpu.0.powerPercent": 101.51, "system.cpu": 38.42, "system.memory": 23.79, "system.disk": 22.4, "system.proc.memory.availableMB": 11462.96, "system.proc.memory.rssMB": 2972.18, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 1227510, "system.network.recv": 875686, "_wandb": true, "_timestamp": 1579509920, "_runtime": 1326}
-+{"system.gpu.0.gpu": 89.33, "system.gpu.0.memory": 53.87, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.2, "system.gpu.0.powerWatts": 68.12, "system.gpu.0.powerPercent": 97.31, "system.cpu": 38.65, "system.memory": 23.81, "system.disk": 22.4, "system.proc.memory.availableMB": 11461.55, "system.proc.memory.rssMB": 2972.18, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 1666981, "system.network.recv": 1169241, "_wandb": true, "_timestamp": 1579509950, "_runtime": 1356}
-+{"system.gpu.0.gpu": 89.6, "system.gpu.0.memory": 54.4, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 76.8, "system.gpu.0.powerWatts": 65.93, "system.gpu.0.powerPercent": 94.19, "system.cpu": 38.85, "system.memory": 23.85, "system.disk": 22.4, "system.proc.memory.availableMB": 11460.04, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 2085510, "system.network.recv": 1447740, "_wandb": true, "_timestamp": 1579509980, "_runtime": 1386}
-+{"system.gpu.0.gpu": 89.53, "system.gpu.0.memory": 54.2, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 61.94, "system.gpu.0.powerPercent": 88.48, "system.cpu": 38.46, "system.memory": 23.84, "system.disk": 22.4, "system.proc.memory.availableMB": 11461.03, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 2506923, "system.network.recv": 1726051, "_wandb": true, "_timestamp": 1579510011, "_runtime": 1416}
-+{"system.gpu.0.gpu": 89.6, "system.gpu.0.memory": 54.4, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.07, "system.gpu.0.powerWatts": 70.87, "system.gpu.0.powerPercent": 101.25, "system.cpu": 38.67, "system.memory": 23.83, "system.disk": 22.4, "system.proc.memory.availableMB": 11460.28, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 2927846, "system.network.recv": 2010982, "_wandb": true, "_timestamp": 1579510041, "_runtime": 1446}
-+{"system.gpu.0.gpu": 90.2, "system.gpu.0.memory": 54.4, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 73.43, "system.gpu.0.powerPercent": 104.9, "system.cpu": 38.77, "system.memory": 23.89, "system.disk": 22.4, "system.proc.memory.availableMB": 11452.43, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 3356480, "system.network.recv": 2290911, "_wandb": true, "_timestamp": 1579510071, "_runtime": 1477}
-+{"system.gpu.0.gpu": 89.67, "system.gpu.0.memory": 54.13, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 75.49, "system.gpu.0.powerPercent": 107.84, "system.cpu": 38.83, "system.memory": 24.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11301.4, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 3779986, "system.network.recv": 2571164, "_wandb": true, "_timestamp": 1579510101, "_runtime": 1507}
-+{"system.gpu.0.gpu": 89.8, "system.gpu.0.memory": 54.4, "system.gpu.0.memoryAllocated": 37.94, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 61.33, "system.gpu.0.powerPercent": 87.61, "system.cpu": 38.63, "system.memory": 24.85, "system.disk": 22.4, "system.proc.memory.availableMB": 11302.55, "system.proc.memory.rssMB": 2972.19, "system.proc.memory.percent": 19.76, "system.proc.cpu.threads": 28.0, "system.network.sent": 4195859, "system.network.recv": 2844061, "_wandb": true, "_timestamp": 1579510131, "_runtime": 1537}
-+{"system.gpu.0.gpu": 85.8, "system.gpu.0.memory": 53.33, "system.gpu.0.memoryAllocated": 37.95, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 62.38, "system.gpu.0.powerPercent": 89.12, "system.cpu": 56.72, "system.memory": 24.3, "system.disk": 22.4, "system.proc.memory.availableMB": 11387.01, "system.proc.memory.rssMB": 2969.03, "system.proc.memory.percent": 19.74, "system.proc.cpu.threads": 27.67, "system.network.sent": 4493831, "system.network.recv": 3041280, "_wandb": true, "_timestamp": 1579510161, "_runtime": 1567}
-+{"system.gpu.0.gpu": 86.2, "system.gpu.0.memory": 56.4, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 71.41, "system.gpu.0.powerPercent": 102.01, "system.cpu": 99.85, "system.memory": 23.4, "system.disk": 22.4, "system.proc.memory.availableMB": 11522.27, "system.proc.memory.rssMB": 2964.5, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 27.0, "system.network.sent": 4498491, "system.network.recv": 3091323, "_wandb": true, "_timestamp": 1579510192, "_runtime": 1597}
-+{"system.gpu.0.gpu": 85.87, "system.gpu.0.memory": 55.8, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 76.67, "system.gpu.0.powerWatts": 71.14, "system.gpu.0.powerPercent": 101.63, "system.cpu": 99.9, "system.memory": 23.45, "system.disk": 22.4, "system.proc.memory.availableMB": 11515.83, "system.proc.memory.rssMB": 2965.05, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 27.0, "system.network.sent": 4501885, "system.network.recv": 3092980, "_wandb": true, "_timestamp": 1579510222, "_runtime": 1628}
-+{"system.gpu.0.gpu": 81.0, "system.gpu.0.memory": 45.8, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 76.8, "system.gpu.0.powerWatts": 69.12, "system.gpu.0.powerPercent": 98.74, "system.cpu": 66.55, "system.memory": 23.26, "system.disk": 22.4, "system.proc.memory.availableMB": 11546.79, "system.proc.memory.rssMB": 2967.48, "system.proc.memory.percent": 19.73, "system.proc.cpu.threads": 27.2, "system.network.sent": 4796843, "system.network.recv": 3293537, "_wandb": true, "_timestamp": 1579510252, "_runtime": 1658}
-+{"system.gpu.0.gpu": 89.4, "system.gpu.0.memory": 54.07, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 66.42, "system.gpu.0.powerPercent": 94.89, "system.cpu": 38.99, "system.memory": 23.73, "system.disk": 22.4, "system.proc.memory.availableMB": 11475.88, "system.proc.memory.rssMB": 2973.86, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 5353158, "system.network.recv": 3638383, "_wandb": true, "_timestamp": 1579510282, "_runtime": 1688}
-+{"system.gpu.0.gpu": 89.47, "system.gpu.0.memory": 54.2, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 72.24, "system.gpu.0.powerPercent": 103.2, "system.cpu": 38.73, "system.memory": 23.75, "system.disk": 22.4, "system.proc.memory.availableMB": 11472.79, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 5835668, "system.network.recv": 4000743, "_wandb": true, "_timestamp": 1579510312, "_runtime": 1718}
-+{"system.gpu.0.gpu": 89.53, "system.gpu.0.memory": 54.13, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.07, "system.gpu.0.powerWatts": 64.27, "system.gpu.0.powerPercent": 91.82, "system.cpu": 38.81, "system.memory": 23.75, "system.disk": 22.4, "system.proc.memory.availableMB": 11471.81, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 6261668, "system.network.recv": 4287637, "_wandb": true, "_timestamp": 1579510343, "_runtime": 1748}
-+{"system.gpu.0.gpu": 89.6, "system.gpu.0.memory": 54.27, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 69.51, "system.gpu.0.powerPercent": 99.3, "system.cpu": 38.54, "system.memory": 23.75, "system.disk": 22.4, "system.proc.memory.availableMB": 11472.59, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 6700788, "system.network.recv": 4577856, "_wandb": true, "_timestamp": 1579510373, "_runtime": 1778}
-+{"system.gpu.0.gpu": 89.8, "system.gpu.0.memory": 54.47, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 71.42, "system.gpu.0.powerPercent": 102.02, "system.cpu": 39.33, "system.memory": 24.39, "system.disk": 22.4, "system.proc.memory.availableMB": 11375.64, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 7142196, "system.network.recv": 4871182, "_wandb": true, "_timestamp": 1579510403, "_runtime": 1809}
-+{"system.gpu.0.gpu": 90.13, "system.gpu.0.memory": 54.6, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 59.28, "system.gpu.0.powerPercent": 84.68, "system.cpu": 38.85, "system.memory": 24.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11302.76, "system.proc.memory.rssMB": 2973.88, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 7583889, "system.network.recv": 5160633, "_wandb": true, "_timestamp": 1579510433, "_runtime": 1839}
-+{"system.gpu.0.gpu": 90.2, "system.gpu.0.memory": 54.53, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 64.21, "system.gpu.0.powerPercent": 91.73, "system.cpu": 38.73, "system.memory": 24.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11302.88, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 8007990, "system.network.recv": 5441264, "_wandb": true, "_timestamp": 1579510463, "_runtime": 1869}
-+{"system.gpu.0.gpu": 90.0, "system.gpu.0.memory": 54.53, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 66.28, "system.gpu.0.powerPercent": 94.68, "system.cpu": 38.74, "system.memory": 24.85, "system.disk": 22.4, "system.proc.memory.availableMB": 11303.79, "system.proc.memory.rssMB": 2973.87, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 8435309, "system.network.recv": 5727107, "_wandb": true, "_timestamp": 1579510493, "_runtime": 1899}
-+{"system.gpu.0.gpu": 89.6, "system.gpu.0.memory": 54.13, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 72.25, "system.gpu.0.powerPercent": 103.21, "system.cpu": 38.62, "system.memory": 24.86, "system.disk": 22.4, "system.proc.memory.availableMB": 11303.35, "system.proc.memory.rssMB": 2973.88, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 8858885, "system.network.recv": 6006566, "_wandb": true, "_timestamp": 1579510523, "_runtime": 1929}
-+{"system.gpu.0.gpu": 86.67, "system.gpu.0.memory": 55.73, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 63.91, "system.gpu.0.powerPercent": 91.29, "system.cpu": 90.41, "system.memory": 23.54, "system.disk": 22.4, "system.proc.memory.availableMB": 11503.78, "system.proc.memory.rssMB": 2965.76, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 26.8, "system.network.sent": 8947611, "system.network.recv": 6062379, "_wandb": true, "_timestamp": 1579510554, "_runtime": 1959}
-+{"system.gpu.0.gpu": 86.07, "system.gpu.0.memory": 56.47, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 69.9, "system.gpu.0.powerPercent": 99.85, "system.cpu": 99.89, "system.memory": 23.77, "system.disk": 22.4, "system.proc.memory.availableMB": 11469.72, "system.proc.memory.rssMB": 2965.75, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 27.0, "system.network.sent": 8953536, "system.network.recv": 6079245, "_wandb": true, "_timestamp": 1579510584, "_runtime": 1990}
-+{"system.gpu.0.gpu": 78.33, "system.gpu.0.memory": 46.93, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.07, "system.gpu.0.powerWatts": 68.12, "system.gpu.0.powerPercent": 97.31, "system.cpu": 93.19, "system.memory": 24.17, "system.disk": 22.4, "system.proc.memory.availableMB": 11408.62, "system.proc.memory.rssMB": 2965.56, "system.proc.memory.percent": 19.71, "system.proc.cpu.threads": 27.07, "system.network.sent": 9026902, "system.network.recv": 6145986, "_wandb": true, "_timestamp": 1579510614, "_runtime": 2020}
-+{"system.gpu.0.gpu": 89.53, "system.gpu.0.memory": 54.13, "system.gpu.0.memoryAllocated": 37.96, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 66.09, "system.gpu.0.powerPercent": 94.42, "system.cpu": 38.67, "system.memory": 23.71, "system.disk": 22.4, "system.proc.memory.availableMB": 11476.13, "system.proc.memory.rssMB": 2973.94, "system.proc.memory.percent": 19.77, "system.proc.cpu.threads": 28.0, "system.network.sent": 9596877, "system.network.recv": 6501867, "_wandb": true, "_timestamp": 1579510644, "_runtime": 2050}
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl b/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-new file mode 100644
-index 0000000..f338a22
---- /dev/null
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-history.jsonl
-@@ -0,0 +1,7 @@
-+{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.0654682070016861,-0.06339701265096664,-0.06132581830024719,-0.05925462394952774,-0.05718342587351799,-0.05511223152279854,-0.053041037172079086,-0.050969842821359634,-0.048898644745349884,-0.04682745039463043,-0.04475625604391098,-0.04268506169319153,-0.040613867342472076,-0.038542672991752625,-0.03647147864103317,-0.03440028056502342,-0.03232908621430397,-0.03025789186358452,-0.028186697512865067,-0.026115499436855316,-0.024044305086135864,-0.021973110735416412,-0.01990191638469696,-0.01783072203397751,-0.015759527683258057,-0.013688329607248306,-0.011617135256528854,-0.009545940905809402,-0.0074747465550899506,-0.005403552204370499,-0.0033323541283607483,-0.0012611597776412964,0.0008100345730781555,0.0028812289237976074,0.004952423274517059,0.007023617625236511,0.009094811975955963,0.011166006326675415,0.013237208127975464,0.015308402478694916,0.017379596829414368,0.01945079118013382,0.02152198553085327,0.023593179881572723,0.025664374232292175,0.027735568583011627,0.02980676293373108,0.03187795728445053,0.03394915163516998,0.03602035343647003,0.038091547787189484,0.040162742137908936,0.04223393648862839,0.04430513083934784,0.04637632519006729,0.04844751954078674,0.050518713891506195,0.05258990824222565,0.0546611025929451,0.05673230439424515,0.0588034987449646,0.060874685645103455,0.0629458874464035,0.06501707434654236,0.06708827614784241]},"gradients/classifier.weight":{"bins":[-0.09012244641780853,-0.08724749088287354,-0.08437253534793854,-0.08149757981300354,-0.07862262427806854,-0.07574766874313354,-0.07287271320819855,-0.06999775767326355,-0.06712280213832855,-0.06424784660339355,-0.06137289106845856,-0.05849793553352356,-0.05562297999858856,-0.052748024463653564,-0.04987306892871857,-0.04699811339378357,-0.04412315785884857,-0.041248202323913574,-0.03837324678897858,-0.03549829125404358,-0.03262333571910858,-0.029748380184173584,-0.026873424649238586,-0.02399846911430359,-0.02112351357936859,-0.018248558044433594,-0.015373602509498596,-0.012498646974563599,-0.009623691439628601,-0.0067487359046936035,-0.003873780369758606,-0.0009988248348236084,0.0018761307001113892,0.004751086235046387,0.007626041769981384,0.010500997304916382,0.01337595283985138,0.016250908374786377,0.019125863909721375,0.022000819444656372,0.02487577497959137,0.027750730514526367,0.030625686049461365,0.03350064158439636,0.03637559711933136,0.03925055265426636,0.042125508189201355,0.04500046372413635,0.04787541925907135,0.05075037479400635,0.053625330328941345,0.05650028586387634,0.05937524139881134,0.06225019693374634,0.06512515246868134,0.06800010800361633,0.07087506353855133,0.07375001907348633,0.07662497460842133,0.07949993014335632,0.08237488567829132,0.08524984121322632,0.08812479674816132,0.09099975228309631,0.09387470781803131],"_type":"histogram","values":[1,1,1,0,3,1,5,2,4,10,9,17,15,21,30,49,53,61,86,96,118,155,170,210,214,249,229,254,272,299,314,295,344,291,277,262,259,239,186,184,169,136,111,97,83,60,47,38,19,23,20,13,17,7,8,4,1,2,2,0,0,0,0,1]},"_step":0,"val_acc":0.23687943262411348,"train_acc":0.25812953441384673,"_runtime":814.0969541072845,"_timestamp":1.5795092246157851e+09}
-+{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1],"bins":[-0.07717597484588623,-0.07544030994176865,-0.07370464503765106,-0.07196898013353348,-0.0702333152294159,-0.06849765032529831,-0.06676198542118073,-0.06502632051706314,-0.06329065561294556,-0.06155499070882797,-0.05981932580471039,-0.058083660900592804,-0.05634799599647522,-0.054612331092357635,-0.05287666618824005,-0.05114100128412247,-0.04940533638000488,-0.0476696714758873,-0.045934006571769714,-0.04419834539294243,-0.042462680488824844,-0.04072701558470726,-0.038991350680589676,-0.03725568577647209,-0.03552002087235451,-0.03378435596823692,-0.03204869106411934,-0.030313026160001755,-0.02857736125588417,-0.026841696351766586,-0.025106031447649002,-0.023370366543531418,-0.021634701639413834,-0.01989903673529625,-0.018163371831178665,-0.01642770692706108,-0.014692042022943497,-0.012956380844116211,-0.011220715939998627,-0.009485051035881042,-0.007749386131763458,-0.006013721227645874,-0.00427805632352829,-0.0025423914194107056,-0.0008067265152931213,0.0009289383888244629,0.002664603292942047,0.004400268197059631,0.006135933101177216,0.0078715980052948,0.009607262909412384,0.011342927813529968,0.013078592717647552,0.014814257621765137,0.01654992252588272,0.018285587430000305,0.02002125233411789,0.021756917238235474,0.023492582142353058,0.025228247046470642,0.026963911950588226,0.02869957685470581,0.030435241758823395,0.03217090666294098,0.03390657156705856]},"gradients/classifier.weight":{"_type":"histogram","values":[1,0,1,0,1,1,3,1,1,2,4,9,11,17,27,29,40,36,67,86,99,128,150,186,242,222,248,298,311,327,349,317,357,337,321,308,284,232,208,178,153,140,97,76,67,43,32,35,19,16,10,6,2,2,3,3,0,0,0,0,0,0,0,1],"bins":[-0.10413810610771179,-0.10082836449146271,-0.09751862287521362,-0.09420888125896454,-0.09089913964271545,-0.08758939802646637,-0.08427965641021729,-0.0809699147939682,-0.07766017317771912,-0.07435043156147003,-0.07104068994522095,-0.06773094832897186,-0.06442121416330338,-0.06111147254705429,-0.057801730930805206,-0.05449198931455612,-0.05118224769830704,-0.04787250608205795,-0.04456276446580887,-0.041253022849559784,-0.0379432812333107,-0.034633539617061615,-0.03132379800081253,-0.028014056384563446,-0.02470432221889496,-0.021394580602645874,-0.01808483898639679,-0.014775097370147705,-0.01146535575389862,-0.008155614137649536,-0.004845872521400452,-0.0015361309051513672,0.0017736107110977173,0.005083352327346802,0.008393093943595886,0.01170283555984497,0.015012577176094055,0.01832231879234314,0.021632060408592224,0.02494180202484131,0.028251543641090393,0.03156128525733948,0.03487102687358856,0.038180768489837646,0.04149051010608673,0.044800251722335815,0.0481099933385849,0.051419734954833984,0.054729461669921875,0.05803920328617096,0.061348944902420044,0.06465868651866913,0.06796842813491821,0.0712781697511673,0.07458791136741638,0.07789765298366547,0.08120739459991455,0.08451713621616364,0.08782687783241272,0.0911366194486618,0.09444636106491089,0.09775610268115997,0.10106584429740906,0.10437558591365814,0.10768532752990723]},"_step":1,"val_acc":0.25011820330969264,"train_acc":0.258383926343752,"_runtime":974.3342196941376,"_timestamp":1.5795093848530507e+09}
-+{"gradients/classifier.bias":{"values":[1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.006489427760243416,-0.006147412117570639,-0.005805396940559149,-0.005463381297886372,-0.0051213656552135944,-0.004779350012540817,-0.004437334835529327,-0.00409531919285655,-0.0037533037830144167,-0.003411288373172283,-0.003069272730499506,-0.0027272573206573725,-0.002385241910815239,-0.0020432262681424618,-0.0017012106254696846,-0.0013591954484581947,-0.0010171798057854176,-0.0006751641631126404,-0.0003331489861011505,8.866656571626663e-06,0.00035088229924440384,0.0006928974762558937,0.0010349131189286709,0.001376928761601448,0.001718943938612938,0.0020609600469470024,0.0024029752239584923,0.002744990400969982,0.0030870065093040466,0.0034290216863155365,0.0037710368633270264,0.004113052971661091,0.004455068148672581,0.004797083325684071,0.005139099434018135,0.005481114611029625,0.005823129788041115,0.006165145896375179,0.006507161073386669,0.006849176250398159,0.0071911923587322235,0.007533207535743713,0.007875222712755203,0.008217238821089268,0.008559253998100758,0.008901269175112247,0.009243285283446312,0.009585300460457802,0.009927315637469292,0.010269330814480782,0.01061134785413742,0.01095336303114891,0.0112953782081604,0.01163739338517189,0.01197940856218338,0.01232142373919487,0.012663440778851509,0.013005455955862999,0.013347471132874489,0.013689486309885979,0.014031501486897469,0.014373516663908958,0.014715533703565598,0.015057548880577087,0.015399564057588577],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.07622425258159637,-0.07385586947202682,-0.07148748636245728,-0.06911909580230713,-0.06675071269273758,-0.06438232958316803,-0.06201394647359848,-0.05964556336402893,-0.05727717652916908,-0.054908789694309235,-0.052540406584739685,-0.050172023475170135,-0.047803640365600586,-0.04543525353074074,-0.04306687042117119,-0.04069848358631134,-0.03833010047674179,-0.03596171736717224,-0.03359333053231239,-0.031224947422742844,-0.028856560587882996,-0.026488177478313446,-0.024119794368743896,-0.02175140753388405,-0.0193830244243145,-0.01701464131474495,-0.014646254479885101,-0.012277871370315552,-0.009909488260746002,-0.007541105151176453,-0.005172714591026306,-0.0028043314814567566,-0.00043594837188720703,0.0019324347376823425,0.004300817847251892,0.006669208407402039,0.009037591516971588,0.011405974626541138,0.013774357736110687,0.016142740845680237,0.018511131405830383,0.020879514515399933,0.023247897624969482,0.025616280734539032,0.02798466384410858,0.03035304695367813,0.03272143751382828,0.03508982062339783,0.03745820373296738,0.039826586842536926,0.042194969952106476,0.04456336051225662,0.04693174362182617,0.049300119280815125,0.05166850984096527,0.05403690040111542,0.05640527606010437,0.05877366662025452,0.06114204227924347,0.06351043283939362,0.06587882339954376,0.06824719905853271,0.07061558961868286,0.07298396527767181,0.07535235583782196],"_type":"histogram","values":[1,2,2,4,0,3,3,1,11,7,15,14,23,25,27,43,59,66,75,106,101,128,148,168,174,206,231,240,275,266,300,299,271,298,285,266,270,214,209,214,192,142,152,94,103,94,63,48,43,36,29,22,19,17,12,8,5,3,1,6,3,1,0,1]},"_step":2,"val_acc":0.24964539007092199,"train_acc":0.2603407873430231,"_runtime":1133.4028816223145,"_timestamp":1.5795095439217126e+09}
-+{"gradients/classifier.bias":{"values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.06606416404247284,-0.06390783190727234,-0.06175149977207184,-0.05959516763687134,-0.05743883550167084,-0.05528250336647034,-0.053126171231269836,-0.050969839096069336,-0.048813506960868835,-0.046657174825668335,-0.044500842690467834,-0.042344510555267334,-0.040188178420066833,-0.03803184628486633,-0.03587551414966583,-0.03371918201446533,-0.03156284987926483,-0.02940651774406433,-0.02725018560886383,-0.02509385347366333,-0.02293752133846283,-0.02078118920326233,-0.01862485706806183,-0.016468524932861328,-0.014312192797660828,-0.012155860662460327,-0.009999528527259827,-0.007843196392059326,-0.005686864256858826,-0.003530532121658325,-0.0013741999864578247,0.0007821321487426758,0.0029384642839431763,0.005094796419143677,0.007251128554344177,0.009407460689544678,0.011563792824745178,0.013720124959945679,0.01587645709514618,0.01803278923034668,0.02018912136554718,0.02234545350074768,0.02450178563594818,0.02665811777114868,0.028814449906349182,0.030970782041549683,0.03312711417675018,0.035283446311950684,0.037439778447151184,0.039596110582351685,0.041752442717552185,0.043908774852752686,0.046065106987953186,0.048221439123153687,0.05037777125835419,0.05253410339355469,0.05469043552875519,0.05684676766395569,0.05900309979915619,0.06115943193435669,0.06331576406955719,0.06547209620475769,0.06762842833995819,0.06978476047515869,0.07194109261035919],"_type":"histogram"},"gradients/classifier.weight":{"bins":[-0.09906706213951111,-0.09581608325242996,-0.09256510436534882,-0.08931412547826767,-0.08606314659118652,-0.08281217515468597,-0.07956118881702423,-0.07631021738052368,-0.07305923849344254,-0.06980825960636139,-0.06655728071928024,-0.0633063018321991,-0.06005532294511795,-0.056804344058036804,-0.053553368896245956,-0.05030239000916481,-0.047051411122083664,-0.04380043223500252,-0.04054945334792137,-0.037298478186130524,-0.03404749929904938,-0.03079652041196823,-0.027545541524887085,-0.02429456263780594,-0.021043583750724792,-0.017792604863643646,-0.0145416259765625,-0.01129065454006195,-0.008039675652980804,-0.004788696765899658,-0.001537717878818512,0.0017132610082626343,0.0049642398953437805,0.008215218782424927,0.011466197669506073,0.01471717655658722,0.017968155443668365,0.02121913433074951,0.02447010576725006,0.027721092104911804,0.030972063541412354,0.0342230498790741,0.037474021315574646,0.040724992752075195,0.04397597908973694,0.04722695052623749,0.05047793686389923,0.05372890830039978,0.05697989463806152,0.06023086607456207,0.06348185241222382,0.06673282384872437,0.06998381018638611,0.07323478162288666,0.07648575305938721,0.07973673939704895,0.0829877108335495,0.08623869717121124,0.08948966860771179,0.09274065494537354,0.09599162638187408,0.09924261271953583,0.10249358415603638,0.10574457049369812,0.10899554193019867],"_type":"histogram","values":[1,0,0,0,2,2,0,4,3,6,10,11,14,22,31,43,53,58,86,101,112,160,183,225,221,275,317,314,310,329,323,356,343,312,332,263,237,192,175,162,123,83,77,78,50,43,29,27,12,11,6,5,4,3,0,0,1,0,0,1,1,0,1,1]},"_step":3,"val_acc":0.26222222222222225,"train_acc":0.2627868635921119,"_runtime":1291.7072627544403,"_timestamp":1.5795097022260938e+09}
-+{"gradients/classifier.bias":{"_type":"histogram","values":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],"bins":[-0.037257447838783264,-0.035971060395240784,-0.034684669226408005,-0.033398281782865524,-0.032111890614032745,-0.030825503170490265,-0.029539113864302635,-0.028252724558115005,-0.026966335251927376,-0.025679945945739746,-0.024393556639552116,-0.023107167333364487,-0.021820779889822006,-0.020534390583634377,-0.019248001277446747,-0.017961611971259117,-0.016675222665071487,-0.015388833358883858,-0.014102444052696228,-0.012816054746508598,-0.011529665440320969,-0.010243277996778488,-0.008956888690590858,-0.007670499384403229,-0.006384110078215599,-0.005097720772027969,-0.003811333328485489,-0.00252494215965271,-0.0012385547161102295,4.783645272254944e-05,0.00133422389626503,0.002620615065097809,0.003907002508640289,0.00519338995218277,0.006479781121015549,0.007766168564558029,0.009052559733390808,0.010338947176933289,0.011625338345766068,0.012911725789308548,0.014198116958141327,0.015484504401683807,0.016770891845226288,0.018057283014059067,0.019343670457601547,0.020630061626434326,0.021916449069976807,0.023202840238809586,0.024489227682352066,0.025775618851184845,0.027062006294727325,0.028348393738269806,0.029634781181812286,0.030921176075935364,0.032207563519477844,0.033493950963020325,0.034780338406562805,0.036066725850105286,0.03735312074422836,0.038639508187770844,0.039925895631313324,0.041212283074855804,0.04249867796897888,0.04378506541252136,0.04507145285606384]},"gradients/classifier.weight":{"bins":[-0.0888357013463974,-0.08612215518951416,-0.08340860903263092,-0.08069506287574768,-0.07798151671886444,-0.0752679631114006,-0.07255441695451736,-0.06984087079763412,-0.06712732464075089,-0.06441377848386765,-0.061700232326984406,-0.05898668244481087,-0.05627313628792763,-0.05355959013104439,-0.05084604024887085,-0.04813249409198761,-0.04541894793510437,-0.04270540177822113,-0.03999185562133789,-0.03727830573916435,-0.03456475958228111,-0.03185121342539787,-0.029137663543224335,-0.026424117386341095,-0.023710571229457855,-0.020997025072574615,-0.018283478915691376,-0.015569932758808136,-0.0128563791513443,-0.01014283299446106,-0.00742928683757782,-0.00471574068069458,-0.0020021945238113403,0.0007113516330718994,0.003424897789955139,0.006138443946838379,0.008851990103721619,0.011565543711185455,0.014279089868068695,0.016992636024951935,0.019706182181835175,0.022419728338718414,0.025133274495601654,0.027846820652484894,0.03056037425994873,0.03327392041683197,0.03598746657371521,0.03870101273059845,0.04141455888748169,0.04412810504436493,0.04684165120124817,0.04955519735813141,0.05226874351501465,0.05498228967189789,0.05769583582878113,0.06040938198566437,0.0631229430437088,0.06583648920059204,0.06855003535747528,0.07126358151435852,0.07397712767124176,0.076690673828125,0.07940421998500824,0.08211776614189148,0.08483131229877472],"_type":"histogram","values":[1,0,0,0,2,0,1,0,10,6,9,13,11,18,18,29,47,58,58,70,96,103,104,181,183,180,232,264,280,262,304,320,289,307,281,323,255,289,218,224,185,155,132,132,118,76,65,59,48,22,30,26,17,9,5,3,4,2,3,3,1,2,0,1]},"_step":4,"val_acc":0.262789598108747,"train_acc":0.2653650279586515,"_runtime":1448.6882483959198,"_timestamp":1.5795098592070794e+09}
-+{"val_acc": 0.6363120567375886, "train_acc": 0.5801701490638866, "_runtime": 1825.7496349811554, "_timestamp": 1579510238.3097415, "_step": 5}
-+{"val_acc": 0.6672340425531915, "train_acc": 0.6266651664065672, "_runtime": 2201.1860706806183, "_timestamp": 1579510613.7461772, "_step": 6}
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json b/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-new file mode 100644
-index 0000000..351938b
---- /dev/null
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-metadata.json
-@@ -0,0 +1,29 @@
-+{
-+    "root": "/home/ubamba98/droughtwatch",
-+    "program": "<python with no main file>",
-+    "git": {
-+        "remote": "https://github.com/ubamba98/droughtwatch",
-+        "commit": "4e7b9b38b8d5d3ec44d43373b8e263f50ead87a3"
-+    },
-+    "email": "ubamba98@gmail.com",
-+    "startedAt": "2020-01-20T08:44:21.248355",
-+    "host": "ccw-iclr",
-+    "username": "ubamba98",
-+    "executable": "/home/ubamba98/anaconda3/bin/python",
-+    "os": "Linux-4.9.0-11-amd64-x86_64-with-debian-9.11",
-+    "python": "3.7.3",
-+    "gpu": "Tesla T4",
-+    "gpu_count": 1,
-+    "cpu_count": 4,
-+    "cuda": "10.0.130",
-+    "args": [
-+        "-f",
-+        "/home/ubamba98/.local/share/jupyter/runtime/kernel-f86872c7-f93b-4579-ae59-db40fc8ec9c5.json"
-+    ],
-+    "state": "running",
-+    "jobType": null,
-+    "mode": "run",
-+    "name": "efficentnet-b3-765",
-+    "project": "droughtwatch",
-+    "heartbeatAt": "2020-01-20T08:57:27.146640"
-+}
-diff --git a/wandb/run-20200120_081855-gzutdaae/wandb-summary.json b/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-new file mode 100644
-index 0000000..8c87848
---- /dev/null
-+++ b/wandb/run-20200120_081855-gzutdaae/wandb-summary.json
-@@ -0,0 +1 @@
-+{"graph_0": {"_type": "graph", "format": "torch", "nodes": [{"name": "conv_stem", "id": 140438557381128, "class_name": "Conv2dSame(3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False)", "parameters": [["weight", [40, 3, 3, 3]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [1080]}, {"name": "bn1", "id": 140438557383704, "class_name": "BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [40]], ["bias", [40]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [40, 40]}, {"name": "blocks.0.0", "id": 140438557382920, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)\n  (bn1): BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [40, 1, 3, 3]], ["bn1.weight", [40]], ["bn1.bias", [40]], ["se.conv_reduce.weight", [10, 40, 1, 1]], ["se.conv_reduce.bias", [10]], ["se.conv_expand.weight", [40, 10, 1, 1]], ["se.conv_expand.bias", [40]], ["conv_pw.weight", [24, 40, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [360, 40, 40, 400, 10, 400, 40, 960, 24, 24]}, {"name": "blocks.0.1", "id": 140438680665224, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)\n  (bn1): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [24, 1, 3, 3]], ["bn1.weight", [24]], ["bn1.bias", [24]], ["se.conv_reduce.weight", [6, 24, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [24, 6, 1, 1]], ["se.conv_expand.bias", [24]], ["conv_pw.weight", [24, 24, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [216, 24, 24, 144, 6, 144, 24, 576, 24, 24]}, {"name": "blocks.1.0", "id": 140438676598736, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(144, 144, kernel_size=(3, 3), stride=(2, 2), groups=144, bias=False)\n  (bn2): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [144, 24, 1, 1]], ["bn1.weight", [144]], ["bn1.bias", [144]], ["conv_dw.weight", [144, 1, 3, 3]], ["bn2.weight", [144]], ["bn2.bias", [144]], ["se.conv_reduce.weight", [6, 144, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [144, 6, 1, 1]], ["se.conv_expand.bias", [144]], ["conv_pwl.weight", [32, 144, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 4608, 32, 32]}, {"name": "blocks.1.1", "id": 140438557424160, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.1.2", "id": 140438679559640, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"name": "blocks.2.0", "id": 140438679470320, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(192, 192, kernel_size=(5, 5), stride=(2, 2), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 5, 5]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [48, 192, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [6144, 192, 192, 4800, 192, 192, 1536, 8, 1536, 192, 9216, 48, 48]}, {"name": "blocks.2.1", "id": 140438557424384, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.2.2", "id": 140438557422704, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"name": "blocks.3.0", "id": 140438557421920, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(288, 288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 3, 3]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [96, 288, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [13824, 288, 288, 2592, 288, 288, 3456, 12, 3456, 288, 27648, 96, 96]}, {"name": "blocks.3.1", "id": 140438557422816, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.2", "id": 140438557824392, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.3", "id": 140438557825232, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.3.4", "id": 140438557825176, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"name": "blocks.4.0", "id": 140438557824672, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 5, 5]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [136, 576, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [55296, 576, 576, 14400, 576, 576, 13824, 24, 13824, 576, 78336, 136, 136]}, {"name": "blocks.4.1", "id": 140438557823496, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.2", "id": 140438679158968, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.3", "id": 140438679496744, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.4.4", "id": 140438679422456, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"name": "blocks.5.0", "id": 140438679421448, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(816, 816, kernel_size=(5, 5), stride=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [232, 816, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 189312, 232, 232]}, {"name": "blocks.5.1", "id": 140438679580400, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.2", "id": 140438679115088, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.3", "id": 140438676984832, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.4", "id": 140440670709296, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.5.5", "id": 140440670710192, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"name": "blocks.6.0", "id": 140440670709464, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 3, 3]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [384, 1392, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [322944, 1392, 1392, 12528, 1392, 1392, 80736, 58, 80736, 1392, 534528, 384, 384]}, {"name": "blocks.6.1", "id": 140438679947864, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(384, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)\n  (bn2): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(2304, 96, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(96, 2304, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(2304, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [2304, 384, 1, 1]], ["bn1.weight", [2304]], ["bn1.bias", [2304]], ["conv_dw.weight", [2304, 1, 3, 3]], ["bn2.weight", [2304]], ["bn2.bias", [2304]], ["se.conv_reduce.weight", [96, 2304, 1, 1]], ["se.conv_reduce.bias", [96]], ["se.conv_expand.weight", [2304, 96, 1, 1]], ["se.conv_expand.bias", [2304]], ["conv_pwl.weight", [384, 2304, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [884736, 2304, 2304, 20736, 2304, 2304, 221184, 96, 221184, 2304, 884736, 384, 384]}, {"name": "conv_head", "id": 140438557382584, "class_name": "Conv2d(384, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)", "parameters": [["weight", [1536, 384, 1, 1]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [589824]}, {"name": "bn2", "id": 140438703610848, "class_name": "BatchNorm2d(1536, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [1536]], ["bias", [1536]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [1536, 1536]}, {"name": "global_pool", "id": 140438703610792, "class_name": "SelectAdaptivePool2d (output_size=1, pool_type=avg)", "parameters": [], "output_shape": [[256, 1536, 1, 1]], "num_parameters": []}, {"name": "classifier", "id": 140438679885696, "class_name": "Linear(in_features=1536, out_features=4, bias=True)", "parameters": [["weight", [4, 1536]], ["bias", [4]]], "output_shape": [[256, 4]], "num_parameters": [6144, 4]}], "edges": []}, "train_acc": 0.2653650279586515, "_step": 4, "gradients/classifier.weight": {"bins": [-0.0888357013463974, -0.08612215518951416, -0.08340860903263092, -0.08069506287574768, -0.07798151671886444, -0.0752679631114006, -0.07255441695451736, -0.06984087079763412, -0.06712732464075089, -0.06441377848386765, -0.061700232326984406, -0.05898668244481087, -0.05627313628792763, -0.05355959013104439, -0.05084604024887085, -0.04813249409198761, -0.04541894793510437, -0.04270540177822113, -0.03999185562133789, -0.03727830573916435, -0.03456475958228111, -0.03185121342539787, -0.029137663543224335, -0.026424117386341095, -0.023710571229457855, -0.020997025072574615, -0.018283478915691376, -0.015569932758808136, -0.0128563791513443, -0.01014283299446106, -0.00742928683757782, -0.00471574068069458, -0.0020021945238113403, 0.0007113516330718994, 0.003424897789955139, 0.006138443946838379, 0.008851990103721619, 0.011565543711185455, 0.014279089868068697, 0.016992636024951935, 0.019706182181835175, 0.022419728338718414, 0.025133274495601658, 0.027846820652484897, 0.03056037425994873, 0.03327392041683197, 0.03598746657371521, 0.03870101273059845, 0.04141455888748169, 0.04412810504436493, 0.04684165120124817, 0.04955519735813141, 0.05226874351501465, 0.05498228967189789, 0.05769583582878113, 0.06040938198566437, 0.0631229430437088, 0.06583648920059204, 0.06855003535747528, 0.07126358151435852, 0.07397712767124176, 0.076690673828125, 0.07940421998500824, 0.08211776614189148, 0.08483131229877472], "_type": "histogram", "values": [1, 0, 0, 0, 2, 0, 1, 0, 10, 6, 9, 13, 11, 18, 18, 29, 47, 58, 58, 70, 96, 103, 104, 181, 183, 180, 232, 264, 280, 262, 304, 320, 289, 307, 281, 323, 255, 289, 218, 224, 185, 155, 132, 132, 118, 76, 65, 59, 48, 22, 30, 26, 17, 9, 5, 3, 4, 2, 3, 3, 1, 2, 0, 1]}, "gradients/classifier.bias": {"bins": [-0.037257447838783264, -0.035971060395240784, -0.034684669226408005, -0.033398281782865524, -0.032111890614032745, -0.030825503170490265, -0.029539113864302635, -0.028252724558115005, -0.026966335251927376, -0.025679945945739743, -0.024393556639552116, -0.023107167333364487, -0.02182077988982201, -0.020534390583634377, -0.019248001277446747, -0.017961611971259117, -0.016675222665071487, -0.015388833358883858, -0.014102444052696228, -0.012816054746508598, -0.011529665440320969, -0.010243277996778488, -0.008956888690590858, -0.007670499384403229, -0.006384110078215599, -0.005097720772027969, -0.003811333328485489, -0.00252494215965271, -0.0012385547161102295, 4.783645272254944e-05, 0.00133422389626503, 0.002620615065097809, 0.003907002508640289, 0.00519338995218277, 0.006479781121015549, 0.007766168564558029, 0.009052559733390808, 0.010338947176933289, 0.011625338345766068, 0.012911725789308548, 0.014198116958141329, 0.015484504401683807, 0.016770891845226288, 0.018057283014059067, 0.019343670457601547, 0.02063006162643433, 0.021916449069976807, 0.023202840238809586, 0.024489227682352063, 0.025775618851184845, 0.027062006294727325, 0.02834839373826981, 0.029634781181812286, 0.030921176075935364, 0.032207563519477844, 0.033493950963020325, 0.034780338406562805, 0.036066725850105286, 0.03735312074422836, 0.03863950818777085, 0.03992589563131333, 0.04121228307485581, 0.04249867796897888, 0.04378506541252136, 0.04507145285606384], "_type": "histogram", "values": [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]}, "val_acc": 0.262789598108747, "_runtime": 1448.6882483959198, "_timestamp": 1579509859.2070794}
-diff --git a/wandb/settings b/wandb/settings
-new file mode 100644
-index 0000000..24e2065
---- /dev/null
-+++ b/wandb/settings
-@@ -0,0 +1,4 @@
-+[default]
-+entity = ubamba98
-+project = droughtwatch
-+
diff --git a/wandb/run-20200120_085945-17rqrqo6/wandb-events.jsonl b/wandb/run-20200120_085945-17rqrqo6/wandb-events.jsonl
deleted file mode 100644
index 3144355..0000000
--- a/wandb/run-20200120_085945-17rqrqo6/wandb-events.jsonl
+++ /dev/null
@@ -1,64 +0,0 @@
-{"system.network.sent":41381505,"system.gpu.0.powerPercent":107.04,"system.network.recv":27848475,"system.disk":22.4,"system.gpu.0.powerWatts":74.93,"_wandb":true,"system.gpu.0.temp":77.2,"system.gpu.0.memory":54.47,"system.gpu.0.gpu":90,"_runtime":4297,"system.proc.memory.rssMB":2976.94,"system.proc.memory.availableMB":11450.18,"system.cpu":38.93,"system.proc.cpu.threads":28,"system.memory":23.86,"system.proc.memory.percent":19.79,"system.gpu.0.memoryAllocated":37.97,"_timestamp":1579515091}
-{"system.network.sent":41811117,"system.gpu.0.powerPercent":101.26,"system.network.recv":28139700,"system.disk":22.4,"system.gpu.0.powerWatts":70.88,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":53.73,"system.gpu.0.gpu":89.47,"_runtime":4327,"system.proc.memory.rssMB":2976.94,"system.proc.memory.availableMB":11451.02,"system.cpu":38.63,"system.proc.cpu.threads":28,"system.memory":23.85,"system.proc.memory.percent":19.79,"system.gpu.0.memoryAllocated":37.97,"_timestamp":1579515121}
-{"system.network.sent":42249926,"system.gpu.0.powerPercent":98.37,"system.network.recv":28429539,"system.disk":22.4,"system.gpu.0.powerWatts":68.86,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":54.87,"system.gpu.0.gpu":90,"_runtime":4357,"system.proc.memory.rssMB":2976.94,"system.proc.memory.availableMB":11445.22,"system.cpu":38.46,"system.proc.cpu.threads":28,"system.memory":23.89,"system.proc.memory.percent":19.79,"system.gpu.0.memoryAllocated":37.97,"_timestamp":1579515151}
-{"system.network.sent":42677494,"system.gpu.0.powerPercent":104.39,"system.network.recv":28715404,"system.disk":22.4,"system.gpu.0.powerWatts":73.07,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":54.27,"system.gpu.0.gpu":89.73,"_runtime":4388,"system.proc.memory.rssMB":2976.94,"system.proc.memory.availableMB":11408.16,"system.cpu":38.53,"system.proc.cpu.threads":28,"system.memory":24.16,"system.proc.memory.percent":19.79,"system.gpu.0.memoryAllocated":37.97,"_timestamp":1579515182}
-{"system.network.sent":43125971,"system.gpu.0.powerPercent":99.49,"system.network.recv":29024077,"system.disk":22.4,"system.gpu.0.powerWatts":69.64,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":54.53,"system.gpu.0.gpu":90,"_runtime":4418,"system.proc.memory.rssMB":2976.94,"system.proc.memory.availableMB":11409.74,"system.cpu":38.41,"system.proc.cpu.threads":28,"system.memory":24.15,"system.proc.memory.percent":19.79,"system.gpu.0.memoryAllocated":37.97,"_timestamp":1579515212}
-{"system.network.sent":43538777,"system.gpu.0.powerPercent":95.92,"system.network.recv":29302481,"system.disk":22.4,"system.gpu.0.powerWatts":67.15,"_wandb":true,"system.gpu.0.temp":76.93,"system.gpu.0.memory":54.47,"system.gpu.0.gpu":90,"_runtime":4448,"system.proc.memory.rssMB":2976.98,"system.proc.memory.availableMB":11408.09,"system.cpu":38.65,"system.proc.cpu.threads":28,"system.memory":24.16,"system.proc.memory.percent":19.79,"system.gpu.0.memoryAllocated":37.97,"_timestamp":1579515242}
-{"system.network.sent":43889845,"system.gpu.0.powerPercent":104.48,"system.network.recv":29540718,"system.disk":22.4,"system.gpu.0.powerWatts":73.14,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":52.6,"system.gpu.0.gpu":86.13,"_runtime":4478,"system.proc.memory.rssMB":2975.51,"system.proc.memory.availableMB":11438.35,"system.cpu":48.57,"system.proc.cpu.threads":27.8,"system.memory":23.95,"system.proc.memory.percent":19.78,"system.gpu.0.memoryAllocated":37.97,"_timestamp":1579515272}
-{"system.network.sent":43925942,"system.gpu.0.powerPercent":96.52,"system.network.recv":29593023,"system.disk":22.4,"system.gpu.0.powerWatts":67.56,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":56.27,"system.gpu.0.gpu":85.87,"_runtime":4508,"system.proc.memory.rssMB":2969.46,"system.proc.memory.availableMB":11482.94,"system.cpu":99.84,"system.proc.cpu.threads":27,"system.memory":23.65,"system.proc.memory.percent":19.74,"system.gpu.0.memoryAllocated":37.97,"_timestamp":1579515302}
-{"system.network.sent":43930716,"system.gpu.0.powerPercent":99.07,"system.network.recv":29599774,"system.disk":22.4,"system.gpu.0.powerWatts":69.35,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":56.6,"system.gpu.0.gpu":86.27,"_runtime":4539,"system.proc.memory.rssMB":2970.01,"system.proc.memory.availableMB":11332.88,"system.cpu":99.85,"system.proc.cpu.threads":27,"system.memory":24.68,"system.proc.memory.percent":19.74,"system.gpu.0.memoryAllocated":37.97,"_timestamp":1579515333}
-{"system.network.sent":43933234,"system.gpu.0.powerPercent":92.33,"system.network.recv":29605055,"system.disk":22.4,"system.gpu.0.powerWatts":64.63,"_wandb":true,"system.gpu.0.temp":77,"system.gpu.0.memory":42.7,"system.gpu.0.gpu":77.4,"_runtime":4558,"system.proc.memory.rssMB":2967.71,"system.proc.memory.availableMB":11500.52,"system.cpu":90.28,"system.proc.cpu.threads":26.5,"system.memory":23.59,"system.proc.memory.percent":19.73,"system.gpu.0.memoryAllocated":37.97,"_timestamp":1579515352}
-{"system.gpu.0.gpu": 83.2, "system.gpu.0.memory": 49.53, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 61.87, "system.gpu.0.powerPercent": 88.38, "system.cpu": 40.63, "system.memory": 23.79, "system.disk": 22.4, "system.proc.memory.availableMB": 11466.76, "system.proc.memory.rssMB": 2985.38, "system.proc.memory.percent": 19.84, "system.proc.cpu.threads": 27.53, "system.network.sent": 909422, "system.network.recv": 509851, "_wandb": true, "_timestamp": 1579515545, "_runtime": 4748}
-{"system.gpu.0.gpu": 89.87, "system.gpu.0.memory": 53.93, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 69.07, "system.gpu.0.powerPercent": 98.67, "system.cpu": 38.92, "system.memory": 23.96, "system.disk": 22.4, "system.proc.memory.availableMB": 11439.82, "system.proc.memory.rssMB": 2986.31, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 1404440, "system.network.recv": 847394, "_wandb": true, "_timestamp": 1579515575, "_runtime": 4778}
-{"system.gpu.0.gpu": 90.07, "system.gpu.0.memory": 54.67, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 71.56, "system.gpu.0.powerPercent": 102.23, "system.cpu": 39.37, "system.memory": 24.88, "system.disk": 22.4, "system.proc.memory.availableMB": 11299.48, "system.proc.memory.rssMB": 2986.31, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 2000469, "system.network.recv": 1178367, "_wandb": true, "_timestamp": 1579515605, "_runtime": 4808}
-{"system.gpu.0.gpu": 89.67, "system.gpu.0.memory": 54.47, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 72.59, "system.gpu.0.powerPercent": 103.7, "system.cpu": 38.87, "system.memory": 25.16, "system.disk": 22.4, "system.proc.memory.availableMB": 11262.04, "system.proc.memory.rssMB": 2986.31, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 2459054, "system.network.recv": 1483610, "_wandb": true, "_timestamp": 1579515635, "_runtime": 4838}
-{"system.gpu.0.gpu": 83.4, "system.gpu.0.memory": 54.27, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 67.28, "system.gpu.0.powerPercent": 96.11, "system.cpu": 91.61, "system.memory": 23.82, "system.disk": 22.4, "system.proc.memory.availableMB": 11460.2, "system.proc.memory.rssMB": 2978.67, "system.proc.memory.percent": 19.8, "system.proc.cpu.threads": 27.07, "system.network.sent": 2534056, "system.network.recv": 1531008, "_wandb": true, "_timestamp": 1579515666, "_runtime": 4869}
-{"system.gpu.0.gpu": 82.13, "system.gpu.0.memory": 46.27, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.2, "system.gpu.0.powerWatts": 65.35, "system.gpu.0.powerPercent": 93.36, "system.cpu": 61.88, "system.memory": 23.6, "system.disk": 22.4, "system.proc.memory.availableMB": 11492.29, "system.proc.memory.rssMB": 2982.36, "system.proc.memory.percent": 19.82, "system.proc.cpu.threads": 27.53, "system.network.sent": 2897035, "system.network.recv": 1763013, "_wandb": true, "_timestamp": 1579515696, "_runtime": 4899}
-{"system.gpu.0.gpu": 89.4, "system.gpu.0.memory": 53.87, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 73.6, "system.gpu.0.powerPercent": 105.15, "system.cpu": 39.19, "system.memory": 23.95, "system.disk": 22.4, "system.proc.memory.availableMB": 11443.88, "system.proc.memory.rssMB": 2986.48, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 3429106, "system.network.recv": 2170555, "_wandb": true, "_timestamp": 1579515726, "_runtime": 4929}
-{"system.gpu.0.gpu": 89.6, "system.gpu.0.memory": 54.27, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 68.58, "system.gpu.0.powerPercent": 97.98, "system.cpu": 38.87, "system.memory": 23.96, "system.disk": 22.4, "system.proc.memory.availableMB": 11438.4, "system.proc.memory.rssMB": 2986.55, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 3937817, "system.network.recv": 2482665, "_wandb": true, "_timestamp": 1579515756, "_runtime": 4959}
-{"system.gpu.0.gpu": 89.47, "system.gpu.0.memory": 53.73, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.13, "system.gpu.0.powerWatts": 70.53, "system.gpu.0.powerPercent": 100.76, "system.cpu": 38.55, "system.memory": 23.95, "system.disk": 22.4, "system.proc.memory.availableMB": 11438.8, "system.proc.memory.rssMB": 2986.55, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 4392674, "system.network.recv": 2791350, "_wandb": true, "_timestamp": 1579515786, "_runtime": 4989}
-{"system.gpu.0.gpu": 84.93, "system.gpu.0.memory": 53.53, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 62.0, "system.gpu.0.powerPercent": 88.57, "system.cpu": 69.49, "system.memory": 23.97, "system.disk": 22.4, "system.proc.memory.availableMB": 11436.26, "system.proc.memory.rssMB": 2982.08, "system.proc.memory.percent": 19.82, "system.proc.cpu.threads": 27.47, "system.network.sent": 4673834, "system.network.recv": 2961791, "_wandb": true, "_timestamp": 1579515817, "_runtime": 5019}
-{"system.gpu.0.gpu": 77.8, "system.gpu.0.memory": 45.93, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.07, "system.gpu.0.powerWatts": 67.47, "system.gpu.0.powerPercent": 96.38, "system.cpu": 84.65, "system.memory": 24.03, "system.disk": 22.4, "system.proc.memory.availableMB": 11427.03, "system.proc.memory.rssMB": 2979.86, "system.proc.memory.percent": 19.81, "system.proc.cpu.threads": 27.2, "system.network.sent": 4864024, "system.network.recv": 3061830, "_wandb": true, "_timestamp": 1579515847, "_runtime": 5050}
-{"system.gpu.0.gpu": 89.73, "system.gpu.0.memory": 54.33, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 69.8, "system.gpu.0.powerPercent": 99.72, "system.cpu": 38.77, "system.memory": 23.89, "system.disk": 22.4, "system.proc.memory.availableMB": 11447.98, "system.proc.memory.rssMB": 2986.64, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 5423241, "system.network.recv": 3411289, "_wandb": true, "_timestamp": 1579515877, "_runtime": 5080}
-{"system.gpu.0.gpu": 90.27, "system.gpu.0.memory": 54.73, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 67.86, "system.gpu.0.powerPercent": 96.95, "system.cpu": 38.88, "system.memory": 23.95, "system.disk": 22.4, "system.proc.memory.availableMB": 11445.26, "system.proc.memory.rssMB": 2986.64, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 5910743, "system.network.recv": 3736266, "_wandb": true, "_timestamp": 1579515907, "_runtime": 5110}
-{"system.gpu.0.gpu": 89.8, "system.gpu.0.memory": 54.2, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.07, "system.gpu.0.powerWatts": 62.61, "system.gpu.0.powerPercent": 89.45, "system.cpu": 38.65, "system.memory": 23.95, "system.disk": 22.4, "system.proc.memory.availableMB": 11445.15, "system.proc.memory.rssMB": 2986.65, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 6360688, "system.network.recv": 4035103, "_wandb": true, "_timestamp": 1579515937, "_runtime": 5140}
-{"system.gpu.0.gpu": 89.27, "system.gpu.0.memory": 54.13, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.07, "system.gpu.0.powerWatts": 68.24, "system.gpu.0.powerPercent": 97.48, "system.cpu": 47.29, "system.memory": 24.49, "system.disk": 22.4, "system.proc.memory.availableMB": 11361.06, "system.proc.memory.rssMB": 2984.97, "system.proc.memory.percent": 19.84, "system.proc.cpu.threads": 27.8, "system.network.sent": 6733161, "system.network.recv": 4317598, "_wandb": true, "_timestamp": 1579515967, "_runtime": 5170}
-{"system.gpu.0.gpu": 84.47, "system.gpu.0.memory": 54.2, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.07, "system.gpu.0.powerWatts": 72.41, "system.gpu.0.powerPercent": 103.44, "system.cpu": 97.73, "system.memory": 24.23, "system.disk": 22.4, "system.proc.memory.availableMB": 11398.76, "system.proc.memory.rssMB": 2978.44, "system.proc.memory.percent": 19.8, "system.proc.cpu.threads": 27.0, "system.network.sent": 6736837, "system.network.recv": 4319923, "_wandb": true, "_timestamp": 1579515998, "_runtime": 5201}
-{"system.gpu.0.gpu": 84.87, "system.gpu.0.memory": 48.0, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 72.78, "system.gpu.0.powerPercent": 103.97, "system.cpu": 47.93, "system.memory": 23.63, "system.disk": 22.4, "system.proc.memory.availableMB": 11487.11, "system.proc.memory.rssMB": 2984.94, "system.proc.memory.percent": 19.84, "system.proc.cpu.threads": 27.87, "system.network.sent": 7054680, "system.network.recv": 4643591, "_wandb": true, "_timestamp": 1579516028, "_runtime": 5231}
-{"system.gpu.0.gpu": 90.33, "system.gpu.0.memory": 54.73, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 66.87, "system.gpu.0.powerPercent": 95.53, "system.cpu": 38.9, "system.memory": 23.94, "system.disk": 22.4, "system.proc.memory.availableMB": 11446.2, "system.proc.memory.rssMB": 2986.71, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 7410527, "system.network.recv": 4970528, "_wandb": true, "_timestamp": 1579516058, "_runtime": 5261}
-{"system.gpu.0.gpu": 90.13, "system.gpu.0.memory": 54.6, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 69.15, "system.gpu.0.powerPercent": 98.78, "system.cpu": 38.59, "system.memory": 23.94, "system.disk": 22.4, "system.proc.memory.availableMB": 11445.76, "system.proc.memory.rssMB": 2986.71, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 7734688, "system.network.recv": 5280991, "_wandb": true, "_timestamp": 1579516088, "_runtime": 5291}
-{"system.gpu.0.gpu": 89.93, "system.gpu.0.memory": 54.53, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 61.66, "system.gpu.0.powerPercent": 88.09, "system.cpu": 38.88, "system.memory": 24.87, "system.disk": 22.4, "system.proc.memory.availableMB": 11301.18, "system.proc.memory.rssMB": 2986.71, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 8043312, "system.network.recv": 5591889, "_wandb": true, "_timestamp": 1579516118, "_runtime": 5321}
-{"system.gpu.0.gpu": 86.27, "system.gpu.0.memory": 55.73, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.13, "system.gpu.0.powerWatts": 71.81, "system.gpu.0.powerPercent": 102.58, "system.cpu": 86.19, "system.memory": 24.23, "system.disk": 22.4, "system.proc.memory.availableMB": 11400.44, "system.proc.memory.rssMB": 2980.1, "system.proc.memory.percent": 19.81, "system.proc.cpu.threads": 27.2, "system.network.sent": 8111115, "system.network.recv": 5659692, "_wandb": true, "_timestamp": 1579516149, "_runtime": 5352}
-{"system.gpu.0.gpu": 80.33, "system.gpu.0.memory": 45.6, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 65.31, "system.gpu.0.powerPercent": 93.29, "system.cpu": 67.51, "system.memory": 23.81, "system.disk": 22.4, "system.proc.memory.availableMB": 11463.28, "system.proc.memory.rssMB": 2982.44, "system.proc.memory.percent": 19.83, "system.proc.cpu.threads": 27.47, "system.network.sent": 8307564, "system.network.recv": 5858903, "_wandb": true, "_timestamp": 1579516179, "_runtime": 5382}
-{"system.gpu.0.gpu": 89.47, "system.gpu.0.memory": 54.4, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 74.66, "system.gpu.0.powerPercent": 106.66, "system.cpu": 38.81, "system.memory": 23.88, "system.disk": 22.4, "system.proc.memory.availableMB": 11448.29, "system.proc.memory.rssMB": 2987.0, "system.proc.memory.percent": 19.86, "system.proc.cpu.threads": 28.0, "system.network.sent": 8683943, "system.network.recv": 6193767, "_wandb": true, "_timestamp": 1579516209, "_runtime": 5412}
-{"system.gpu.0.gpu": 90.33, "system.gpu.0.memory": 54.6, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 68.42, "system.gpu.0.powerPercent": 97.75, "system.cpu": 38.71, "system.memory": 23.9, "system.disk": 22.4, "system.proc.memory.availableMB": 11448.15, "system.proc.memory.rssMB": 2986.74, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 8992753, "system.network.recv": 6501460, "_wandb": true, "_timestamp": 1579516239, "_runtime": 5442}
-{"system.gpu.0.gpu": 90.0, "system.gpu.0.memory": 54.4, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.13, "system.gpu.0.powerWatts": 64.1, "system.gpu.0.powerPercent": 91.57, "system.cpu": 39.16, "system.memory": 25.01, "system.disk": 22.4, "system.proc.memory.availableMB": 11281.43, "system.proc.memory.rssMB": 2986.74, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 9293899, "system.network.recv": 6808166, "_wandb": true, "_timestamp": 1579516269, "_runtime": 5472}
-{"system.gpu.0.gpu": 85.13, "system.gpu.0.memory": 53.07, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 69.7, "system.gpu.0.powerPercent": 99.57, "system.cpu": 63.87, "system.memory": 24.43, "system.disk": 22.4, "system.proc.memory.availableMB": 11369.37, "system.proc.memory.rssMB": 2982.88, "system.proc.memory.percent": 19.83, "system.proc.cpu.threads": 27.53, "system.network.sent": 9470905, "system.network.recv": 6984751, "_wandb": true, "_timestamp": 1579516299, "_runtime": 5502}
-{"system.gpu.0.gpu": 77.8, "system.gpu.0.memory": 46.13, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 66.82, "system.gpu.0.powerPercent": 95.46, "system.cpu": 89.57, "system.memory": 24.11, "system.disk": 22.4, "system.proc.memory.availableMB": 11416.48, "system.proc.memory.rssMB": 2979.83, "system.proc.memory.percent": 19.81, "system.proc.cpu.threads": 27.13, "system.network.sent": 9532248, "system.network.recv": 7049262, "_wandb": true, "_timestamp": 1579516330, "_runtime": 5533}
-{"system.gpu.0.gpu": 89.53, "system.gpu.0.memory": 54.07, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 69.15, "system.gpu.0.powerPercent": 98.79, "system.cpu": 38.47, "system.memory": 23.91, "system.disk": 22.4, "system.proc.memory.availableMB": 11448.2, "system.proc.memory.rssMB": 2986.75, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 9923567, "system.network.recv": 7411831, "_wandb": true, "_timestamp": 1579516360, "_runtime": 5563}
-{"system.gpu.0.gpu": 89.8, "system.gpu.0.memory": 54.27, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 71.84, "system.gpu.0.powerPercent": 102.62, "system.cpu": 38.49, "system.memory": 23.96, "system.disk": 22.4, "system.proc.memory.availableMB": 11441.91, "system.proc.memory.rssMB": 2986.76, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 10255865, "system.network.recv": 7734517, "_wandb": true, "_timestamp": 1579516390, "_runtime": 5593}
-{"system.gpu.0.gpu": 89.93, "system.gpu.0.memory": 54.67, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 68.87, "system.gpu.0.powerPercent": 98.39, "system.cpu": 39.13, "system.memory": 24.89, "system.disk": 22.4, "system.proc.memory.availableMB": 11300.53, "system.proc.memory.rssMB": 2986.76, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 10556131, "system.network.recv": 8037862, "_wandb": true, "_timestamp": 1579516420, "_runtime": 5623}
-{"system.gpu.0.gpu": 88.47, "system.gpu.0.memory": 54.27, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 68.2, "system.gpu.0.powerPercent": 97.43, "system.cpu": 42.32, "system.memory": 24.84, "system.disk": 22.4, "system.proc.memory.availableMB": 11306.62, "system.proc.memory.rssMB": 2985.61, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 27.87, "system.network.sent": 10831835, "system.network.recv": 8313411, "_wandb": true, "_timestamp": 1579516450, "_runtime": 5653}
-{"system.gpu.0.gpu": 86.33, "system.gpu.0.memory": 56.47, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 66.48, "system.gpu.0.powerPercent": 94.97, "system.cpu": 99.41, "system.memory": 24.6, "system.disk": 22.4, "system.proc.memory.availableMB": 11343.11, "system.proc.memory.rssMB": 2978.84, "system.proc.memory.percent": 19.8, "system.proc.cpu.threads": 27.0, "system.network.sent": 10834885, "system.network.recv": 8318906, "_wandb": true, "_timestamp": 1579516481, "_runtime": 5684}
-{"system.gpu.0.gpu": 82.67, "system.gpu.0.memory": 46.47, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 63.66, "system.gpu.0.powerPercent": 90.94, "system.cpu": 50.85, "system.memory": 23.57, "system.disk": 22.4, "system.proc.memory.availableMB": 11496.93, "system.proc.memory.rssMB": 2983.82, "system.proc.memory.percent": 19.83, "system.proc.cpu.threads": 27.8, "system.network.sent": 11137612, "system.network.recv": 8624537, "_wandb": true, "_timestamp": 1579516511, "_runtime": 5714}
-{"system.gpu.0.gpu": 90.13, "system.gpu.0.memory": 54.67, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 73.64, "system.gpu.0.powerPercent": 105.19, "system.cpu": 39.05, "system.memory": 24.47, "system.disk": 22.4, "system.proc.memory.availableMB": 11363.45, "system.proc.memory.rssMB": 2986.77, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 11503550, "system.network.recv": 8948214, "_wandb": true, "_timestamp": 1579516541, "_runtime": 5744}
-{"system.gpu.0.gpu": 89.93, "system.gpu.0.memory": 54.33, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.07, "system.gpu.0.powerWatts": 67.88, "system.gpu.0.powerPercent": 96.97, "system.cpu": 38.55, "system.memory": 25.14, "system.disk": 22.4, "system.proc.memory.availableMB": 11264.81, "system.proc.memory.rssMB": 2986.77, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 11826486, "system.network.recv": 9275322, "_wandb": true, "_timestamp": 1579516571, "_runtime": 5774}
-{"system.gpu.0.gpu": 89.93, "system.gpu.0.memory": 54.47, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 67.92, "system.gpu.0.powerPercent": 97.03, "system.cpu": 38.63, "system.memory": 25.14, "system.disk": 22.4, "system.proc.memory.availableMB": 11264.55, "system.proc.memory.rssMB": 2986.78, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 12134892, "system.network.recv": 9583127, "_wandb": true, "_timestamp": 1579516601, "_runtime": 5804}
-{"system.gpu.0.gpu": 86.4, "system.gpu.0.memory": 55.2, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.07, "system.gpu.0.powerWatts": 70.19, "system.gpu.0.powerPercent": 100.28, "system.cpu": 81.43, "system.memory": 24.54, "system.disk": 22.4, "system.proc.memory.availableMB": 11351.66, "system.proc.memory.rssMB": 2980.66, "system.proc.memory.percent": 19.81, "system.proc.cpu.threads": 27.27, "system.network.sent": 12226993, "system.network.recv": 9678464, "_wandb": true, "_timestamp": 1579516631, "_runtime": 5834}
-{"system.gpu.0.gpu": 79.93, "system.gpu.0.memory": 46.67, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 71.45, "system.gpu.0.powerPercent": 102.07, "system.cpu": 71.93, "system.memory": 23.88, "system.disk": 22.4, "system.proc.memory.availableMB": 11451.78, "system.proc.memory.rssMB": 2981.68, "system.proc.memory.percent": 19.82, "system.proc.cpu.threads": 27.4, "system.network.sent": 12397220, "system.network.recv": 9847699, "_wandb": true, "_timestamp": 1579516662, "_runtime": 5865}
-{"system.gpu.0.gpu": 89.93, "system.gpu.0.memory": 54.47, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 67.55, "system.gpu.0.powerPercent": 96.5, "system.cpu": 39.13, "system.memory": 24.33, "system.disk": 22.4, "system.proc.memory.availableMB": 11384.25, "system.proc.memory.rssMB": 2986.78, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 12773377, "system.network.recv": 10183584, "_wandb": true, "_timestamp": 1579516692, "_runtime": 5895}
-{"system.gpu.0.gpu": 90.4, "system.gpu.0.memory": 54.93, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 63.94, "system.gpu.0.powerPercent": 91.34, "system.cpu": 38.55, "system.memory": 25.17, "system.disk": 22.4, "system.proc.memory.availableMB": 11262.53, "system.proc.memory.rssMB": 2986.78, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 13107351, "system.network.recv": 10519791, "_wandb": true, "_timestamp": 1579516722, "_runtime": 5925}
-{"system.gpu.0.gpu": 90.13, "system.gpu.0.memory": 55.13, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 71.29, "system.gpu.0.powerPercent": 101.85, "system.cpu": 38.45, "system.memory": 25.15, "system.disk": 22.4, "system.proc.memory.availableMB": 11263.93, "system.proc.memory.rssMB": 2986.79, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 13410098, "system.network.recv": 10825219, "_wandb": true, "_timestamp": 1579516752, "_runtime": 5955}
-{"system.gpu.0.gpu": 86.47, "system.gpu.0.memory": 53.4, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 62.31, "system.gpu.0.powerPercent": 89.01, "system.cpu": 60.27, "system.memory": 24.47, "system.disk": 22.4, "system.proc.memory.availableMB": 11363.53, "system.proc.memory.rssMB": 2983.43, "system.proc.memory.percent": 19.83, "system.proc.cpu.threads": 27.6, "system.network.sent": 13609923, "system.network.recv": 11028163, "_wandb": true, "_timestamp": 1579516782, "_runtime": 5985}
-{"system.gpu.0.gpu": 78.73, "system.gpu.0.memory": 47.13, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.13, "system.gpu.0.powerWatts": 70.53, "system.gpu.0.powerPercent": 100.76, "system.cpu": 93.37, "system.memory": 24.01, "system.disk": 22.4, "system.proc.memory.availableMB": 11428.26, "system.proc.memory.rssMB": 2979.52, "system.proc.memory.percent": 19.81, "system.proc.cpu.threads": 27.07, "system.network.sent": 13651677, "system.network.recv": 11069248, "_wandb": true, "_timestamp": 1579516813, "_runtime": 6016}
-{"system.gpu.0.gpu": 90.4, "system.gpu.0.memory": 55.0, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 71.28, "system.gpu.0.powerPercent": 101.83, "system.cpu": 38.93, "system.memory": 24.26, "system.disk": 22.4, "system.proc.memory.availableMB": 11396.15, "system.proc.memory.rssMB": 2986.78, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 14050497, "system.network.recv": 11430115, "_wandb": true, "_timestamp": 1579516843, "_runtime": 6046}
-{"system.gpu.0.gpu": 90.0, "system.gpu.0.memory": 54.6, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 70.34, "system.gpu.0.powerPercent": 100.49, "system.cpu": 38.32, "system.memory": 25.16, "system.disk": 22.4, "system.proc.memory.availableMB": 11262.63, "system.proc.memory.rssMB": 2986.79, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 14367776, "system.network.recv": 11746596, "_wandb": true, "_timestamp": 1579516873, "_runtime": 6076}
-{"system.gpu.0.gpu": 90.33, "system.gpu.0.memory": 54.8, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 66.99, "system.gpu.0.powerPercent": 95.69, "system.cpu": 38.9, "system.memory": 25.17, "system.disk": 22.4, "system.proc.memory.availableMB": 11261.04, "system.proc.memory.rssMB": 2986.79, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 14675288, "system.network.recv": 12053905, "_wandb": true, "_timestamp": 1579516903, "_runtime": 6106}
-{"system.gpu.0.gpu": 89.6, "system.gpu.0.memory": 53.8, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 64.52, "system.gpu.0.powerPercent": 92.18, "system.cpu": 38.15, "system.memory": 25.0, "system.disk": 22.4, "system.proc.memory.availableMB": 11284.25, "system.proc.memory.rssMB": 2986.22, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 27.93, "system.network.sent": 14976503, "system.network.recv": 12358688, "_wandb": true, "_timestamp": 1579516933, "_runtime": 6136}
-{"system.gpu.0.gpu": 87.07, "system.gpu.0.memory": 56.8, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 69.76, "system.gpu.0.powerPercent": 99.66, "system.cpu": 99.86, "system.memory": 24.49, "system.disk": 22.4, "system.proc.memory.availableMB": 11358.03, "system.proc.memory.rssMB": 2978.66, "system.proc.memory.percent": 19.8, "system.proc.cpu.threads": 27.0, "system.network.sent": 14979520, "system.network.recv": 12361108, "_wandb": true, "_timestamp": 1579516964, "_runtime": 6166}
-{"system.gpu.0.gpu": 82.67, "system.gpu.0.memory": 45.93, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 63.45, "system.gpu.0.powerPercent": 90.65, "system.cpu": 54.01, "system.memory": 23.91, "system.disk": 22.4, "system.proc.memory.availableMB": 11447.75, "system.proc.memory.rssMB": 2984.06, "system.proc.memory.percent": 19.84, "system.proc.cpu.threads": 27.73, "system.network.sent": 15260181, "system.network.recv": 12651059, "_wandb": true, "_timestamp": 1579516994, "_runtime": 6197}
-{"system.gpu.0.gpu": 89.47, "system.gpu.0.memory": 54.07, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 71.99, "system.gpu.0.powerPercent": 102.84, "system.cpu": 38.76, "system.memory": 25.15, "system.disk": 22.4, "system.proc.memory.availableMB": 11261.86, "system.proc.memory.rssMB": 2986.86, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 15636137, "system.network.recv": 12984663, "_wandb": true, "_timestamp": 1579517024, "_runtime": 6227}
-{"system.gpu.0.gpu": 90.47, "system.gpu.0.memory": 54.87, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 70.58, "system.gpu.0.powerPercent": 100.82, "system.cpu": 38.85, "system.memory": 25.15, "system.disk": 22.4, "system.proc.memory.availableMB": 11260.95, "system.proc.memory.rssMB": 2986.86, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 15952705, "system.network.recv": 13300950, "_wandb": true, "_timestamp": 1579517054, "_runtime": 6257}
-{"system.gpu.0.gpu": 90.07, "system.gpu.0.memory": 54.4, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.07, "system.gpu.0.powerWatts": 63.22, "system.gpu.0.powerPercent": 90.32, "system.cpu": 38.6, "system.memory": 25.15, "system.disk": 22.4, "system.proc.memory.availableMB": 11258.2, "system.proc.memory.rssMB": 2986.86, "system.proc.memory.percent": 19.85, "system.proc.cpu.threads": 28.0, "system.network.sent": 16256968, "system.network.recv": 13608012, "_wandb": true, "_timestamp": 1579517084, "_runtime": 6287}
-{"system.gpu.0.gpu": 87.07, "system.gpu.0.memory": 55.4, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 76.93, "system.gpu.0.powerWatts": 69.34, "system.gpu.0.powerPercent": 99.06, "system.cpu": 78.16, "system.memory": 24.42, "system.disk": 22.4, "system.proc.memory.availableMB": 11370.62, "system.proc.memory.rssMB": 2981.34, "system.proc.memory.percent": 19.82, "system.proc.cpu.threads": 27.0, "system.network.sent": 16363038, "system.network.recv": 13713297, "_wandb": true, "_timestamp": 1579517114, "_runtime": 6317}
-{"system.gpu.0.gpu": 81.0, "system.gpu.0.memory": 46.2, "system.gpu.0.memoryAllocated": 37.97, "system.gpu.0.temp": 77.0, "system.gpu.0.powerWatts": 68.6, "system.gpu.0.powerPercent": 98.0, "system.cpu": 75.17, "system.memory": 23.98, "system.disk": 22.4, "system.proc.memory.availableMB": 11435.31, "system.proc.memory.rssMB": 2981.27, "system.proc.memory.percent": 19.82, "system.proc.cpu.threads": 27.33, "system.network.sent": 16512975, "system.network.recv": 13866408, "_wandb": true, "_timestamp": 1579517145, "_runtime": 6348}
diff --git a/wandb/run-20200120_085945-17rqrqo6/wandb-history.jsonl b/wandb/run-20200120_085945-17rqrqo6/wandb-history.jsonl
deleted file mode 100644
index 1604b6a..0000000
--- a/wandb/run-20200120_085945-17rqrqo6/wandb-history.jsonl
+++ /dev/null
@@ -1,11 +0,0 @@
-{"val_acc": 0.7677541371158393, "train_acc": 0.8186220738908209, "_runtime": 162.0772614479065, "_timestamp": 1579515517.0878558, "_step": 0}
-{"val_acc": 0.7709692671394799, "train_acc": 0.8241650523957337, "_runtime": 324.7855432033539, "_timestamp": 1579515679.7961376, "_step": 1}
-{"val_acc": 0.7713475177304965, "train_acc": 0.8255303755222069, "_runtime": 486.8800859451294, "_timestamp": 1579515841.8906803, "_step": 2}
-{"val_acc": 0.7716312056737589, "train_acc": 0.8277358974957406, "_runtime": 648.8371312618256, "_timestamp": 1579516003.8477256, "_step": 3}
-{"val_acc": 0.7734278959810875, "train_acc": 0.8315634700212383, "_runtime": 810.486154794693, "_timestamp": 1579516165.4967492, "_step": 4}
-{"val_acc": 0.7704018912529551, "train_acc": 0.8326837351506523, "_runtime": 972.2291593551636, "_timestamp": 1579516327.2397537, "_step": 5}
-{"val_acc": 0.7711583924349882, "train_acc": 0.8339090251359489, "_runtime": 1133.805284500122, "_timestamp": 1579516488.8158789, "_step": 6}
-{"val_acc": 0.7719148936170213, "train_acc": 0.8328471071486918, "_runtime": 1295.45543050766, "_timestamp": 1579516650.4660249, "_step": 7}
-{"val_acc": 0.7720094562647755, "train_acc": 0.8373164982379163, "_runtime": 1457.0369317531586, "_timestamp": 1579516812.0475261, "_step": 8}
-{"val_acc": 0.7750354609929078, "train_acc": 0.8368847293859547, "_runtime": 1618.578299999237, "_timestamp": 1579516973.5888944, "_step": 9}
-{"val_acc": 0.774468085106383, "train_acc": 0.8385651270800756, "_runtime": 1780.1562161445618, "_timestamp": 1579517135.1668105, "_step": 10}
diff --git a/wandb/run-20200120_085945-17rqrqo6/wandb-metadata.json b/wandb/run-20200120_085945-17rqrqo6/wandb-metadata.json
deleted file mode 100644
index 2e84380..0000000
--- a/wandb/run-20200120_085945-17rqrqo6/wandb-metadata.json
+++ /dev/null
@@ -1,29 +0,0 @@
-{
-    "root": "/home/ubamba98/droughtwatch",
-    "program": "<python with no main file>",
-    "git": {
-        "remote": "https://github.com/ubamba98/droughtwatch",
-        "commit": "4e7b9b38b8d5d3ec44d43373b8e263f50ead87a3"
-    },
-    "email": "ubamba98@gmail.com",
-    "startedAt": "2020-01-20T10:15:55.010594",
-    "host": "ccw-iclr",
-    "username": "ubamba98",
-    "executable": "/home/ubamba98/anaconda3/bin/python",
-    "os": "Linux-4.9.0-11-amd64-x86_64-with-debian-9.11",
-    "python": "3.7.3",
-    "gpu": "Tesla T4",
-    "gpu_count": 1,
-    "cpu_count": 4,
-    "cuda": "10.0.130",
-    "args": [
-        "-f",
-        "/home/ubamba98/.local/share/jupyter/runtime/kernel-f86872c7-f93b-4579-ae59-db40fc8ec9c5.json"
-    ],
-    "state": "running",
-    "jobType": null,
-    "mode": "run",
-    "name": "efficentnet-b3-765",
-    "project": "droughtwatch",
-    "heartbeatAt": "2020-01-20T10:45:35.078089"
-}
diff --git a/wandb/run-20200120_085945-17rqrqo6/wandb-summary.json b/wandb/run-20200120_085945-17rqrqo6/wandb-summary.json
deleted file mode 100644
index 08e478c..0000000
--- a/wandb/run-20200120_085945-17rqrqo6/wandb-summary.json
+++ /dev/null
@@ -1 +0,0 @@
-{"graph_0": {"_type": "graph", "edges": [], "nodes": [{"id": 139786309532640, "name": "conv_stem", "class_name": "Conv2dSame(3, 40, kernel_size=(3, 3), stride=(2, 2), bias=False)", "parameters": [["weight", [40, 3, 3, 3]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [1080]}, {"id": 139786364143152, "name": "bn1", "class_name": "BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [40]], ["bias", [40]]], "output_shape": [[256, 40, 32, 32]], "num_parameters": [40, 40]}, {"id": 139786309532920, "name": "blocks.0.0", "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)\n  (bn1): BatchNorm2d(40, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(40, 10, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(10, 40, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(40, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [40, 1, 3, 3]], ["bn1.weight", [40]], ["bn1.bias", [40]], ["se.conv_reduce.weight", [10, 40, 1, 1]], ["se.conv_reduce.bias", [10]], ["se.conv_expand.weight", [40, 10, 1, 1]], ["se.conv_expand.bias", [40]], ["conv_pw.weight", [24, 40, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [360, 40, 40, 400, 10, 400, 40, 960, 24, 24]}, {"id": 139786309532136, "name": "blocks.0.1", "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)\n  (bn1): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(24, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 24, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pw): Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(24, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_dw.weight", [24, 1, 3, 3]], ["bn1.weight", [24]], ["bn1.bias", [24]], ["se.conv_reduce.weight", [6, 24, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [24, 6, 1, 1]], ["se.conv_expand.bias", [24]], ["conv_pw.weight", [24, 24, 1, 1]], ["bn2.weight", [24]], ["bn2.bias", [24]]], "output_shape": [[256, 24, 32, 32]], "num_parameters": [216, 24, 24, 144, 6, 144, 24, 576, 24, 24]}, {"id": 139786520437928, "name": "blocks.1.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(144, 144, kernel_size=(3, 3), stride=(2, 2), groups=144, bias=False)\n  (bn2): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [144, 24, 1, 1]], ["bn1.weight", [144]], ["bn1.bias", [144]], ["conv_dw.weight", [144, 1, 3, 3]], ["bn2.weight", [144]], ["bn2.bias", [144]], ["se.conv_reduce.weight", [6, 144, 1, 1]], ["se.conv_reduce.bias", [6]], ["se.conv_expand.weight", [144, 6, 1, 1]], ["se.conv_expand.bias", [144]], ["conv_pwl.weight", [32, 144, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [3456, 144, 144, 1296, 144, 144, 864, 6, 864, 144, 4608, 32, 32]}, {"id": 139786364058648, "name": "blocks.1.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"id": 139786309054928, "name": "blocks.1.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 3, 3]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [32, 192, 1, 1]], ["bn3.weight", [32]], ["bn3.bias", [32]]], "output_shape": [[256, 32, 16, 16]], "num_parameters": [6144, 192, 192, 1728, 192, 192, 1536, 8, 1536, 192, 6144, 32, 32]}, {"id": 139786388120296, "name": "blocks.2.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(192, 192, kernel_size=(5, 5), stride=(2, 2), groups=192, bias=False)\n  (bn2): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(192, 8, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(8, 192, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [192, 32, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.weight", [192, 1, 5, 5]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["se.conv_reduce.weight", [8, 192, 1, 1]], ["se.conv_reduce.bias", [8]], ["se.conv_expand.weight", [192, 8, 1, 1]], ["se.conv_expand.bias", [192]], ["conv_pwl.weight", [48, 192, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [6144, 192, 192, 4800, 192, 192, 1536, 8, 1536, 192, 9216, 48, 48]}, {"id": 139786309130616, "name": "blocks.2.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"id": 139786309130896, "name": "blocks.2.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 5, 5]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [48, 288, 1, 1]], ["bn3.weight", [48]], ["bn3.bias", [48]]], "output_shape": [[256, 48, 8, 8]], "num_parameters": [13824, 288, 288, 7200, 288, 288, 3456, 12, 3456, 288, 13824, 48, 48]}, {"id": 139786309129384, "name": "blocks.3.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(288, 288, kernel_size=(3, 3), stride=(2, 2), groups=288, bias=False)\n  (bn2): BatchNorm2d(288, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [288, 48, 1, 1]], ["bn1.weight", [288]], ["bn1.bias", [288]], ["conv_dw.weight", [288, 1, 3, 3]], ["bn2.weight", [288]], ["bn2.bias", [288]], ["se.conv_reduce.weight", [12, 288, 1, 1]], ["se.conv_reduce.bias", [12]], ["se.conv_expand.weight", [288, 12, 1, 1]], ["se.conv_expand.bias", [288]], ["conv_pwl.weight", [96, 288, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [13824, 288, 288, 2592, 288, 288, 3456, 12, 3456, 288, 27648, 96, 96]}, {"id": 139786309128992, "name": "blocks.3.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 139786309130448, "name": "blocks.3.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 139788372071200, "name": "blocks.3.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 139786364773152, "name": "blocks.3.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 3, 3]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [96, 576, 1, 1]], ["bn3.weight", [96]], ["bn3.bias", [96]]], "output_shape": [[256, 96, 4, 4]], "num_parameters": [55296, 576, 576, 5184, 576, 576, 13824, 24, 13824, 576, 55296, 96, 96]}, {"id": 139786363212968, "name": "blocks.4.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)\n  (bn2): BatchNorm2d(576, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(576, 24, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(24, 576, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(576, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [576, 96, 1, 1]], ["bn1.weight", [576]], ["bn1.bias", [576]], ["conv_dw.weight", [576, 1, 5, 5]], ["bn2.weight", [576]], ["bn2.bias", [576]], ["se.conv_reduce.weight", [24, 576, 1, 1]], ["se.conv_reduce.bias", [24]], ["se.conv_expand.weight", [576, 24, 1, 1]], ["se.conv_expand.bias", [576]], ["conv_pwl.weight", [136, 576, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [55296, 576, 576, 14400, 576, 576, 13824, 24, 13824, 576, 78336, 136, 136]}, {"id": 139786363970504, "name": "blocks.4.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 139786365239192, "name": "blocks.4.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 139786361195208, "name": "blocks.4.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 139786364977504, "name": "blocks.4.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(816, 816, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(136, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [136, 816, 1, 1]], ["bn3.weight", [136]], ["bn3.bias", [136]]], "output_shape": [[256, 136, 4, 4]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 110976, 136, 136]}, {"id": 139786364035592, "name": "blocks.5.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(136, 816, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2dSame(816, 816, kernel_size=(5, 5), stride=(2, 2), groups=816, bias=False)\n  (bn2): BatchNorm2d(816, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(816, 34, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(34, 816, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(816, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [816, 136, 1, 1]], ["bn1.weight", [816]], ["bn1.bias", [816]], ["conv_dw.weight", [816, 1, 5, 5]], ["bn2.weight", [816]], ["bn2.bias", [816]], ["se.conv_reduce.weight", [34, 816, 1, 1]], ["se.conv_reduce.bias", [34]], ["se.conv_expand.weight", [816, 34, 1, 1]], ["se.conv_expand.bias", [816]], ["conv_pwl.weight", [232, 816, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [110976, 816, 816, 20400, 816, 816, 27744, 34, 27744, 816, 189312, 232, 232]}, {"id": 139786309532080, "name": "blocks.5.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 139786291972640, "name": "blocks.5.2", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 139786291970232, "name": "blocks.5.3", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 139786291971520, "name": "blocks.5.4", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 139786291970176, "name": "blocks.5.5", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 232, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(232, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 5, 5]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [232, 1392, 1, 1]], ["bn3.weight", [232]], ["bn3.bias", [232]]], "output_shape": [[256, 232, 2, 2]], "num_parameters": [322944, 1392, 1392, 34800, 1392, 1392, 80736, 58, 80736, 1392, 322944, 232, 232]}, {"id": 139786291972808, "name": "blocks.6.0", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(232, 1392, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(1392, 1392, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1392, bias=False)\n  (bn2): BatchNorm2d(1392, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(1392, 58, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(58, 1392, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(1392, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1392, 232, 1, 1]], ["bn1.weight", [1392]], ["bn1.bias", [1392]], ["conv_dw.weight", [1392, 1, 3, 3]], ["bn2.weight", [1392]], ["bn2.bias", [1392]], ["se.conv_reduce.weight", [58, 1392, 1, 1]], ["se.conv_reduce.bias", [58]], ["se.conv_expand.weight", [1392, 58, 1, 1]], ["se.conv_expand.bias", [1392]], ["conv_pwl.weight", [384, 1392, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [322944, 1392, 1392, 12528, 1392, 1392, 80736, 58, 80736, 1392, 534528, 384, 384]}, {"id": 139786328887368, "name": "blocks.6.1", "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(384, 2304, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (conv_dw): Conv2d(2304, 2304, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2304, bias=False)\n  (bn2): BatchNorm2d(2304, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n  (se): SqueezeExcite(\n    (conv_reduce): Conv2d(2304, 96, kernel_size=(1, 1), stride=(1, 1))\n    (conv_expand): Conv2d(96, 2304, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(2304, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [2304, 384, 1, 1]], ["bn1.weight", [2304]], ["bn1.bias", [2304]], ["conv_dw.weight", [2304, 1, 3, 3]], ["bn2.weight", [2304]], ["bn2.bias", [2304]], ["se.conv_reduce.weight", [96, 2304, 1, 1]], ["se.conv_reduce.bias", [96]], ["se.conv_expand.weight", [2304, 96, 1, 1]], ["se.conv_expand.bias", [2304]], ["conv_pwl.weight", [384, 2304, 1, 1]], ["bn3.weight", [384]], ["bn3.bias", [384]]], "output_shape": [[256, 384, 2, 2]], "num_parameters": [884736, 2304, 2304, 20736, 2304, 2304, 221184, 96, 221184, 2304, 884736, 384, 384]}, {"id": 139786309532192, "name": "conv_head", "class_name": "Conv2d(384, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)", "parameters": [["weight", [1536, 384, 1, 1]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [589824]}, {"id": 139786328888432, "name": "bn2", "class_name": "BatchNorm2d(1536, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [1536]], ["bias", [1536]]], "output_shape": [[256, 1536, 2, 2]], "num_parameters": [1536, 1536]}, {"id": 139786328888488, "name": "global_pool", "class_name": "SelectAdaptivePool2d (output_size=1, pool_type=avg)", "parameters": [], "output_shape": [[256, 1536, 1, 1]], "num_parameters": []}, {"id": 139786328888600, "name": "classifier", "class_name": "Linear(in_features=1536, out_features=4, bias=True)", "parameters": [["weight", [4, 1536]], ["bias", [4]]], "output_shape": [[256, 4]], "num_parameters": [6144, 4]}], "format": "torch"}, "gradients/classifier.bias": {"bins": [-0.037257447838783264, -0.035971060395240784, -0.034684669226408005, -0.033398281782865524, -0.032111890614032745, -0.030825503170490265, -0.029539113864302635, -0.028252724558115005, -0.026966335251927376, -0.025679945945739743, -0.024393556639552116, -0.023107167333364487, -0.02182077988982201, -0.020534390583634377, -0.019248001277446747, -0.017961611971259117, -0.016675222665071487, -0.015388833358883858, -0.014102444052696228, -0.012816054746508598, -0.011529665440320969, -0.010243277996778488, -0.008956888690590858, -0.007670499384403229, -0.006384110078215599, -0.005097720772027969, -0.003811333328485489, -0.00252494215965271, -0.0012385547161102295, 4.783645272254944e-05, 0.00133422389626503, 0.002620615065097809, 0.003907002508640289, 0.00519338995218277, 0.006479781121015549, 0.007766168564558029, 0.009052559733390808, 0.010338947176933289, 0.011625338345766068, 0.012911725789308548, 0.014198116958141329, 0.015484504401683807, 0.016770891845226288, 0.018057283014059067, 0.019343670457601547, 0.02063006162643433, 0.021916449069976807, 0.023202840238809586, 0.024489227682352063, 0.025775618851184845, 0.027062006294727325, 0.02834839373826981, 0.029634781181812286, 0.030921176075935364, 0.032207563519477844, 0.033493950963020325, 0.034780338406562805, 0.036066725850105286, 0.03735312074422836, 0.03863950818777085, 0.03992589563131333, 0.04121228307485581, 0.04249867796897888, 0.04378506541252136, 0.04507145285606384], "_type": "histogram", "values": [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]}, "_step": 0, "_timestamp": 1579511592.0016944, "_runtime": 799.914026260376, "gradients/classifier.weight": {"bins": [-0.0888357013463974, -0.08612215518951416, -0.08340860903263092, -0.08069506287574768, -0.07798151671886444, -0.0752679631114006, -0.07255441695451736, -0.06984087079763412, -0.06712732464075089, -0.06441377848386765, -0.061700232326984406, -0.05898668244481087, -0.05627313628792763, -0.05355959013104439, -0.05084604024887085, -0.04813249409198761, -0.04541894793510437, -0.04270540177822113, -0.03999185562133789, -0.03727830573916435, -0.03456475958228111, -0.03185121342539787, -0.029137663543224335, -0.026424117386341095, -0.023710571229457855, -0.020997025072574615, -0.018283478915691376, -0.015569932758808136, -0.0128563791513443, -0.01014283299446106, -0.00742928683757782, -0.00471574068069458, -0.0020021945238113403, 0.0007113516330718994, 0.003424897789955139, 0.006138443946838379, 0.008851990103721619, 0.011565543711185455, 0.014279089868068697, 0.016992636024951935, 0.019706182181835175, 0.022419728338718414, 0.025133274495601658, 0.027846820652484897, 0.03056037425994873, 0.03327392041683197, 0.03598746657371521, 0.03870101273059845, 0.04141455888748169, 0.04412810504436493, 0.04684165120124817, 0.04955519735813141, 0.05226874351501465, 0.05498228967189789, 0.05769583582878113, 0.06040938198566437, 0.0631229430437088, 0.06583648920059204, 0.06855003535747528, 0.07126358151435852, 0.07397712767124176, 0.076690673828125, 0.07940421998500824, 0.08211776614189148, 0.08483131229877472], "_type": "histogram", "values": [1, 0, 0, 0, 2, 0, 1, 0, 10, 6, 9, 13, 11, 18, 18, 29, 47, 58, 58, 70, 96, 103, 104, 181, 183, 180, 232, 264, 280, 262, 304, 320, 289, 307, 281, 323, 255, 289, 218, 224, 185, 155, 132, 132, 118, 76, 65, 59, 48, 22, 30, 26, 17, 9, 5, 3, 4, 2, 3, 3, 1, 2, 0, 1]}, "train_acc": 0.8385651270800756, "val_acc": 0.774468085106383}
diff --git a/wandb/settings b/wandb/settings
index 24e2065..0145e0b 100644
--- a/wandb/settings
+++ b/wandb/settings
@@ -1,4 +1,4 @@
 [default]
 entity = ubamba98
-project = droughtwatch
+project = dr-challenge
 
